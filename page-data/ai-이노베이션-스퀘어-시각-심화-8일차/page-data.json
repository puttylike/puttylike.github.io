{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/ai-이노베이션-스퀘어-시각-심화-8일차/",
    "result": {"data":{"markdownRemark":{"html":"<p>오늘까지 CNN을 배웠다. 예제 위주로 진행되었다. 다음주는 실습이다...!</p>\n<hr>\n<h3 id=\"8일차\" style=\"position:relative;\">8일차<a href=\"#8%EC%9D%BC%EC%B0%A8\" aria-label=\"8일차 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h5 id=\"예제-4-1\" style=\"position:relative;\">예제 4-1<a href=\"#%EC%98%88%EC%A0%9C-4-1\" aria-label=\"예제 4 1 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>CNN에서 연산을 진행하다 보면, 사람이 보기에는 concrete한 data에서 점점 abstract한 데이터가 된다.<br>\n컴퓨터가 보기에는 디테일한 feature를 알 수 있게 된다.</p>\n<ul>\n<li>색깔은 특징이 아니다.</li>\n</ul>\n<p>ex) 검은 차, 파란 차 둘다 자동차이다.</p>\n<p>w, b를 듥고있는 필터는 제 자리에 있을 뿐 이동하는 건 데이터이다.</p>\n<h5 id=\"예제-4-2\" style=\"position:relative;\">예제 4-2<a href=\"#%EC%98%88%EC%A0%9C-4-2\" aria-label=\"예제 4 2 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>data 부분은 예제 4-1과 똑같다. padding이 영향을 주는데 이 부분은 이전과 변화가 없어서..</p>\n<p>832 =(1x5x5x32) +32<br>\ncf. 1개의 데이터에 대해서 : 1x...</p>\n<p>51264 = (32x5x5x64) + 64<br>\nex) (10,32,5,5,64) : 전체데이터가10번들어오는데,한번에32개씩,...</p>\n<p>cf. 기상청은 3200개...</p>\n<p>오버피팅\r\n학습 데이터에 w,b 최적화되는 현상\r\ntrani 시 학습 데이터에 대해 정확도 증가</p>\n<p>train은 내려가는데, valid graph loss가 올라간다.?\r\n틀리는 숫자는 계속 틀리는데 그 값이 점점 커진다.\r\n=> dropout 효과 => 이상하게 만드는 w를 제거해 개선됨</p>\n<p>flatten<br>\n= bottle neck</p>\n<ul>\n<li>insight : data의 '특징'이 압축된 곳이다.</li>\n</ul>\n<p>=> 특징을 확인해도 되고, 다른 곳에 써먹어도 되고.</p>\n<p>index label prediction<br>\n자꾸 틀리는 갑을 찾아낼 수 있다. => confusion matrix</p>\n<h5 id=\"process\" style=\"position:relative;\">Process<a href=\"#process\" aria-label=\"process permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>w,b 계산<br>\ndata shape<br>\nacc, lsos -> analyze<br>\ncnn 아키텍처 구성<br>\nflatten -> insight</p>\n<h5 id=\"feature-map-시각화\" style=\"position:relative;\">feature map 시각화<a href=\"#feature-map-%EC%8B%9C%EA%B0%81%ED%99%94\" aria-label=\"feature map 시각화 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>tf 2.0에서는 모든 layer가 list로 인덱싱 돼 있다.</p>\n<p>functional api에서 다양한 레이어를 만들어 조합했다.\r\n=> feature map 시각화로 응용 가능</p>\n<p>d</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#8%EC%9D%BC%EC%B0%A8\">8일차</a></p>\n<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%98%88%EC%A0%9C-4-1\">예제 4-1</a></li>\n<li><a href=\"#%EC%98%88%EC%A0%9C-4-2\">예제 4-2</a></li>\n<li><a href=\"#process\">Process</a></li>\n<li><a href=\"#feature-map-%EC%8B%9C%EA%B0%81%ED%99%94\">feature map 시각화</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"AI 이노베이션 스퀘어 3기 심화 시각반 8일차 후기"}}},"pageContext":{"slug":"/ai-이노베이션-스퀘어-시각-심화-8일차/"}},
    "staticQueryHashes": ["3159585216"]}