{"componentChunkName":"component---src-templates-blog-post-js","path":"/ai-이노베이션-스퀘어-언어-3일차/","result":{"data":{"markdownRemark":{"html":"<p>오늘부터 본격적으로 진도가 나가는 느낌.<br>\n원래 강의 들을 때 깃허브 블로그에 올릴 내용까지 다 정리하는 편인데, 이번엔 좀 힘들 거 같다 ㅠㅠ</p>\n<p>강의 끝나고 글을 쓰면서 복기를 찬찬히 해야겠다. 가르치고 싶은 게 많으신 듯. 강의 자료는 아직 받지 못 했다.</p>\n<hr>\n<h3 id=\"3일차\" style=\"position:relative;\">3일차<a href=\"#3%EC%9D%BC%EC%B0%A8\" aria-label=\"3일차 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">PS C:\\20210724> python -m venv venv_20210724\r\nPS C:\\20210724> venv_20210724\\Scripts\\activate\r\n(venv_20210724) PS C:\\20210724> pip install -r requirements.txt</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>지난주에 이어 정규식을 좀 더 배웠다.<br>\n지난주처럼 <a href=\"https://regexr.com/\">https://regexr.com/</a> 에서 계속 볼 거다만, <a href=\"https://ihateregex.io/\">https://ihateregex.io/</a> 이런 사이트도 있긴 한다.</p>\n<p>지난 시간에는 파이썬 re 패키지에서 findall 메소드를 주로 사용했다.</p>\n<h4 id=\"1-compile\" style=\"position:relative;\">(1) compile<a href=\"#1-compile\" aria-label=\"1 compile permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>패턴 매칭을 해서 찾을 때 사용한다.\r\nre.IGNORECASE 옵션으로 대소문자 구분 없이 값을 찾았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># a로 시작하고, b로 끝나는 걸 찾는다</span>\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\\d*b\"</span><span class=\"token punctuation\">,</span> re<span class=\"token punctuation\">.</span>IGNORECASE<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 대소문자 구분 옵션</span>\r\np<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">\"a234122B2352Ab\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">[</span><span class=\"token string\">'a234122B'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Ab'</span><span class=\"token punctuation\">]</span>\r\n\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"a\\d*b\"</span><span class=\"token punctuation\">)</span>\r\np<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">\"a234122B2352Ab\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># space 문자들의 갯수를 찾아보고 싶다</span>\r\n<span class=\"token comment\"># \\s : 모든 공백 문자들을 의미 [\\t\\n\\r\\f\\v]와 동일</span>\r\n<span class=\"token comment\"># \\S : [^\\t\\n\\r\\f\\v]</span>\r\n\r\ndoc <span class=\"token operator\">=</span> <span class=\"token string\">'ad \\t \\t \\t how are \\t you today ... asdfjla;joeito;angl;a4o3'</span>\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\s\"</span><span class=\"token punctuation\">)</span>\r\nm <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">[</span><span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\t'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\t'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\t'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\t'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">' '</span><span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\s\"</span><span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 27</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"2-match-search\" style=\"position:relative;\">(2) match, search<a href=\"#2-match-search\" aria-label=\"2 match search permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># match() 함수 : (원본) 문자열의 시작 부분부터 패턴이 매칭되는지 검사</span>\r\n<span class=\"token comment\"># 문자열 중간에 패턴이 있더라도 시작부터 없으면 찾지 않는다.</span>\r\n<span class=\"token comment\"># match가 된 값을 얻으려면 group 이라는 메서드를 사용</span>\r\n\r\n<span class=\"token comment\"># doc = 'a \\t \\t \\t how are \\t you today ... asdfjla;joeito;angl;a4o3' # 못 찾는다</span>\r\ndoc <span class=\"token operator\">=</span> <span class=\"token string\">' \\t \\t \\t how are \\t you today ... asdfjla;joeito;angl;a4o3'</span> <span class=\"token comment\"># 찾는다</span>\r\nm <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span> <span class=\"token number\">17</span> <span class=\"token number\">17</span>\r\nhow are you today <span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span> asdfjla<span class=\"token punctuation\">;</span>joeito<span class=\"token punctuation\">;</span>angl<span class=\"token punctuation\">;</span>a4o3\r\n\r\n\r\n<span class=\"token comment\"># search() : 처음부터 매칭되는 것을 찾아갑니다. 매칭되는 결과가 있다면 검사를 중지</span>\r\ndoc <span class=\"token operator\">=</span> <span class=\"token string\">\"lololololo\"</span>\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"olo\"</span><span class=\"token punctuation\">)</span>\r\nm <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token number\">1</span> <span class=\"token number\">4</span> <span class=\"token number\">3</span>\r\nlololo\r\nolo\r\n\r\ndoc <span class=\"token operator\">=</span> <span class=\"token string\">\"olololololo\"</span>\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"olo\"</span><span class=\"token punctuation\">)</span>\r\nm <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>match<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>start<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">[</span>m<span class=\"token punctuation\">.</span>end<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token number\">0</span> <span class=\"token number\">3</span> <span class=\"token number\">3</span>\r\nlolololo</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"3-finditer\" style=\"position:relative;\">(3) finditer<a href=\"#3-finditer\" aria-label=\"3 finditer permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>각각에 대한 위치 정보도 알 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">documents <span class=\"token operator\">=</span> <span class=\"token string\">'asdfj;laieorkdjf;aliejr;akjdf23k4j;lajds;lasdf33joqweitulad;ai@weutadg;lajoeti53uaodkgjierasdkfjqoitf3f3lskdnfoqwi23423523ekhas;ioew=adgoiea3343skdfl_asdkfei_asdjkfla****askeasfff{{{{{asdfjowei@@##askdfoie}}}}}'</span>\r\n\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[a-zA-Z_]\\w*\"</span><span class=\"token punctuation\">)</span>\r\niterator <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>finditer<span class=\"token punctuation\">(</span>documents<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">for</span> match <span class=\"token keyword\">in</span> iterator<span class=\"token punctuation\">:</span>\r\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>match<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> match<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> asdfj\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span> laieorkdjf\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23</span><span class=\"token punctuation\">)</span> aliejr\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">24</span><span class=\"token punctuation\">,</span> <span class=\"token number\">34</span><span class=\"token punctuation\">)</span> akjdf23k4j\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">35</span><span class=\"token punctuation\">,</span> <span class=\"token number\">40</span><span class=\"token punctuation\">)</span> lajds\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">59</span><span class=\"token punctuation\">)</span> lasdf33joqweitulad\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">60</span><span class=\"token punctuation\">,</span> <span class=\"token number\">62</span><span class=\"token punctuation\">)</span> ai\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">70</span><span class=\"token punctuation\">)</span> weutadg\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">71</span><span class=\"token punctuation\">,</span> <span class=\"token number\">127</span><span class=\"token punctuation\">)</span> lajoeti53uaodkgjierasdkfjqoitf3f3lskdnfoqwi23423523ekhas\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">,</span> <span class=\"token number\">132</span><span class=\"token punctuation\">)</span> ioew\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">133</span><span class=\"token punctuation\">,</span> <span class=\"token number\">166</span><span class=\"token punctuation\">)</span> adgoiea3343skdfl_asdkfei_asdjkfla\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">170</span><span class=\"token punctuation\">,</span> <span class=\"token number\">179</span><span class=\"token punctuation\">)</span> askeasfff\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">184</span><span class=\"token punctuation\">,</span> <span class=\"token number\">193</span><span class=\"token punctuation\">)</span> asdfjowei\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">197</span><span class=\"token punctuation\">,</span> <span class=\"token number\">205</span><span class=\"token punctuation\">)</span> askdfoie</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"4-\" style=\"position:relative;\">(4) |<a href=\"#4-\" aria-label=\"4  permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># | : 논리연산 or</span>\r\ndoc <span class=\"token operator\">=</span> <span class=\"token string\">r'\\n for new [line, ] \\section and \\document and \\\\\\section \\n'</span>\r\nregExp_brackets <span class=\"token operator\">=</span> <span class=\"token string\">\"[\\[\\]]\"</span>\r\nregExp_slashes <span class=\"token operator\">=</span> <span class=\"token string\">\"[\\\\\\]\"</span>\r\n\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>regExp_brackets <span class=\"token operator\">+</span> <span class=\"token string\">\"|\"</span> <span class=\"token operator\">+</span> regExp_slashes<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">[</span><span class=\"token string\">'\\\\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'['</span><span class=\"token punctuation\">,</span> <span class=\"token string\">']'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\\\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\\\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\\\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\\\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\\\'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'\\\\'</span><span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"5--\" style=\"position:relative;\">(5) ^, $<a href=\"#5--\" aria-label=\"5   permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>^</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># ^ : [] 안에 ^이 존재한다면, 그 클래스 문자 이외의 문자들을 의미한다!</span>\r\n<span class=\"token comment\"># [] 안에 ^ 이 없는 경우, regex에서 사용하는 문자열이 인덱스가 0부터 시작하는지 확인</span>\r\n<span class=\"token comment\"># vim 이라는 리눅스에서 많이 사용하는 에디터의 경우, 편집 시 ^를 입력하면, 바로 해당 문장의 앞으로 이동한다.</span>\r\n\r\nm <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">\"From\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\" From Here to Eternity\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span> From\r\n\r\n\r\nm <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">\"^From\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\" From Here to Eternity\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># None # 못 찾음</span>\r\n\r\nm <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">\"From\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Reciting From Here to Eternity\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13</span><span class=\"token punctuation\">)</span> From\r\n\r\n\r\nm <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">\"^From\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"Reciting From Here to Eternity\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># None # 못 찾음</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>$</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># $ : 앞에서 살펴본 ^의 반대 개념,</span>\r\n<span class=\"token comment\"># vim이라는 리눅스에서 많이 사용하는 에디터의 경우, $ 를 입력하면, 바로 해당 문장의 끝으로 이동한다.</span>\r\n\r\nm <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">\"}$\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"{block}\"</span><span class=\"token punctuation\">)</span>\r\nm<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'}'</span><span class=\"token punctuation\">)</span>\r\n\r\nm <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">\"}$\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"{block} \"</span><span class=\"token punctuation\">)</span>\r\nm<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># error 발생</span>\r\n\r\nm <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">\"}$\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"{block}\\n\"</span><span class=\"token punctuation\">)</span>\r\nm<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'}'</span><span class=\"token punctuation\">)</span>\r\n\r\nm <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">\"}$\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">r\"{block}\\n\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># \\n을 문자로 인식해서 못 찾음</span>\r\nm<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># error 발생</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"6-\" style=\"position:relative;\">(6) ()<a href=\"#6-\" aria-label=\"6  permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># () : 단일 문자처럼 다루고 싶은 문자들 모아두는 것</span>\r\n\r\ndoc <span class=\"token operator\">=</span> <span class=\"token string\">\"find inthethethethethegroup\"</span>\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(the)+\"</span><span class=\"token punctuation\">)</span>\r\nm <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span>\r\nm<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'thethethethethe'</span><span class=\"token punctuation\">)</span>\r\n\r\n\r\ndoc <span class=\"token operator\">=</span> <span class=\"token string\">\"find inthethethethethegroup\"</span>\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(the)\"</span><span class=\"token punctuation\">)</span>\r\nm <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">.</span>span<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> m<span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span> the\r\n<span class=\"token punctuation\">[</span><span class=\"token string\">'the'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'the'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'the'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'the'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'the'</span><span class=\"token punctuation\">]</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"7-split-sub\" style=\"position:relative;\">(7) split(), sub()<a href=\"#7-split-sub\" aria-label=\"7 split sub permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>split()</li>\n</ul>\n<p>compile로 나온 결과에 대해서만 split 을 쓰면 token화에 유용하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># word tokenizer를 간단히 경험!</span>\r\n\r\ndoc <span class=\"token operator\">=</span> <span class=\"token string\">\"This test, --++**\\\\ is short and sweet ,,... 45u4__&amp;&amp;##buft\"</span>\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\w+\"</span><span class=\"token punctuation\">)</span>\r\np<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># ['', ' ', ', --++**\\\\ ', ' ', ' ', ' ', ' ,,... ', '&amp;&amp;##', '']</span>\r\n\r\ndoc <span class=\"token operator\">=</span> <span class=\"token string\">\"This test, --++**\\\\ is short and sweet ,,... 45u4__&amp;&amp;##buft\"</span>\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\W+\"</span><span class=\"token punctuation\">)</span>\r\np<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># ['This', 'test', 'is', 'short', 'and', 'sweet', '45u4__', 'buft']</span>\r\n\r\ndoc<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># ['This',</span>\r\n<span class=\"token comment\"># 'test,',</span>\r\n<span class=\"token comment\"># ...</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>sub()</li>\n</ul>\n<p>단어 교체에 유용하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">p <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(blue\\s|white\\s|red\\s)+\"</span><span class=\"token punctuation\">)</span>\r\np<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">\"color \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"blue red shoes and white blue red socks\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 'color shoes and color socks'</span>\r\n\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(blue|white|red)+\"</span><span class=\"token punctuation\">)</span>\r\np<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">\"color \"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"blue red shoes and white blue red socks\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 'color color shoes and color color color socks'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"-퀴즈\" style=\"position:relative;\">* 퀴즈<a href=\"#-%ED%80%B4%EC%A6%88\" aria-label=\" 퀴즈 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 마지막 실습 및 퀴즈</span>\r\n<span class=\"token comment\"># 1) 연결된 공백 문자를 1개로 교체</span>\r\n<span class=\"token comment\"># 2) 앞에 있는 공백 제거(교체)</span>\r\n<span class=\"token comment\"># 3) 뒤에 있는 공백 제거(교체)</span>\r\n\r\n<span class=\"token comment\"># 내 답</span>\r\ndoc <span class=\"token operator\">=</span> <span class=\"token string\">\" abd asd kluoeiur liueou lkuioe lieoj \\t sd \"</span>\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"( |\\t)+\"</span><span class=\"token punctuation\">)</span>\r\nn <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span>doc<span class=\"token punctuation\">)</span>\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"(^ | $)+\"</span><span class=\"token punctuation\">)</span>\r\nm <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 정답</span>\r\np1 <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\s+\"</span><span class=\"token punctuation\">)</span>\r\np2 <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"^ | $\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p2<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">,</span> p1<span class=\"token punctuation\">.</span>sub<span class=\"token punctuation\">(</span><span class=\"token string\">\" \"</span><span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\nabd asd kluoeiur liueou lkuioe lieoj sd</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"-text-processing\" style=\"position:relative;\">* text Processing<a href=\"#-text-processing\" aria-label=\" text processing permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ul>\n<li><a href=\"https://spacy.io/\">spacy</a>는 오픈 소스 기반 라이브러리로, 한글은 별로 없다.</li>\n</ul>\n<p>CJK : Chinese, Japanese, Korean</p>\n<ul>\n<li>문자를 표현할 때 CJK는 최소 2 byte 이상 필요하다</li>\n<li>1 Byte이면 8 Bit, => 2<em>2</em>2<em>2</em>2<em>2</em>2*2 = 256</li>\n</ul>\n<ul>\n<li>text_precessing.ipynb</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\">## I always uh do the main um processing, I mean, the uh um data-processing.</span>\r\n<span class=\"token comment\">## => I always do the main processing, the data processing.</span>\r\n\r\n\r\n<span class=\"token comment\"># 토스마스터즈 : 영어 발표 관련 모임</span>\r\n<span class=\"token comment\"># 단어를 처리하기 전에, 그럼 어떤 것이 단어인가?</span>\r\n<span class=\"token comment\"># 단어의 정의가 필요하고..</span>\r\n\r\n<span class=\"token comment\"># vocabulary</span>\r\n<span class=\"token comment\"># 유사한 단어 형태들의 집합</span>\r\n\r\n<span class=\"token comment\">## I always uh do the main um processing, I mean, the uh um data-processing.</span>\r\n<span class=\"token comment\">## => { I, always, uh do, the main, um, processing, mean, data } (vocabulary)</span>\r\n\r\n<span class=\"token comment\">## 말뭉치 (Corpus)</span>\r\n\r\n<span class=\"token comment\"># Token : 문서 및 문장에서 단어들 (Token)의 리스트(목록)</span>\r\n<span class=\"token comment\"># I always uh do the main um processing, I mean, the uh um data-processing.</span>\r\n<span class=\"token comment\"># 1   2   3   4   5   6   7   8   9   10   11   12   13   14   15</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"-spacy\" style=\"position:relative;\">* spacy<a href=\"#-spacy\" aria-label=\" spacy permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ul>\n<li>spacy 라이브러리를 설치한다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ pip install spacy\r\n$ pip freeze > requirements.txt\r\n\r\n$ python -m spacy download en_core_web_sm</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> spacy\r\n<span class=\"token keyword\">import</span> re\r\nnlp <span class=\"token operator\">=</span> spacy<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">\"en_core_web_sm\"</span><span class=\"token punctuation\">)</span>\r\ndoc <span class=\"token operator\">=</span> <span class=\"token string\">\"I always uh do the main um processing, I mean, the uh um data-processing.\"</span>\r\nstats <span class=\"token operator\">=</span> nlp<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>stats<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> stats\r\n\r\n<span class=\"token comment\"># 실행 결과</span>\r\n<span class=\"token punctuation\">(</span>spacy<span class=\"token punctuation\">.</span>tokens<span class=\"token punctuation\">.</span>doc<span class=\"token punctuation\">.</span>Doc<span class=\"token punctuation\">,</span>\r\nI always uh do the main um processing<span class=\"token punctuation\">,</span> I mean<span class=\"token punctuation\">,</span> the uh um data<span class=\"token operator\">-</span>processing<span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">\r\n<span class=\"token keyword\">for</span> token <span class=\"token keyword\">in</span> stats<span class=\"token punctuation\">:</span>\r\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 실행 결과</span>\r\nI <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span> I <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'spacy.tokens.token.Token'</span><span class=\"token operator\">></span>\r\nalways <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span> always <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'spacy.tokens.token.Token'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<span class=\"token punctuation\">.</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span> <span class=\"token punctuation\">.</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'spacy.tokens.token.Token'</span><span class=\"token operator\">></span>\r\n\r\n\r\n\r\ndoc2 <span class=\"token operator\">=</span> <span class=\"token string\">\"Korea has a reasonable population.\"</span>\r\nstats <span class=\"token operator\">=</span> nlp<span class=\"token punctuation\">(</span>doc2<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">for</span> token <span class=\"token keyword\">in</span> stats<span class=\"token punctuation\">:</span>\r\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 실행 결과</span>\r\nKorea\r\nhas\r\na\r\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"-퀴즈-1\" style=\"position:relative;\">* 퀴즈<a href=\"#-%ED%80%B4%EC%A6%88-1\" aria-label=\" 퀴즈 1 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">\r\n<span class=\"token comment\"># spacy의 nlp 방식 말고 이전에 re 방식으로 doc를 token화 해서 for 로 출력해보세요</span>\r\n\r\n<span class=\"token comment\"># 내 답</span>\r\np <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\W+\"</span><span class=\"token punctuation\">)</span>\r\nm <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 실행 결과</span>\r\nI\r\nalways\r\nuh\r\ndo\r\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n\r\n\r\n<span class=\"token comment\"># 정답</span>\r\n<span class=\"token keyword\">for</span> token <span class=\"token keyword\">in</span> re<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\W+\"</span><span class=\"token punctuation\">,</span>doc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 실행 결과  </span>\r\nI <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span>\r\nalways <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'str'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>__</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">$ python -m spacy download en_core_web_trf</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">L <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>nlp<span class=\"token punctuation\">.</span>vocab<span class=\"token punctuation\">.</span>strings<span class=\"token punctuation\">)</span>\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span> <span class=\"token comment\"># (list, 83814)</span>\r\n\r\n\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>nlp<span class=\"token punctuation\">.</span>vocab<span class=\"token punctuation\">.</span>strings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># 실행 결과</span>\r\n<span class=\"token punctuation\">(</span>spacy<span class=\"token punctuation\">.</span>strings<span class=\"token punctuation\">.</span>StringStore<span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">,</span> <span class=\"token number\">83814</span><span class=\"token punctuation\">)</span>\r\n\r\n\r\nL<span class=\"token punctuation\">[</span><span class=\"token number\">50000</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">[</span><span class=\"token number\">50001</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> L<span class=\"token punctuation\">[</span><span class=\"token number\">83813</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># en_core_web_sm에서 특정 위치의 단어 보기</span>\r\n<span class=\"token comment\"># 실행 결과</span>\r\n<span class=\"token punctuation\">(</span><span class=\"token string\">'glands'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'glandular'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'￥dd'</span><span class=\"token punctuation\">)</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 파이썬 말고 주피터 노트북 에서 패키지 설치하기</span>\r\n! pip install spacy<span class=\"token punctuation\">[</span>transformers<span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token comment\"># ! python -m spacy download en_core_web_trf</span>\r\nnlp_accuracy <span class=\"token operator\">=</span> spacy<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">\"en_core_web_trf\"</span><span class=\"token punctuation\">)</span>\r\nL_accuracy <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>nlp_accuracy<span class=\"token punctuation\">.</span>vocab<span class=\"token punctuation\">.</span>strings<span class=\"token punctuation\">)</span>\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>nlp_accuracy<span class=\"token punctuation\">.</span>vocab<span class=\"token punctuation\">.</span>strings<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>L_accuracy<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>L_accuracy<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># 실행 결과</span>\r\n<span class=\"token punctuation\">(</span>spacy<span class=\"token punctuation\">.</span>strings<span class=\"token punctuation\">.</span>StringStore<span class=\"token punctuation\">,</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">,</span> <span class=\"token number\">83931</span><span class=\"token punctuation\">)</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<hr>\n<h4 id=\"-예제-실습\" style=\"position:relative;\">* 예제 실습<a href=\"#-%EC%98%88%EC%A0%9C-%EC%8B%A4%EC%8A%B5\" aria-label=\" 예제 실습 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ul>\n<li>강사님으로 부터 reviews.csv 파일을 제공받았다.</li>\n</ul>\n<p>Visual Studio Code에서 rainbow를 설치하면 (확장 프로그램), csv 파일을(?) 좀 더 깔끔하게 볼 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\r\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\r\n<span class=\"token keyword\">from</span> collections <span class=\"token keyword\">import</span> Counter\r\n<span class=\"token keyword\">import</span> re\r\n\r\ndf <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"reviews.csv\"</span><span class=\"token punctuation\">)</span>\r\ndf<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 실행 결과</span>\r\nrating review\r\n<span class=\"token number\">0</span> negative terrible place to work <span class=\"token keyword\">for</span> i just heard a stor<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<span class=\"token number\">1</span> negative hours <span class=\"token punctuation\">,</span> minutes total time <span class=\"token keyword\">for</span> an extremely s<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<span class=\"token number\">2</span> negative my less than stellar review <span class=\"token keyword\">is</span> <span class=\"token keyword\">for</span> service <span class=\"token punctuation\">.</span> w<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n\r\n\r\nvocab <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>vocab<span class=\"token punctuation\">)</span> <span class=\"token comment\"># dict</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"-함수\" style=\"position:relative;\">* 함수<a href=\"#-%ED%95%A8%EC%88%98\" aria-label=\" 함수 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">initializeVocabulary</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n  unkToken <span class=\"token operator\">=</span> <span class=\"token string\">\"&lt;UNK>\"</span>\r\n  vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"t_2_i\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\r\n  vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"I_2_t\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\r\n  vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"unkToken\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> unkToken\r\n  idx <span class=\"token operator\">=</span> addToken<span class=\"token punctuation\">(</span>unkToken<span class=\"token punctuation\">)</span>\r\n  vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"unkTokenIdx\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> idx\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">addToken</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token keyword\">if</span> token <span class=\"token keyword\">in</span> vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"t_2_i\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n    idx <span class=\"token operator\">=</span> vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"t_2_i\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">]</span>\r\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\r\n    idx <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"t_2_i\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n    vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"t_2_i\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> idx\r\n    vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"I_2_t\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> token\r\n  <span class=\"token keyword\">return</span> idx\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">addManyTokens</span><span class=\"token punctuation\">(</span>tokens<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n  idxes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>addToken<span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> token <span class=\"token keyword\">in</span> tokens<span class=\"token punctuation\">]</span>\r\n  <span class=\"token keyword\">return</span> idxes\r\n\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">lookupToken</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token keyword\">if</span> vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"unkTokenIdx\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">return</span> vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"t_2_i\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get<span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"unkTokenIdx\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">return</span> vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"t_2_i\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">lookupIndex</span><span class=\"token punctuation\">(</span>idx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token keyword\">if</span> idx <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"I_2_t\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">raise</span> KeyError<span class=\"token punctuation\">(</span><span class=\"token string\">\"the idx (%d) is not there\"</span> <span class=\"token operator\">%</span> idx<span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">return</span> vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"I_2_t\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>idx<span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">vocabularyFromDataFrame</span><span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">,</span> cutoff<span class=\"token operator\">=</span><span class=\"token number\">25</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n  initializeVocabulary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n  wordCounts <span class=\"token operator\">=</span> Counter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">.</span>review<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">for</span> word <span class=\"token keyword\">in</span> re<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"\\W+\"</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># token 화</span>\r\n    wordCounts<span class=\"token punctuation\">[</span>word<span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\r\n  <span class=\"token keyword\">for</span> word<span class=\"token punctuation\">,</span> count <span class=\"token keyword\">in</span> wordCounts<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">if</span> count <span class=\"token operator\">></span> cutoff<span class=\"token punctuation\">:</span>\r\n      addToken<span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">for</span> r <span class=\"token keyword\">in</span> df<span class=\"token punctuation\">.</span>review<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 실행 결과</span>\r\nterrible place to work <span class=\"token keyword\">for</span> i just heard a story of them find a girl over her biological father coming <span class=\"token keyword\">in</span> there who she hadn t seen <span class=\"token keyword\">in</span> years she said hi to him which upset his wife <span class=\"token keyword\">and</span> they left she finished the rest of her day working fine the <span class=\"token builtin\">next</span> day when she went into work they fired over that situation <span class=\"token punctuation\">.</span> i <span class=\"token keyword\">for</span> one <span class=\"token keyword\">and</span> boycotting texas roadhouse because <span class=\"token builtin\">any</span> place that could be that cruel to their staff does <span class=\"token keyword\">not</span> deserve my business <span class=\"token punctuation\">.</span> <span class=\"token punctuation\">.</span> <span class=\"token punctuation\">.</span> yelp wants me to give them a star but i don t believe they deserve it\r\n\r\n\r\ncorpus <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span><span class=\"token string\">\"review\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nvocabularyFromCorpus<span class=\"token punctuation\">(</span>corpus<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 600s</span>\r\n\r\nlookupToken<span class=\"token punctuation\">(</span><span class=\"token string\">\"the\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 1</span>\r\nlookupIndex<span class=\"token punctuation\">(</span><span class=\"token number\">38</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 'or'</span>\r\n\r\nvocabularyFromDataFrame<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">)</span>\r\n\r\nvocab <span class=\"token comment\"># 300s # 단어 빈도</span>\r\n<span class=\"token comment\"># 실행 결과</span>\r\n<span class=\"token comment\"># {'t_2_i': {'&lt;UNK>': 0,</span>\r\n<span class=\"token comment\">#'the': 1,</span>\r\n<span class=\"token comment\"># 'to': 2,</span>\r\n<span class=\"token comment\"># 'i': 3,</span>\r\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n\r\nvocab<span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># 실행 결과</span>\r\n<span class=\"token comment\"># dict_keys(['t_2_i', 'I_2_t', 'unkToken', 'unkTokenIdx'])</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"-one-hot-encoding\" style=\"position:relative;\">* One-Hot Encoding<a href=\"#-one-hot-encoding\" aria-label=\" one hot encoding permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">oneHotVector</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n  oneHot <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n  oneHot<span class=\"token punctuation\">[</span>lookupToken<span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span>\r\n  <span class=\"token keyword\">return</span> oneHot\r\n\r\nN <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>vocab<span class=\"token punctuation\">[</span><span class=\"token string\">\"t_2_i\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 8946개</span>\r\ntoken <span class=\"token operator\">=</span> <span class=\"token string\">\"sure\"</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>lookupToken<span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 200번째</span>\r\n\r\noneHot <span class=\"token operator\">=</span> oneHotVector<span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> N<span class=\"token punctuation\">)</span>\r\noneHot\r\n\r\n<span class=\"token comment\"># 실행 결과</span>\r\n<span class=\"token comment\"># array([[0.],</span>\r\n<span class=\"token comment\"># [0.],</span>\r\n<span class=\"token comment\"># [0.],</span>\r\n<span class=\"token comment\"># ...</span>\r\n\r\noneHot<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>oneHot<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># 실행 결과</span>\r\n<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">8946</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> numpy<span class=\"token punctuation\">.</span>ndarray<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># [0, 0, ... , 0, ... ] 생긴 numpy array 생성, 즉, 0으로 채워진 numpy array 생성</span>\r\n\r\noneHot<span class=\"token punctuation\">[</span><span class=\"token number\">200</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> oneHot<span class=\"token punctuation\">[</span><span class=\"token number\">199</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> oneHot<span class=\"token punctuation\">[</span><span class=\"token number\">201</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token comment\"># 실행 결과</span>\r\n<span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>__</p>\n<ul>\n<li>text_processing.ipynb</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">\r\n<span class=\"token keyword\">import</span> spacy\r\n\r\nnlp <span class=\"token operator\">=</span> spacy<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">\"en_core_web_sm\"</span><span class=\"token punctuation\">)</span>\r\n\r\nanalytics_document <span class=\"token operator\">=</span> nlp<span class=\"token punctuation\">(</span><span class=\"token string\">\"He is reading books with other students while eating meal.\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">for</span> token <span class=\"token keyword\">in</span> analytics_document<span class=\"token punctuation\">:</span>\r\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">.</span>text<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">.</span>lemma_<span class=\"token punctuation\">,</span> token<span class=\"token punctuation\">.</span>is_stop<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 단어, 원형, stop어 여부</span>\r\n\r\n<span class=\"token comment\"># 실행 결과</span>\r\nHe he <span class=\"token boolean\">True</span>\r\n<span class=\"token keyword\">is</span> be <span class=\"token boolean\">True</span>\r\nreading read <span class=\"token boolean\">False</span>\r\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n\r\ntxt <span class=\"token operator\">=</span> <span class=\"token string\">\"This is the first sentence. However, all the other Ph.D. students are working on , say , second sentence.\"</span>\r\ntxt_analytics <span class=\"token operator\">=</span> nlp<span class=\"token punctuation\">(</span>txt<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">for</span> sentence <span class=\"token keyword\">in</span> txt_analytics<span class=\"token punctuation\">:</span>\r\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sentence<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 단어 단위</span>\r\n\r\n<span class=\"token comment\"># 실행 결과</span>\r\nThis\r\n<span class=\"token keyword\">is</span>\r\nthe\r\nfirst\r\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n\r\n<span class=\"token keyword\">for</span> sentence <span class=\"token keyword\">in</span> txt_analytics<span class=\"token punctuation\">.</span>sents<span class=\"token punctuation\">:</span>\r\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>sentence<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 문장 단위</span>\r\n\r\n<span class=\"token comment\"># 실행 결과</span>\r\nThis <span class=\"token keyword\">is</span> the first sentence<span class=\"token punctuation\">.</span>\r\nHowever<span class=\"token punctuation\">,</span> <span class=\"token builtin\">all</span> the other Ph<span class=\"token punctuation\">.</span>D<span class=\"token punctuation\">.</span> students are working on <span class=\"token punctuation\">,</span> say <span class=\"token punctuation\">,</span> second sentence<span class=\"token punctuation\">.</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h3 id=\"-n-gram-구현\" style=\"position:relative;\">* n-gram 구현<a href=\"#-n-gram-%EA%B5%AC%ED%98%84\" aria-label=\" n gram 구현 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">nGrams</span><span class=\"token punctuation\">(</span>doc_string_or_list<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span> docIsAlreadyTokenized<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n  doc <span class=\"token operator\">=</span> doc_string_or_list\r\n  <span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> docIsAlreadyTokenized<span class=\"token punctuation\">:</span>\r\n    doc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">.</span>text <span class=\"token keyword\">for</span> token <span class=\"token keyword\">in</span> nlp<span class=\"token punctuation\">(</span>doc_string_or_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\n    doc <span class=\"token operator\">=</span> <span class=\"token string\">\" \"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>lower<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span>\r\n    grams <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>doc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span>i<span class=\"token operator\">+</span>n<span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>n<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\n    <span class=\"token keyword\">return</span> grams\r\n\r\ndoc <span class=\"token operator\">=</span> <span class=\"token string\">\"how old are you today or can you tell me something about you\"</span>\r\n\r\nn <span class=\"token operator\">=</span> <span class=\"token number\">4</span>\r\ngrams <span class=\"token operator\">=</span> nGrams<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">,</span> n <span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\r\ngrams\r\n\r\n<span class=\"token comment\"># 실행 결과</span>\r\n<span class=\"token comment\"># [['how', 'old', 'are', 'you'],</span>\r\n<span class=\"token comment\"># ['old', 'are', 'you', 'today'],</span>\r\n<span class=\"token comment\"># ['are', 'you', 'today', 'or'],</span>\r\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n\r\nnGrams<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># n이 1이면 tokenized 랑 동일</span>\r\n<span class=\"token comment\"># 실행 결과</span>\r\n<span class=\"token comment\"># [['how'],</span>\r\n<span class=\"token comment\"># ['old'],</span>\r\n<span class=\"token comment\"># ['are'],</span>\r\n<span class=\"token comment\"># ...</span>\r\n\r\n\r\n<span class=\"token comment\"># n = 1 : 유니그램 (unigram)</span>\r\n<span class=\"token comment\"># n = 2 : 바이그램 (bigram)</span>\r\n<span class=\"token comment\"># n = 3 : 트라이그램 (trigram)</span>\r\n<span class=\"token comment\"># n >= 4 : n-gram</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"-w2i-i2w\" style=\"position:relative;\">* W2I, I2W<a href=\"#-w2i-i2w\" aria-label=\" w2i i2w permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>위에서 만든 lookupIndex, lookupToken 함수와 흡사한데, 더 간단하게 만들 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> spacy\r\nnlp <span class=\"token operator\">=</span> spacy<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token string\">\"en_core_web_sm\"</span><span class=\"token punctuation\">)</span>\r\n\r\nL <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>nlp<span class=\"token punctuation\">.</span>vocab<span class=\"token punctuation\">.</span>strings<span class=\"token punctuation\">)</span>\r\nnumWords <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>numWords<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 83814</span>\r\n\r\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\r\nW2I <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span>numWords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nI2W <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span>numWords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># print(L[:30]) # 단어들</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span>numWords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># [ 0 1 2 ... 83811 83812 83813]</span>\r\n\r\nW2I\r\n<span class=\"token comment\"># {'\\t': 0,</span>\r\n<span class=\"token comment\"># '\\n': 1,</span>\r\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n\r\n\r\nW2I<span class=\"token punctuation\">[</span><span class=\"token string\">\"game\"</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 49410</span>\r\nI2W<span class=\"token punctuation\">[</span><span class=\"token number\">49410</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># 'game'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"-one-hot-vector\" style=\"position:relative;\">* One Hot Vector<a href=\"#-one-hot-vector\" aria-label=\" one hot vector permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ul>\n<li>함수</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">oneHotVector</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">,</span> doc<span class=\"token punctuation\">,</span> numWords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n  v <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>numWords<span class=\"token punctuation\">)</span>\r\n  v<span class=\"token punctuation\">[</span>W2I<span class=\"token punctuation\">[</span>word<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\r\n  <span class=\"token keyword\">return</span> v\r\n\r\nv <span class=\"token operator\">=</span> oneHotVector<span class=\"token punctuation\">(</span><span class=\"token string\">\"game\"</span><span class=\"token punctuation\">,</span>W2I<span class=\"token punctuation\">,</span>numWords<span class=\"token punctuation\">)</span>\r\n\r\nv<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span><span class=\"token number\">49410</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> v<span class=\"token punctuation\">[</span>W2I<span class=\"token punctuation\">[</span><span class=\"token string\">\"game\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token comment\"># (array([0., 0., 0., ..., 0., 0., 0.]), (83814,), 1.0, 1.0)</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"-퀴즈-2\" style=\"position:relative;\">* 퀴즈<a href=\"#-%ED%80%B4%EC%A6%88-2\" aria-label=\" 퀴즈 2 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">doc <span class=\"token operator\">=</span> <span class=\"token string\">\"How are you today. I know most of the time how you feel.\"</span>\r\n\r\n<span class=\"token comment\"># 이 doc를 토큰화한 다음, 리스트로 만들어보세요</span>\r\n\r\n<span class=\"token comment\"># 내 답</span>\r\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token keyword\">for</span> sentence <span class=\"token keyword\">in</span> nlp<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n  a<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>sentence<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 단어 단위</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># [How, are, you, today, ., I, know, most, of, the, time, how, you, feel, .]</span>\r\n\r\n<span class=\"token comment\"># 정답</span>\r\n\r\ntokens <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">.</span>text <span class=\"token keyword\">for</span> token <span class=\"token keyword\">in</span> nlp<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\ntokens\r\n\r\n<span class=\"token comment\"># ['How',</span>\r\n<span class=\"token comment\"># 'are',</span>\r\n<span class=\"token comment\"># 'you',</span>\r\n<span class=\"token comment\"># ...</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"-단어-빈도\" style=\"position:relative;\">* 단어 빈도<a href=\"#-%EB%8B%A8%EC%96%B4-%EB%B9%88%EB%8F%84\" aria-label=\" 단어 빈도 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">doc <span class=\"token operator\">=</span> <span class=\"token string\">\"How are you today. I know most of the time with him!\"</span>\r\ntokens <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>token<span class=\"token punctuation\">.</span>text <span class=\"token keyword\">for</span> token <span class=\"token keyword\">in</span> nlp<span class=\"token punctuation\">(</span>doc<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\n\r\nnumWords <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>tokens<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>numWords<span class=\"token punctuation\">)</span>  <span class=\"token comment\"># 14</span>\r\n\r\nW2I <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>tokens<span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span>numWords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nI2W <span class=\"token operator\">=</span> <span class=\"token builtin\">dict</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span>numWords<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>tokens<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>W2I<span class=\"token punctuation\">[</span><span class=\"token string\">\"him\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 12</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>I2W<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># him</span>\r\n\r\nv <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>numWords<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">for</span> token <span class=\"token keyword\">in</span> tokens<span class=\"token punctuation\">:</span>\r\n  v <span class=\"token operator\">+=</span> oneHotVector<span class=\"token punctuation\">(</span>token<span class=\"token punctuation\">,</span> W2I<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\nv <span class=\"token comment\"># 단어 빈도</span>\r\n\r\narray<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#3%EC%9D%BC%EC%B0%A8\">3일차</a></p>\n<ul>\n<li><a href=\"#1-compile\">(1) compile</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#2-match-search\">(2) match, search</a></p>\n</li>\n<li>\n<p><a href=\"#3-finditer\">(3) finditer</a></p>\n</li>\n<li>\n<p><a href=\"#4-\">(4) |</a></p>\n</li>\n<li>\n<p><a href=\"#5--\">(5) ^, $</a></p>\n</li>\n<li>\n<p><a href=\"#6-\">(6) ()</a></p>\n</li>\n<li>\n<p><a href=\"#7-split-sub\">(7) split(), sub()</a></p>\n<ul>\n<li><a href=\"#-%ED%80%B4%EC%A6%88\">* 퀴즈</a></li>\n<li><a href=\"#-text-processing\">* text Processing</a></li>\n<li><a href=\"#-spacy\">* spacy</a></li>\n<li><a href=\"#-%ED%80%B4%EC%A6%88-1\">* 퀴즈</a></li>\n<li><a href=\"#-%EC%98%88%EC%A0%9C-%EC%8B%A4%EC%8A%B5\">* 예제 실습</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#-%ED%95%A8%EC%88%98\">* 함수</a></p>\n</li>\n<li>\n<p><a href=\"#-one-hot-encoding\">* One-Hot Encoding</a></p>\n</li>\n<li>\n<p><a href=\"#-n-gram-%EA%B5%AC%ED%98%84\">* n-gram 구현</a></p>\n<ul>\n<li><a href=\"#-w2i-i2w\">* W2I, I2W</a></li>\n<li><a href=\"#-one-hot-vector\">* One Hot Vector</a></li>\n<li><a href=\"#-%ED%80%B4%EC%A6%88-2\">* 퀴즈</a></li>\n<li><a href=\"#-%EB%8B%A8%EC%96%B4-%EB%B9%88%EB%8F%84\">* 단어 빈도</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"AI 이노베이션 스퀘어 3기 언어반 3일차 후기"}}},"pageContext":{"slug":"/ai-이노베이션-스퀘어-언어-3일차/"}},"staticQueryHashes":["3159585216"]}