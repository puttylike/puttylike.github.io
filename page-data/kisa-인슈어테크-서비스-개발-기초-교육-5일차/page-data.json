{"componentChunkName":"component---src-templates-blog-post-js","path":"/kisa-인슈어테크-서비스-개발-기초-교육-5일차/","result":{"data":{"markdownRemark":{"html":"<p>DB 손보 api 실습이다.</p>\n<hr>\n<h4 id=\"어제-자-에러-수정---이용자-토큰-발급-관련\" style=\"position:relative;\">어제 자 에러 수정 - 이용자 토큰 발급 관련<a href=\"#%EC%96%B4%EC%A0%9C-%EC%9E%90-%EC%97%90%EB%9F%AC-%EC%88%98%EC%A0%95---%EC%9D%B4%EC%9A%A9%EC%9E%90-%ED%86%A0%ED%81%B0-%EB%B0%9C%EA%B8%89-%EA%B4%80%EB%A0%A8\" aria-label=\"어제 자 에러 수정   이용자 토큰 발급 관련 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>DB 손보 api 웹 개발 시작 전,<br>\n어제 에러가 났던 이용자 토큰 발급 부분을 수정했다.  </p>\n<p>문제는 크게 2가지 였다.</p>\n<ol>\n<li>apiCrypto.js 를 수정했다.  </li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* apiCrypto.js */</span>\n<span class=\"token keyword\">const</span> crypto <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'crypto'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> pkcs7 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pkcs7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> appSecretKey <span class=\"token operator\">=</span> <span class=\"token string\">\"f8449d6220b54dddb892a262409c3e07\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> timeSt <span class=\"token operator\">=</span> <span class=\"token string\">\"20210218190839\"</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">const</span> caesar <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./ceasar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">rpad</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str<span class=\"token punctuation\">,</span> padLen<span class=\"token punctuation\">,</span> padStr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>padStr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> padLen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'오류 : 채우고자 하는 문자열이 요청 길이보다 큽니다'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">return</span> str <span class=\"token operator\">+</span> <span class=\"token string\">''</span>\n    <span class=\"token punctuation\">}</span>\n    str <span class=\"token operator\">+=</span> <span class=\"token string\">''</span> <span class=\"token comment\">// 문자로</span>\n    padStr <span class=\"token operator\">+=</span> <span class=\"token string\">''</span> <span class=\"token comment\">// 문자로</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> padLen<span class=\"token punctuation\">)</span> str <span class=\"token operator\">+=</span> padStr\n    str <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> padLen <span class=\"token operator\">?</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> padLen<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> str\n    <span class=\"token keyword\">return</span> str\n<span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">pkcs7Pad</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">params</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> <span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> bytes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        bytes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">return</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>pkcs7<span class=\"token punctuation\">.</span><span class=\"token function\">pad</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">hsKey</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> key <span class=\"token operator\">=</span> appSecretKey <span class=\"token operator\">+</span> timeSt<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> hmac <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">createHmac</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sha512\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer<span class=\"token punctuation\">.</span>from</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">var</span> signed <span class=\"token operator\">=</span> hmac<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer<span class=\"token punctuation\">.</span>from</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"base64\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>signed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> signed\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function-variable function\">ssnEncrypt</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ssnnum</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> serial <span class=\"token operator\">=</span> timeSt <span class=\"token operator\">+</span> appSecretKey<span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> secureKey <span class=\"token operator\">=</span> <span class=\"token function\">rpad</span><span class=\"token punctuation\">(</span>serial<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">var</span> bytes <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">randomBytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> iv <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">randomBytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> key <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">pbkdf2Sync</span><span class=\"token punctuation\">(</span>secureKey<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">,</span> <span class=\"token number\">70000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sha1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">const</span> cipher <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">createCipheriv</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aes-256-cbc'</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> iv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        cipher<span class=\"token punctuation\">.</span><span class=\"token function\">setAutoPadding</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'b:'</span> <span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'iv:'</span><span class=\"token punctuation\">,</span> iv<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">let</span> encrypted <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token function\">pkcs7Pad</span><span class=\"token punctuation\">(</span>ssnnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        encrypted <span class=\"token operator\">+=</span> cipher<span class=\"token punctuation\">.</span><span class=\"token function\">final</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"here :\"</span><span class=\"token punctuation\">,</span> encrypted<span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">var</span> encBuf <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>encrypted<span class=\"token punctuation\">,</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>bytes<span class=\"token punctuation\">,</span> iv<span class=\"token punctuation\">,</span> encBuf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">let</span> conBuf <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>conBuf<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// encrypted += conBuf.toString('base64');</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>encrypted<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">return</span> conBuf<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ol start=\"2\">\n<li>AuthTest의 getUserAccessToken 부분을 수정했다.<br>\n...axios 버그가 있다고 한다...  </li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">axios.post(&#39;/v1.0/cert/oauth2.0/resourceOwner&#39;, {}, {\n    headers: {\n        &#39;Connection&#39;: &#39;keep-alive&#39;,\n        &#39;Content-Type&#39;: &#39;application/json; charset=utf-8&#39;,\n        &#39;appKey&#39;: &#39;l7xxe840074288574eeabb346f15f7a3d6af&#39;,\n        &#39;appSecret&#39;: &#39;f8449d6220b54dddb892a262409c3e07&#39;,\n        &#39;Authorization&#39;: &#39;Bearer &#39; + companyAccessToken,\n        &#39;ci&#39;: &#39;E4PIs45uiscs8quYnySoQXuZKwjB66mE3Wqvw9gRuWOqMON3FiLQt+U4ZV42Y1+prQWpFWWnbKomShR+O5dHlg==&#39;,\n    }\n}).then((res) =&gt; {\n    console.log(res)\n})</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>pages로 FlightInput.js를 옮기고,\npages에 SignupInsure.js 추가하고, 어제 만든 flight의 주소를 signupInsure로 바꿨다.  </p>\n<p>테스트를 위해 Input Param은 대부분 기본값으로 세팅하였다.</p>\n<p>가입 정보 받는 화면을 그린다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* SignupInsure.js */</span>\n\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Header <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/Header'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> SearchTool <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/SearchTool'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> SearchResult <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/SearchResult'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\n\n<span class=\"token comment\">//LOGIC</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">SignupInsure</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">,</span> setusername<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>ssnnum<span class=\"token punctuation\">,</span> setssnnum<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>phonenum<span class=\"token punctuation\">,</span> setphonenum<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isHealth<span class=\"token punctuation\">,</span> setisHealth<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>q1<span class=\"token punctuation\">,</span> setq1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">clickBtn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">inputChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setusername</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'ssnnum'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setssnnum</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'phonenum'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setphonenum</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'isHealth'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setisHealth</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'q1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">setq1</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Header title<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'보험 가입 데이터 입력'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Header<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>성명<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>주민등록번호<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>  <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>ssnnum<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'ssnnum'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>핸드폰<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>  <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>phonenum<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'phonenum'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>건강보험<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>isHealth<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'isHealth'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>취미관련 자격증이 있습니까<span class=\"token operator\">?</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>q1<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'q1'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> SignupInsure<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>주민번호는 값을 암호화하여 값을 전송한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* */</span>\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> Header <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/Header'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> SearchTool <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/SearchTool'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> SearchResult <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/SearchResult'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\n<span class=\"token keyword\">import</span> apiCrypto <span class=\"token keyword\">from</span> <span class=\"token string\">'../lib/apiCrypto'</span><span class=\"token punctuation\">;</span>\n<span class=\"token comment\">//LOGIC</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">SignupInsure</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">,</span> setusername<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>ssnnum<span class=\"token punctuation\">,</span> setssnnum<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>phonenum<span class=\"token punctuation\">,</span> setphonenum<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isHealth<span class=\"token punctuation\">,</span> setisHealth<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>q1<span class=\"token punctuation\">,</span> setq1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">clickBtn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">inputChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\n       <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setusername</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'ssnnum'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setssnnum</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'phonenum'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setphonenum</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n       <span class=\"token punctuation\">}</span>\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'isHealth'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setisHealth</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n         <span class=\"token punctuation\">}</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'q1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n            <span class=\"token function\">setq1</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">btnClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> nexturl <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/insurePlan?username=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>username<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;ssnnum=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>ssnnum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;phonenum=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>phonenum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;ishealth=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isHealth<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;q1=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>q1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n        sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ssnnum'</span><span class=\"token punctuation\">,</span> apiCrypto<span class=\"token punctuation\">.</span><span class=\"token function\">ssnEncrypt</span><span class=\"token punctuation\">(</span>ssnnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nexturl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> nexturl<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>Header title<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'보험 가입 데이터 입력'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Header<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>성명<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>주민등록번호<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>  <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>ssnnum<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'ssnnum'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>핸드폰<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>  <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>phonenum<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'phonenum'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>건강보험<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>isHealth<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'isHealth'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>취미관련 자격증이 있습니까<span class=\"token operator\">?</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>q1<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'q1'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span>\n            <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>btnClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>입력 완료<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\n\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> SignupInsure<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<hr>\n<p>pages에 SignupResult.js 를 생성해 다음 페이지를 만든다.  </p>\n<p>AuthTest에서 이용자 토큰 발급으로 받은 값을 Authorization 쪽에 추가한다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">/* SignupResult.js*/\nimport axios from &#39;axios&#39;;\nimport React, { useState } from &#39;react&#39;;\nimport styled from &#39;styled-components&#39;;\nimport Header from &#39;../component/Header&#39;;\nimport cryptoMy from &#39;../lib/apiCrypto&#39;;\n//LOGIC\n\nconst SignupResult = () =&gt; {\n\n    const getUserToken = () =&gt; {\n        const option = {\n            method: &#39;post&#39;,\n            url: &#39;/v1.0/cert/oauth2.0/clientCredential&#39;,\n            headers: {\n                &#39;appKey&#39;: &#39;l7xxe840074288574eeabb346f15f7a3d6af&#39;,\n                &#39;appSecret&#39;: &#39;f8449d6220b54dddb892a262409c3e07&#39;,\n                &#39;Content-Type&#39;: &#39;application/json; charset=utf-8&#39;\n            }\n        }\n        axios(option)\n        .then(function (response) {\n            var companyToken = response.data.dataBody.access_token;\n            console.log(response.data.dataBody.access_token);\n            const dataBody = {\n                &quot;dataHeader&quot;:\n                {\n                },\n                &quot;dataBody&quot;:\n                {\n                    &quot;language&quot;:null,\n             &quot;country&quot;:null,\n             &quot;clientIp&quot;:&quot;127.0.0.1&quot;,\n             &quot;txId&quot;:&quot;20200825153816934000000__3939_server1&quot;,\n             &quot;exTxId&quot;:null,\n             &quot;serviceName&quot;:&quot;GDBD205BS.aPiiMastPlyNrmYnSrch&quot;,\n             &quot;errorCode&quot;:null,\n             &quot;requestPage&quot;:1,\n             &quot;rowsPerPage&quot;:15,\n             &quot;totalCount&quot;:0,\n             &quot;totalPage&quot;:0,\n             &quot;requestTimestamp&quot;:1598337496944,\n             &quot;returnMessage&quot;:null,\n             &quot;traceFlag&quot;:false,\n             &quot;z_user_nm&quot;:&quot;테스터&quot;,\n             &quot;z_msg_cd&quot;:null,\n             &quot;z_msg_type&quot;:null,\n             &quot;z_err_cpn_id&quot;:null,\n             &quot;z_sys_msg_cn&quot;:null,\n             &quot;z_scrn_id&quot;:&quot;&quot;,\n             &quot;z_work_mnu_id&quot;:&quot;&quot;,\n             &quot;z_chn_cd&quot;:&quot;GUI&quot;,\n             &quot;z_mac_adr&quot;:&quot;&quot;,\n             &quot;z_afcp_dvcd&quot;:&quot;&quot;,\n             &quot;z_orn_dvcd&quot;:&quot;&quot;,\n             &quot;z_orn_no&quot;:&quot;&quot;,\n             &quot;z_orn_nm&quot;:&quot;&quot;,\n             &quot;z_stcn_no&quot;:&quot;&quot;,\n             &quot;z_stcn_nm&quot;:&quot;&quot;,\n             &quot;z_hdqt_no&quot;:&quot;&quot;,\n             &quot;z_hdqt_nm&quot;:&quot;&quot;,\n             &quot;z_bzlv_no&quot;:&quot;&quot;,\n             &quot;z_bzlv_nm&quot;:&quot;&quot;,\n             &quot;z_bh_no&quot;:&quot;&quot;,\n             &quot;z_bh_nm&quot;:&quot;&quot;,\n             &quot;z_brc_no&quot;:&quot;&quot;,\n             &quot;z_brc_nm&quot;:&quot;&quot;,\n             &quot;z_cnof_yn&quot;:&quot;&quot;,\n             &quot;z_ormm_no&quot;:&quot;&quot;,\n             &quot;z_ormm_nm&quot;:&quot;&quot;,\n             &quot;z_ormm_dvcd&quot;:&quot;&quot;,\n             &quot;z_ormm_tpcd&quot;:&quot;&quot;,\n             &quot;z_ormm_ptl_tpcd&quot;:&quot;&quot;,\n             &quot;z_magc_no&quot;:&quot;&quot;,\n             &quot;z_rp_agnc_no&quot;:&quot;&quot;,\n             &quot;z_auth_grp_cd&quot;:&quot;&quot;,\n             &quot;z_comm_auth_grp_cd&quot;:&quot;&quot;,\n             &quot;z_pos_cd&quot;:&quot;&quot;,\n             &quot;z_pos_nm&quot;:&quot;&quot;,\n             &quot;z_dty_cd&quot;:&quot;&quot;,\n             &quot;z_dty_nm&quot;:&quot;&quot;,\n             &quot;z_clpo_cd&quot;:&quot;&quot;,\n             &quot;z_clpo_nm&quot;:&quot;&quot;,\n             &quot;z_bdut_cd&quot;:&quot;&quot;,\n             &quot;z_bdut_nm&quot;:&quot;&quot;,\n             &quot;z_email&quot;:&quot;&quot;,\n             &quot;z_ctf_key&quot;:&quot;&quot;,\n             &quot;z_in_outs_dvn&quot;:&quot;&quot;,\n             &quot;z_srch_ref_orr&quot;:null,\n             &quot;z_row_type&quot;:1,\n             &quot;z_page_if&quot;:{},\n             &quot;z_scrn_rltn_sys_cd&quot;:&quot;&quot;,\n             &quot;appt_key&quot;:&quot;11111&quot;,\n             &quot;mast_plno&quot;:&quot;120210341120&quot;,\n             &quot;nrm_yn&quot;:&quot;&quot;,\n             &quot;z_user_id&quot;:&quot;10786830&quot;,\n             &quot;superIFVO&quot;:null,\n             &quot;superPRTVO&quot;:null\n                }\n            }\n            const option = {\n                method: &#39;post&#39;,\n                url: &#39;/v1.0/GNI/comm/mastplysrch&#39;,\n                data : JSON.stringify(dataBody),\n                headers: {\n                    &#39;Authorization&#39; : &#39;Bearer &#39; + companyToken,\n                    &#39;timestamp&#39; : &#39;20210218190839&#39;,\n                    &#39;ci&#39; : &#39;E4PIs45uiscs8quYnySoQXuZKwjB66mE3Wqvw9gRuWOqMON3FiLQt+U4ZV42Y1+prQWpFWWnbKomShR+O5dHlg==&#39;,\n                    &#39;appKey&#39;: &#39;l7xxe840074288574eeabb346f15f7a3d6af&#39;,\n                    &#39;appSecret&#39;: &#39;f8449d6220b54dddb892a262409c3e07&#39;,\n                    &#39;Content-Type&#39;: &#39;application/json; charset=utf-8&#39;,\n                    &#39;hsKey&#39; : cryptoMy.hsKey(JSON.stringify(dataBody))\n                }\n            }\n            axios(option)\n            .then(function (response) {\n                axios.post(&#39;/v1.0/cert/oauth2.0/resourceOwner&#39;, {}, {\n                    headers: {\n                        &#39;Connection&#39;: &#39;keep-alive&#39;,\n                        &#39;Content-Type&#39;: &#39;application/json; charset=utf-8&#39;,\n                        &#39;appKey&#39;: &#39;l7xxe840074288574eeabb346f15f7a3d6af&#39;,\n                        &#39;appSecret&#39;: &#39;f8449d6220b54dddb892a262409c3e07&#39;,\n                        &#39;Authorization&#39;: &#39;Bearer &#39; + companyToken,\n                        &#39;ci&#39;: &#39;E4PIs45uiscs8quYnySoQXuZKwjB66mE3Wqvw9gRuWOqMON3FiLQt+U4ZV42Y1+prQWpFWWnbKomShR+O5dHlg==&#39;,\n                    }\n                }).then((res) =&gt; {\n                    console.log(res.data.dataBody.access_token);\n                    var userToken = res.data.dataBody.access_token;\n                    var requestData = {\n                        &quot;dataBody&quot;: {\n                            &quot;z_chn_cd&quot;: &quot;API&quot;,\n                            &quot;pan_typ_srch_scy_ctc&quot;: {\n                                &quot;job_cd&quot;: &quot;12021&quot;,\n                                &quot;ntin_heal_arc_eny_yn&quot;: &quot;1&quot;,\n                                &quot;tdtn_cd&quot;: &quot;US&quot;,\n                                &quot;ins_qtnd&quot;: [\n                                    {\n                                        &quot;qtn_rep_yn_19&quot;: &quot;0&quot;,\n                                        &quot;qtn_rep_yn_16&quot;: &quot;0&quot;,\n                                        &quot;qtn_rep_yn_15&quot;: &quot;0&quot;,\n                                        &quot;ins_rsdn_no&quot;: &quot;Tc08fJZB7Ccs30r+GcpD4N4VkzSe6raL2pJrZdcJ3FuqUCXQPnMe3KtWllFkqoVWr4E2fw==&quot;,\n                                        &quot;qtn_rep_yn_18&quot;: &quot;0&quot;,\n                                        &quot;qtn_rep_yn_17&quot;: &quot;0&quot;,\n                                        &quot;qtn_rep_yn_14&quot;: &quot;0&quot;,\n                                        &quot;qtn_rep_yn_4&quot;: &quot;0&quot;,\n                                        &quot;qtn_rep_yn_20&quot;: &quot;0&quot;\n                                    }\n                                ],\n                                &quot;sl_pan_cd&quot;: &quot;A01&quot;,\n                                &quot;scy_ctc_ins&quot;: [\n                                    {\n                                        &quot;ins_nm&quot;: &quot;유관우&quot;,\n                                        &quot;ins_mbph_3&quot;: &quot;8250&quot;,\n                                        &quot;ins_rsdn_no&quot;: &quot;Tc08fJZB7Ccs30r+GcpD4N4VkzSe6raL2pJrZdcJ3FuqUCXQPnMe3KtWllFkqoVWr4E2fw==&quot;,\n                                        &quot;ins_mbph_2&quot;: &quot;9207&quot;,\n                                        &quot;ins_eml&quot;: &quot;send@mail.com&quot;,\n                                        &quot;ins_mbph_1&quot;: &quot;010&quot;,\n                                        &quot;add_dt&quot;: &quot;20210501&quot;,\n                                        &quot;sx_cd&quot;:&quot;2&quot;,\n                                        &quot;trmt_dt&quot;: &quot;20210505&quot;\n                                    }\n                                ],\n                                &quot;eny_psct&quot;: &quot;1&quot;\n                            },\n                            &quot;mast_plno&quot;: &quot;120210341120&quot;,\n                            &quot;z_ctf_yn&quot;: &quot;&quot;,\n                            &quot;scy_ctc_cvr_detl&quot;: [\n                                {\n                                    &quot;crty_arc_inam_1&quot;: &quot;10000000&quot;,\n                                    &quot;crcy_cd&quot;: &quot;WON&quot;,\n                                    &quot;sl_cvr_cd&quot;: &quot;101555&quot;,\n                                    &quot;crty_dct_amt_1&quot;: &quot;0&quot;,\n                                    &quot;sl_pan_cd&quot;: &quot;A01&quot;\n                                },\n                                {\n                                    &quot;crty_arc_inam_1&quot;: &quot;200000000&quot;,\n                                    &quot;crcy_cd&quot;: &quot;WON&quot;,\n                                    &quot;sl_cvr_cd&quot;: &quot;101545&quot;,\n                                    &quot;crty_dct_amt_1&quot;: &quot;0&quot;,\n                                    &quot;sl_pan_cd&quot;: &quot;A01&quot;\n                                }\n                            ],\n                            &quot;appt_key&quot;: &quot;&quot;,\n                            &quot;enpl_ctc_bsc_if&quot;: {\n                                &quot;arc_trm_str_dt&quot;: &quot;20210420&quot;,\n                                &quot;plhd_brtn&quot;: &quot;1358207931&quot;,\n                                &quot;arc_trm_fin_time&quot;: &quot;2400&quot;,\n                                &quot;arc_trm_str_time&quot;: &quot;0000&quot;,\n                                &quot;arc_trm_fin_dt&quot;: &quot;20210425&quot;,\n                                &quot;rcrt_empno&quot;: &quot;10786830&quot;\n                            },\n                            &quot;pdc_cd&quot;: &quot;13512&quot;\n                        },\n                        &quot;dataHeader&quot;: {\n                            &quot;z_user_id&quot;: &quot;10786830&quot;\n                        },\n                        &quot;testBody&quot;: {}\n                    }\n                    const option = {\n                        method: &#39;post&#39;,\n                        url: &#39;/v1.0/GNI/trip_overseas/inj/wound/design&#39;,\n                        data : JSON.stringify(requestData),\n                        headers: {\n                            &#39;Authorization&#39; : &#39;Bearer &#39; + userToken,\n                            &#39;timestamp&#39; : &#39;20210218190839&#39;,\n                            &#39;ci&#39; : &#39;E4PIs45uiscs8quYnySoQXuZKwjB66mE3Wqvw9gRuWOqMON3FiLQt+U4ZV42Y1+prQWpFWWnbKomShR+O5dHlg==&#39;,\n                            &#39;appKey&#39;: &#39;l7xxe840074288574eeabb346f15f7a3d6af&#39;,\n                            &#39;appSecret&#39;: &#39;f8449d6220b54dddb892a262409c3e07&#39;,\n                            &#39;Content-Type&#39;: &#39;application/json; charset=utf-8&#39;,\n                            &#39;hsKey&#39; : cryptoMy.hsKey(JSON.stringify(requestData))\n                        }\n                    }\n                    axios(option)\n                    .then(function (response) {\n                        console.log(response.data);\n                    })\n                    .catch(function (error) {\n                        // handle error\n                        console.log(error);\n                    })\n                    .then(function () {\n                        // always executed\n                    });\n                })\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n            .then(function () {\n                // always executed\n            });        \n\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        })\n        .then(function () {\n            // always executed\n        });\n    }\n    const inputChange = (e) =&gt;{\n       const {name, value} = e.target;\n\n    }\n    const btnClick = () =&gt; {\n\n    }\n\n\n\n    return (\n        &lt;&gt;\n            &lt;Header title={&#39;보험 가입 데이터 입력&#39;}&gt;&lt;/Header&gt;\n            &lt;button onClick={getUserToken}&gt;api 콜&lt;/button&gt;\n        &lt;/&gt;\n\n    );\n}\n\nexport default SignupResult;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>lib에 userTokenGet.js 를 만든다.   moduleTest.js도.</p>\n<p>이렇게 하면 3개가 동시에 실행돼 빨리 끝나는 순으로,<br>\ncallback 되는 식이라 에러가 발생한다.  </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function\">getAccessToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">getMaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">getUserAccessToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>1번 안에 2번, 2번 안에 3번 넣는 무식한 방법이 있는데, 소스 관리에 적합하지는 않다.  </p>\n<p><code class=\"language-text\">userTokenGet, moduleTest, signupResult</code></p>\n<p>signupResult에 설계 결과까지 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">import axios from &#39;axios&#39;;\nimport React, { useState } from &#39;react&#39;;\nimport styled from &#39;styled-components&#39;;\nimport Header from &#39;../component/Header&#39;;\nimport cryptoMy from &#39;../lib/apiCrypto&#39;;\n//LOGIC\n\nconst SignupInsure = () =&gt; {\n    const [result, setResult] = useState(undefined);\n    const getUserToken = () =&gt; {\n        const option = {\n            method: &#39;post&#39;,\n            url: &#39;/v1.0/cert/oauth2.0/clientCredential&#39;,\n            headers: {\n                &#39;appKey&#39;: &#39;l7xxe840074288574eeabb346f15f7a3d6af&#39;,\n                &#39;appSecret&#39;: &#39;f8449d6220b54dddb892a262409c3e07&#39;,\n                &#39;Content-Type&#39;: &#39;application/json; charset=utf-8&#39;\n            }\n        }\n        axios(option)\n        .then(function (response) {\n            var companyToken = response.data.dataBody.access_token;\n            console.log(response.data.dataBody.access_token);\n            const dataBody = {\n                &quot;dataHeader&quot;:\n                {\n                },\n                &quot;dataBody&quot;:\n                {\n                    &quot;language&quot;:null,\n             &quot;country&quot;:null,\n             &quot;clientIp&quot;:&quot;127.0.0.1&quot;,\n             &quot;txId&quot;:&quot;20200825153816934000000__3939_server1&quot;,\n             &quot;exTxId&quot;:null,\n             &quot;serviceName&quot;:&quot;GDBD205BS.aPiiMastPlyNrmYnSrch&quot;,\n             &quot;errorCode&quot;:null,\n             &quot;requestPage&quot;:1,\n             &quot;rowsPerPage&quot;:15,\n             &quot;totalCount&quot;:0,\n             &quot;totalPage&quot;:0,\n             &quot;requestTimestamp&quot;:1598337496944,\n             &quot;returnMessage&quot;:null,\n             &quot;traceFlag&quot;:false,\n             &quot;z_user_nm&quot;:&quot;테스터&quot;,\n             &quot;z_msg_cd&quot;:null,\n             &quot;z_msg_type&quot;:null,\n             &quot;z_err_cpn_id&quot;:null,\n             &quot;z_sys_msg_cn&quot;:null,\n             &quot;z_scrn_id&quot;:&quot;&quot;,\n             &quot;z_work_mnu_id&quot;:&quot;&quot;,\n             &quot;z_chn_cd&quot;:&quot;GUI&quot;,\n             &quot;z_mac_adr&quot;:&quot;&quot;,\n             &quot;z_afcp_dvcd&quot;:&quot;&quot;,\n             &quot;z_orn_dvcd&quot;:&quot;&quot;,\n             &quot;z_orn_no&quot;:&quot;&quot;,\n             &quot;z_orn_nm&quot;:&quot;&quot;,\n             &quot;z_stcn_no&quot;:&quot;&quot;,\n             &quot;z_stcn_nm&quot;:&quot;&quot;,\n             &quot;z_hdqt_no&quot;:&quot;&quot;,\n             &quot;z_hdqt_nm&quot;:&quot;&quot;,\n             &quot;z_bzlv_no&quot;:&quot;&quot;,\n             &quot;z_bzlv_nm&quot;:&quot;&quot;,\n             &quot;z_bh_no&quot;:&quot;&quot;,\n             &quot;z_bh_nm&quot;:&quot;&quot;,\n             &quot;z_brc_no&quot;:&quot;&quot;,\n             &quot;z_brc_nm&quot;:&quot;&quot;,\n             &quot;z_cnof_yn&quot;:&quot;&quot;,\n             &quot;z_ormm_no&quot;:&quot;&quot;,\n             &quot;z_ormm_nm&quot;:&quot;&quot;,\n             &quot;z_ormm_dvcd&quot;:&quot;&quot;,\n             &quot;z_ormm_tpcd&quot;:&quot;&quot;,\n             &quot;z_ormm_ptl_tpcd&quot;:&quot;&quot;,\n             &quot;z_magc_no&quot;:&quot;&quot;,\n             &quot;z_rp_agnc_no&quot;:&quot;&quot;,\n             &quot;z_auth_grp_cd&quot;:&quot;&quot;,\n             &quot;z_comm_auth_grp_cd&quot;:&quot;&quot;,\n             &quot;z_pos_cd&quot;:&quot;&quot;,\n             &quot;z_pos_nm&quot;:&quot;&quot;,\n             &quot;z_dty_cd&quot;:&quot;&quot;,\n             &quot;z_dty_nm&quot;:&quot;&quot;,\n             &quot;z_clpo_cd&quot;:&quot;&quot;,\n             &quot;z_clpo_nm&quot;:&quot;&quot;,\n             &quot;z_bdut_cd&quot;:&quot;&quot;,\n             &quot;z_bdut_nm&quot;:&quot;&quot;,\n             &quot;z_email&quot;:&quot;&quot;,\n             &quot;z_ctf_key&quot;:&quot;&quot;,\n             &quot;z_in_outs_dvn&quot;:&quot;&quot;,\n             &quot;z_srch_ref_orr&quot;:null,\n             &quot;z_row_type&quot;:1,\n             &quot;z_page_if&quot;:{},\n             &quot;z_scrn_rltn_sys_cd&quot;:&quot;&quot;,\n             &quot;appt_key&quot;:&quot;11111&quot;,\n             &quot;mast_plno&quot;:&quot;120210341120&quot;,\n             &quot;nrm_yn&quot;:&quot;&quot;,\n             &quot;z_user_id&quot;:&quot;10786830&quot;,\n             &quot;superIFVO&quot;:null,\n             &quot;superPRTVO&quot;:null\n                }\n            }\n            const option = {\n                method: &#39;post&#39;,\n                url: &#39;/v1.0/GNI/comm/mastplysrch&#39;,\n                data : JSON.stringify(dataBody),\n                headers: {\n                    &#39;Authorization&#39; : &#39;Bearer &#39; + companyToken,\n                    &#39;timestamp&#39; : &#39;20210218190839&#39;,\n                    &#39;ci&#39; : &#39;E4PIs45uiscs8quYnySoQXuZKwjB66mE3Wqvw9gRuWOqMON3FiLQt+U4ZV42Y1+prQWpFWWnbKomShR+O5dHlg==&#39;,\n                    &#39;appKey&#39;: &#39;l7xxe840074288574eeabb346f15f7a3d6af&#39;,\n                    &#39;appSecret&#39;: &#39;f8449d6220b54dddb892a262409c3e07&#39;,\n                    &#39;Content-Type&#39;: &#39;application/json; charset=utf-8&#39;,\n                    &#39;hsKey&#39; : cryptoMy.hsKey(JSON.stringify(dataBody))\n                }\n            }\n            axios(option)\n            .then(function (response) {\n                axios.post(&#39;/v1.0/cert/oauth2.0/resourceOwner&#39;, {}, {\n                    headers: {\n                        &#39;Connection&#39;: &#39;keep-alive&#39;,\n                        &#39;Content-Type&#39;: &#39;application/json; charset=utf-8&#39;,\n                        &#39;appKey&#39;: &#39;l7xxe840074288574eeabb346f15f7a3d6af&#39;,\n                        &#39;appSecret&#39;: &#39;f8449d6220b54dddb892a262409c3e07&#39;,\n                        &#39;Authorization&#39;: &#39;Bearer &#39; + companyToken,\n                        &#39;ci&#39;: &#39;E4PIs45uiscs8quYnySoQXuZKwjB66mE3Wqvw9gRuWOqMON3FiLQt+U4ZV42Y1+prQWpFWWnbKomShR+O5dHlg==&#39;,\n                    }\n                }).then((res) =&gt; {\n                    console.log(res.data.dataBody.access_token);\n                    var userToken = res.data.dataBody.access_token;\n                    var requestData = {\n                        &quot;dataBody&quot;: {\n                            &quot;z_chn_cd&quot;: &quot;API&quot;,\n                            &quot;pan_typ_srch_scy_ctc&quot;: {\n                                &quot;job_cd&quot;: &quot;12021&quot;,\n                                &quot;ntin_heal_arc_eny_yn&quot;: &quot;1&quot;,\n                                &quot;tdtn_cd&quot;: &quot;US&quot;,\n                                &quot;ins_qtnd&quot;: [\n                                    {\n                                        &quot;qtn_rep_yn_19&quot;: &quot;0&quot;,\n                                        &quot;qtn_rep_yn_16&quot;: &quot;0&quot;,\n                                        &quot;qtn_rep_yn_15&quot;: &quot;0&quot;,\n                                        &quot;ins_rsdn_no&quot;: &quot;Tc08fJZB7Ccs30r+GcpD4N4VkzSe6raL2pJrZdcJ3FuqUCXQPnMe3KtWllFkqoVWr4E2fw==&quot;,\n                                        &quot;qtn_rep_yn_18&quot;: &quot;0&quot;,\n                                        &quot;qtn_rep_yn_17&quot;: &quot;0&quot;,\n                                        &quot;qtn_rep_yn_14&quot;: &quot;0&quot;,\n                                        &quot;qtn_rep_yn_4&quot;: &quot;0&quot;,\n                                        &quot;qtn_rep_yn_20&quot;: &quot;0&quot;\n                                    }\n                                ],\n                                &quot;sl_pan_cd&quot;: &quot;A01&quot;,\n                                &quot;scy_ctc_ins&quot;: [\n                                    {\n                                        &quot;ins_nm&quot;: &quot;유관우&quot;,\n                                        &quot;ins_mbph_3&quot;: &quot;8250&quot;,\n                                        &quot;ins_rsdn_no&quot;: &quot;Tc08fJZB7Ccs30r+GcpD4N4VkzSe6raL2pJrZdcJ3FuqUCXQPnMe3KtWllFkqoVWr4E2fw==&quot;,\n                                        &quot;ins_mbph_2&quot;: &quot;9207&quot;,\n                                        &quot;ins_eml&quot;: &quot;send@mail.com&quot;,\n                                        &quot;ins_mbph_1&quot;: &quot;010&quot;,\n                                        &quot;add_dt&quot;: &quot;20210501&quot;,\n                                        &quot;sx_cd&quot;:&quot;2&quot;,\n                                        &quot;trmt_dt&quot;: &quot;20210505&quot;\n                                    }\n                                ],\n                                &quot;eny_psct&quot;: &quot;1&quot;\n                            },\n                            &quot;mast_plno&quot;: &quot;120210341120&quot;,\n                            &quot;z_ctf_yn&quot;: &quot;&quot;,\n                            &quot;scy_ctc_cvr_detl&quot;: [\n                                {\n                                    &quot;crty_arc_inam_1&quot;: &quot;10000000&quot;,\n                                    &quot;crcy_cd&quot;: &quot;WON&quot;,\n                                    &quot;sl_cvr_cd&quot;: &quot;101555&quot;,\n                                    &quot;crty_dct_amt_1&quot;: &quot;0&quot;,\n                                    &quot;sl_pan_cd&quot;: &quot;A01&quot;\n                                },\n                                {\n                                    &quot;crty_arc_inam_1&quot;: &quot;200000000&quot;,\n                                    &quot;crcy_cd&quot;: &quot;WON&quot;,\n                                    &quot;sl_cvr_cd&quot;: &quot;101545&quot;,\n                                    &quot;crty_dct_amt_1&quot;: &quot;0&quot;,\n                                    &quot;sl_pan_cd&quot;: &quot;A01&quot;\n                                }\n                            ],\n                            &quot;appt_key&quot;: &quot;&quot;,\n                            &quot;enpl_ctc_bsc_if&quot;: {\n                                &quot;arc_trm_str_dt&quot;: &quot;20210420&quot;,\n                                &quot;plhd_brtn&quot;: &quot;1358207931&quot;,\n                                &quot;arc_trm_fin_time&quot;: &quot;2400&quot;,\n                                &quot;arc_trm_str_time&quot;: &quot;0000&quot;,\n                                &quot;arc_trm_fin_dt&quot;: &quot;20210425&quot;,\n                                &quot;rcrt_empno&quot;: &quot;10786830&quot;\n                            },\n                            &quot;pdc_cd&quot;: &quot;13512&quot;\n                        },\n                        &quot;dataHeader&quot;: {\n                            &quot;z_user_id&quot;: &quot;10786830&quot;\n                        },\n                        &quot;testBody&quot;: {}\n                    }\n                    const option = {\n                        method: &#39;post&#39;,\n                        url: &#39;/v1.0/GNI/trip_overseas/inj/wound/design&#39;,\n                        data : JSON.stringify(requestData),\n                        headers: {\n                            &#39;Authorization&#39; : &#39;Bearer &#39; + userToken,\n                            &#39;timestamp&#39; : &#39;20210218190839&#39;,\n                            &#39;ci&#39; : &#39;E4PIs45uiscs8quYnySoQXuZKwjB66mE3Wqvw9gRuWOqMON3FiLQt+U4ZV42Y1+prQWpFWWnbKomShR+O5dHlg==&#39;,\n                            &#39;appKey&#39;: &#39;l7xxe840074288574eeabb346f15f7a3d6af&#39;,\n                            &#39;appSecret&#39;: &#39;f8449d6220b54dddb892a262409c3e07&#39;,\n                            &#39;Content-Type&#39;: &#39;application/json; charset=utf-8&#39;,\n                            &#39;hsKey&#39; : cryptoMy.hsKey(JSON.stringify(requestData))\n                        }\n                    }\n                    axios(option)\n                    .then(function (response) {\n                        setResult(response.data);\n                    })\n                    .catch(function (error) {\n                        // handle error\n                        console.log(error);\n                    })\n                    .then(function () {\n                        // always executed\n                    });\n                })\n            })\n            .catch(function (error) {\n                // handle error\n                console.log(error);\n            })\n            .then(function () {\n                // always executed\n            });        \n\n        })\n        .catch(function (error) {\n            // handle error\n            console.log(error);\n        })\n        .then(function () {\n            // always executed\n        });\n    }\n    const inputChange = (e) =&gt;{\n       const {name, value} = e.target;\n\n    }\n    const btnClick = () =&gt; {\n\n    }\n\n\n\n    return (\n        &lt;&gt;\n            &lt;Header title={&#39;보험 가입 데이터 입력&#39;}&gt;&lt;/Header&gt;\n            &lt;button onClick={getUserToken}&gt;api 콜&lt;/button&gt;\n            {result !== undefined &amp;&amp;\n                &lt;&gt;\n                    &lt;p&gt;이름 : {result.dataBody.pan_typ_srch_scy_ctc.scy_ctc_ins[0].ins_nm}&lt;/p&gt;    \n                    &lt;p&gt;직업명 : {result.dataBody.pan_typ_srch_scy_ctc.dtl_job_nm}&lt;/p&gt;\n                    &lt;p&gt;결과 설계번호 : {result.dataBody.rsl_plan_no_each_if[0].rsl_plan_no}&lt;/p&gt;\n                &lt;/&gt;\n            }\n        &lt;/&gt;\n\n    );\n}\n\nexport default SignupInsure;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>참고로, client 단에서 다 하면 보안의 의미가 없다.<br>\nexpress server를 만드는 게 더 좋다. 소스 하드코딩 말고 환경변수나 파일로 해야 한다.<br>\ntoken은 서버 분리를 권한다.  </p>\n<hr>\n<h3 id=\"상세조회--계약-확정\" style=\"position:relative;\">상세조회 / 계약 확정<a href=\"#%EC%83%81%EC%84%B8%EC%A1%B0%ED%9A%8C--%EA%B3%84%EC%95%BD-%ED%99%95%EC%A0%95\" aria-label=\"상세조회  계약 확정 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>pages 밑에 ConfirmCont.js 만든다.  </p>\n<p>$ npm install query-string</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">/* ConfirmCont.js */\nimport React, { useState } from &#39;react&#39;;\nimport styled from &#39;styled-components&#39;;\nimport Header from &#39;../component/Header&#39;;\nimport SearchTool from &#39;../component/SearchTool&#39;;\nimport SearchResult from &#39;../component/SearchResult&#39;;\nimport qs from &#39;query-string&#39;;\nimport axios from &#39;axios&#39;;\n\n//LOGIC\n\nconst ConfirmCont = ({location}) =&gt; {\n\n    let planId = qs.parse(location.search).planId;\n    let ssnnum = sessionStorage.getItem(&#39;ssnnum&#39;);\n    console.log(planId, ssnnum)\n    const changeText = (e) =&gt;{\n    }\n\n    const clickBtn = () =&gt; {\n\n    }\n\n    return (\n        &lt;&gt;\n            &lt;Header title={&#39;뉴스검색&#39;}&gt;&lt;/Header&gt;\n\n        &lt;/&gt;\n    );\n}\n\nexport default ConfirmCont;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>useEffect : 특정 변화를 알아내 화면 최초 실행 시 Mount 때 스크립트 실행</p>\n<p>usefToken은 sessionStorage를 활용한다 (10분까지 재사용 가능)  </p>\n<p>C:\\Users\\Choi\\Videos\\Captures</p>\n<p>금결원 사이트<br>\n<a href=\"https://developers.kftc.or.kr/dev\">https://developers.kftc.or.kr/dev</a>  </p>\n<p>d</p>","tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"/kisa-%EC%9D%B8%EC%8A%88%EC%96%B4%ED%85%8C%ED%81%AC-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B0%9C%EB%B0%9C-%EA%B8%B0%EC%B4%88-%EA%B5%90%EC%9C%A1-5%EC%9D%BC%EC%B0%A8/#%EC%96%B4%EC%A0%9C-%EC%9E%90-%EC%97%90%EB%9F%AC-%EC%88%98%EC%A0%95---%EC%9D%B4%EC%9A%A9%EC%9E%90-%ED%86%A0%ED%81%B0-%EB%B0%9C%EA%B8%89-%EA%B4%80%EB%A0%A8\">어제 자 에러 수정 - 이용자 토큰 발급 관련</a></li>\n</ul>\n</li>\n<li><a href=\"/kisa-%EC%9D%B8%EC%8A%88%EC%96%B4%ED%85%8C%ED%81%AC-%EC%84%9C%EB%B9%84%EC%8A%A4-%EA%B0%9C%EB%B0%9C-%EA%B8%B0%EC%B4%88-%EA%B5%90%EC%9C%A1-5%EC%9D%BC%EC%B0%A8/#%EC%83%81%EC%84%B8%EC%A1%B0%ED%9A%8C--%EA%B3%84%EC%95%BD-%ED%99%95%EC%A0%95\">상세조회 / 계약 확정</a></li>\n</ul>","frontmatter":{"title":"KISA 교육 후기 - 인슈어테크 서비스 개발 기초 교육 과정 5일차"}}},"pageContext":{"slug":"/kisa-인슈어테크-서비스-개발-기초-교육-5일차/"}},"staticQueryHashes":["3159585216"]}