{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/kisa-인슈어테크-서비스-개발-기초-교육-5일차/",
    "result": {"data":{"markdownRemark":{"html":"<p>DB 손보 api 실습이다.</p>\n<hr>\n<h4 id=\"어제-자-에러-수정---이용자-토큰-발급-관련\" style=\"position:relative;\">어제 자 에러 수정 - 이용자 토큰 발급 관련<a href=\"#%EC%96%B4%EC%A0%9C-%EC%9E%90-%EC%97%90%EB%9F%AC-%EC%88%98%EC%A0%95---%EC%9D%B4%EC%9A%A9%EC%9E%90-%ED%86%A0%ED%81%B0-%EB%B0%9C%EA%B8%89-%EA%B4%80%EB%A0%A8\" aria-label=\"어제 자 에러 수정   이용자 토큰 발급 관련 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>DB 손보 api 웹 개발 시작 전,<br>\n어제 에러가 났던 이용자 토큰 발급 부분을 수정했다.</p>\n<p>문제는 크게 2가지 였다.</p>\n<ol>\n<li>apiCrypto.js 를 수정했다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* apiCrypto.js */</span>\r\n<span class=\"token keyword\">const</span> crypto <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'crypto'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> pkcs7 <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pkcs7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> appSecretKey <span class=\"token operator\">=</span> <span class=\"token string\">\"f8449d6220b54dddb892a262409c3e07\"</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> timeSt <span class=\"token operator\">=</span> <span class=\"token string\">\"20210218190839\"</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> caesar <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./ceasar'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">function</span> <span class=\"token function\">rpad</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">str<span class=\"token punctuation\">,</span> padLen<span class=\"token punctuation\">,</span> padStr</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>padStr<span class=\"token punctuation\">.</span>length <span class=\"token operator\">></span> padLen<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'오류 : 채우고자 하는 문자열이 요청 길이보다 큽니다'</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">return</span> str <span class=\"token operator\">+</span> <span class=\"token string\">''</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    str <span class=\"token operator\">+=</span> <span class=\"token string\">''</span> <span class=\"token comment\">// 문자로</span>\r\n    padStr <span class=\"token operator\">+=</span> <span class=\"token string\">''</span> <span class=\"token comment\">// 문자로</span>\r\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">&lt;</span> padLen<span class=\"token punctuation\">)</span> str <span class=\"token operator\">+=</span> padStr\r\n    str <span class=\"token operator\">=</span> str<span class=\"token punctuation\">.</span>length <span class=\"token operator\">>=</span> padLen <span class=\"token operator\">?</span> str<span class=\"token punctuation\">.</span><span class=\"token function\">substring</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> padLen<span class=\"token punctuation\">)</span> <span class=\"token operator\">:</span> str\r\n    <span class=\"token keyword\">return</span> str\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">pkcs7Pad</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">params</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> buffer <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>params<span class=\"token punctuation\">,</span> <span class=\"token string\">\"utf8\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> bytes <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Uint8Array</span><span class=\"token punctuation\">(</span>buffer<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n        bytes<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> buffer<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">return</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>pkcs7<span class=\"token punctuation\">.</span><span class=\"token function\">pad</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function-variable function\">hsKey</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">str</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">const</span> key <span class=\"token operator\">=</span> appSecretKey <span class=\"token operator\">+</span> timeSt<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">var</span> hmac <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">createHmac</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"sha512\"</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer<span class=\"token punctuation\">.</span>from</span><span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">var</span> signed <span class=\"token operator\">=</span> hmac<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">Buffer<span class=\"token punctuation\">.</span>from</span><span class=\"token punctuation\">(</span>str<span class=\"token punctuation\">,</span> <span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">digest</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"base64\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>signed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> signed\r\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token function-variable function\">ssnEncrypt</span> <span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">ssnnum</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">const</span> serial <span class=\"token operator\">=</span> timeSt <span class=\"token operator\">+</span> appSecretKey<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">let</span> secureKey <span class=\"token operator\">=</span> <span class=\"token function\">rpad</span><span class=\"token punctuation\">(</span>serial<span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">var</span> bytes <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">randomBytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">let</span> iv <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">randomBytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">const</span> key <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">pbkdf2Sync</span><span class=\"token punctuation\">(</span>secureKey<span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">,</span> <span class=\"token number\">70000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sha1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">const</span> cipher <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">createCipheriv</span><span class=\"token punctuation\">(</span><span class=\"token string\">'aes-256-cbc'</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> iv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        cipher<span class=\"token punctuation\">.</span><span class=\"token function\">setAutoPadding</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'b:'</span> <span class=\"token punctuation\">,</span> bytes<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'iv:'</span><span class=\"token punctuation\">,</span> iv<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">let</span> encrypted <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token function\">pkcs7Pad</span><span class=\"token punctuation\">(</span>ssnnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'utf8'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        encrypted <span class=\"token operator\">+=</span> cipher<span class=\"token punctuation\">.</span><span class=\"token function\">final</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"here :\"</span><span class=\"token punctuation\">,</span> encrypted<span class=\"token punctuation\">)</span>\r\n        <span class=\"token keyword\">var</span> encBuf <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">from</span><span class=\"token punctuation\">(</span>encrypted<span class=\"token punctuation\">,</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">let</span> arr <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>bytes<span class=\"token punctuation\">,</span> iv<span class=\"token punctuation\">,</span> encBuf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">let</span> conBuf <span class=\"token operator\">=</span> Buffer<span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>arr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>conBuf<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token comment\">// encrypted += conBuf.toString('base64');</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>encrypted<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">return</span> conBuf<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ol start=\"2\">\n<li>AuthTest의 getUserAccessToken 부분을 수정했다.</li>\n</ol>\n<p>...axios 버그가 있다고 한다...</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">axios.post('/v1.0/cert/oauth2.0/resourceOwner', {}, {\r\n    headers: {\r\n        'Connection': 'keep-alive',\r\n        'Content-Type': 'application/json; charset=utf-8',\r\n        'appKey': 'l7xxe840074288574eeabb346f15f7a3d6af',\r\n        'appSecret': 'f8449d6220b54dddb892a262409c3e07',\r\n        'Authorization': 'Bearer ' + companyAccessToken,\r\n        'ci': 'E4PIs45uiscs8quYnySoQXuZKwjB66mE3Wqvw9gRuWOqMON3FiLQt+U4ZV42Y1+prQWpFWWnbKomShR+O5dHlg==',\r\n    }\r\n}).then((res) => {\r\n    console.log(res)\r\n})</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>pages로 FlightInput.js를 옮기고,\r\npages에 SignupInsure.js 추가하고, 어제 만든 flight의 주소를 signupInsure로 바꿨다.</p>\n<p>테스트를 위해 Input Param은 대부분 기본값으로 세팅하였다.</p>\n<p>가입 정보 받는 화면을 그린다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* SignupInsure.js */</span>\r\n\r\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> Header <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/Header'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> SearchTool <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/SearchTool'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> SearchResult <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/SearchResult'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\r\n\r\n<span class=\"token comment\">//LOGIC</span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">SignupInsure</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">,</span> setusername<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>ssnnum<span class=\"token punctuation\">,</span> setssnnum<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>phonenum<span class=\"token punctuation\">,</span> setphonenum<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isHealth<span class=\"token punctuation\">,</span> setisHealth<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>q1<span class=\"token punctuation\">,</span> setq1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">clickBtn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">inputChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\r\n       <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\r\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">setusername</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n       <span class=\"token punctuation\">}</span>\r\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'ssnnum'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">setssnnum</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n       <span class=\"token punctuation\">}</span>\r\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'phonenum'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">setphonenum</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n       <span class=\"token punctuation\">}</span>\r\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'isHealth'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">setisHealth</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n         <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'q1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token function\">setq1</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>Header title<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'보험 가입 데이터 입력'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Header<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>성명<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>주민등록번호<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>  <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>ssnnum<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'ssnnum'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>핸드폰<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>  <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>phonenum<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'phonenum'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>건강보험<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>isHealth<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'isHealth'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>취미관련 자격증이 있습니까<span class=\"token operator\">?</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>q1<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'q1'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> SignupInsure<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>주민번호는 값을 암호화하여 값을 전송한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* */</span>\r\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> Header <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/Header'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> SearchTool <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/SearchTool'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> SearchResult <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/SearchResult'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span>\r\n<span class=\"token keyword\">import</span> apiCrypto <span class=\"token keyword\">from</span> <span class=\"token string\">'../lib/apiCrypto'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token comment\">//LOGIC</span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">SignupInsure</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>username<span class=\"token punctuation\">,</span> setusername<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>ssnnum<span class=\"token punctuation\">,</span> setssnnum<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>phonenum<span class=\"token punctuation\">,</span> setphonenum<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>isHealth<span class=\"token punctuation\">,</span> setisHealth<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>q1<span class=\"token punctuation\">,</span> setq1<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">clickBtn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">inputChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\r\n       <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>name<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\r\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'username'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">setusername</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n       <span class=\"token punctuation\">}</span>\r\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'ssnnum'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">setssnnum</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n       <span class=\"token punctuation\">}</span>\r\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'phonenum'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">setphonenum</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n       <span class=\"token punctuation\">}</span>\r\n       <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'isHealth'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">setisHealth</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n         <span class=\"token punctuation\">}</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>name <span class=\"token operator\">===</span> <span class=\"token string\">'q1'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\r\n            <span class=\"token function\">setq1</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">btnClick</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">var</span> nexturl <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/insurePlan?username=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>username<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;ssnnum=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>ssnnum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;phonenum=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>phonenum<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;ishealth=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>isHealth<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">&amp;q1=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>q1<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\r\n        sessionStorage<span class=\"token punctuation\">.</span><span class=\"token function\">setItem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ssnnum'</span><span class=\"token punctuation\">,</span> apiCrypto<span class=\"token punctuation\">.</span><span class=\"token function\">ssnEncrypt</span><span class=\"token punctuation\">(</span>ssnnum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>nexturl<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        window<span class=\"token punctuation\">.</span>location<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> nexturl<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>Header title<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'보험 가입 데이터 입력'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Header<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>성명<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>username<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'username'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>주민등록번호<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>  <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>ssnnum<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'ssnnum'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>핸드폰<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>  <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>phonenum<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'phonenum'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>건강보험<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>isHealth<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'isHealth'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span>취미관련 자격증이 있습니까<span class=\"token operator\">?</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span> <span class=\"token operator\">&lt;</span>input onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>inputChange<span class=\"token punctuation\">}</span> value<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>q1<span class=\"token punctuation\">}</span> name<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'q1'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>btnClick<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>입력 완료<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> SignupInsure<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<hr>\n<p>pages에 SignupResult.js 를 생성해 다음 페이지를 만든다.</p>\n<p>AuthTest에서 이용자 토큰 발급으로 받은 값을 Authorization 쪽에 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">/* SignupResult.js*/\r\nimport axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../component/Header';\r\nimport cryptoMy from '../lib/apiCrypto';\r\n//LOGIC\r\n\r\nconst SignupResult = () => {\r\n\r\n    const getUserToken = () => {\r\n        const option = {\r\n            method: 'post',\r\n            url: '/v1.0/cert/oauth2.0/clientCredential',\r\n            headers: {\r\n                'appKey': 'l7xxe840074288574eeabb346f15f7a3d6af',\r\n                'appSecret': 'f8449d6220b54dddb892a262409c3e07',\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            }\r\n        }\r\n        axios(option)\r\n        .then(function (response) {\r\n            var companyToken = response.data.dataBody.access_token;\r\n            console.log(response.data.dataBody.access_token);\r\n            const dataBody = {\r\n                \"dataHeader\":\r\n                {\r\n                },\r\n                \"dataBody\":\r\n                {\r\n                    \"language\":null,\r\n             \"country\":null,\r\n             \"clientIp\":\"127.0.0.1\",\r\n             \"txId\":\"20200825153816934000000__3939_server1\",\r\n             \"exTxId\":null,\r\n             \"serviceName\":\"GDBD205BS.aPiiMastPlyNrmYnSrch\",\r\n             \"errorCode\":null,\r\n             \"requestPage\":1,\r\n             \"rowsPerPage\":15,\r\n             \"totalCount\":0,\r\n             \"totalPage\":0,\r\n             \"requestTimestamp\":1598337496944,\r\n             \"returnMessage\":null,\r\n             \"traceFlag\":false,\r\n             \"z_user_nm\":\"테스터\",\r\n             \"z_msg_cd\":null,\r\n             \"z_msg_type\":null,\r\n             \"z_err_cpn_id\":null,\r\n             \"z_sys_msg_cn\":null,\r\n             \"z_scrn_id\":\"\",\r\n             \"z_work_mnu_id\":\"\",\r\n             \"z_chn_cd\":\"GUI\",\r\n             \"z_mac_adr\":\"\",\r\n             \"z_afcp_dvcd\":\"\",\r\n             \"z_orn_dvcd\":\"\",\r\n             \"z_orn_no\":\"\",\r\n             \"z_orn_nm\":\"\",\r\n             \"z_stcn_no\":\"\",\r\n             \"z_stcn_nm\":\"\",\r\n             \"z_hdqt_no\":\"\",\r\n             \"z_hdqt_nm\":\"\",\r\n             \"z_bzlv_no\":\"\",\r\n             \"z_bzlv_nm\":\"\",\r\n             \"z_bh_no\":\"\",\r\n             \"z_bh_nm\":\"\",\r\n             \"z_brc_no\":\"\",\r\n             \"z_brc_nm\":\"\",\r\n             \"z_cnof_yn\":\"\",\r\n             \"z_ormm_no\":\"\",\r\n             \"z_ormm_nm\":\"\",\r\n             \"z_ormm_dvcd\":\"\",\r\n             \"z_ormm_tpcd\":\"\",\r\n             \"z_ormm_ptl_tpcd\":\"\",\r\n             \"z_magc_no\":\"\",\r\n             \"z_rp_agnc_no\":\"\",\r\n             \"z_auth_grp_cd\":\"\",\r\n             \"z_comm_auth_grp_cd\":\"\",\r\n             \"z_pos_cd\":\"\",\r\n             \"z_pos_nm\":\"\",\r\n             \"z_dty_cd\":\"\",\r\n             \"z_dty_nm\":\"\",\r\n             \"z_clpo_cd\":\"\",\r\n             \"z_clpo_nm\":\"\",\r\n             \"z_bdut_cd\":\"\",\r\n             \"z_bdut_nm\":\"\",\r\n             \"z_email\":\"\",\r\n             \"z_ctf_key\":\"\",\r\n             \"z_in_outs_dvn\":\"\",\r\n             \"z_srch_ref_orr\":null,\r\n             \"z_row_type\":1,\r\n             \"z_page_if\":{},\r\n             \"z_scrn_rltn_sys_cd\":\"\",\r\n             \"appt_key\":\"11111\",\r\n             \"mast_plno\":\"120210341120\",\r\n             \"nrm_yn\":\"\",\r\n             \"z_user_id\":\"10786830\",\r\n             \"superIFVO\":null,\r\n             \"superPRTVO\":null\r\n                }\r\n            }\r\n            const option = {\r\n                method: 'post',\r\n                url: '/v1.0/GNI/comm/mastplysrch',\r\n                data : JSON.stringify(dataBody),\r\n                headers: {\r\n                    'Authorization' : 'Bearer ' + companyToken,\r\n                    'timestamp' : '20210218190839',\r\n                    'ci' : 'E4PIs45uiscs8quYnySoQXuZKwjB66mE3Wqvw9gRuWOqMON3FiLQt+U4ZV42Y1+prQWpFWWnbKomShR+O5dHlg==',\r\n                    'appKey': 'l7xxe840074288574eeabb346f15f7a3d6af',\r\n                    'appSecret': 'f8449d6220b54dddb892a262409c3e07',\r\n                    'Content-Type': 'application/json; charset=utf-8',\r\n                    'hsKey' : cryptoMy.hsKey(JSON.stringify(dataBody))\r\n                }\r\n            }\r\n            axios(option)\r\n            .then(function (response) {\r\n                axios.post('/v1.0/cert/oauth2.0/resourceOwner', {}, {\r\n                    headers: {\r\n                        'Connection': 'keep-alive',\r\n                        'Content-Type': 'application/json; charset=utf-8',\r\n                        'appKey': 'l7xxe840074288574eeabb346f15f7a3d6af',\r\n                        'appSecret': 'f8449d6220b54dddb892a262409c3e07',\r\n                        'Authorization': 'Bearer ' + companyToken,\r\n                        'ci': 'E4PIs45uiscs8quYnySoQXuZKwjB66mE3Wqvw9gRuWOqMON3FiLQt+U4ZV42Y1+prQWpFWWnbKomShR+O5dHlg==',\r\n                    }\r\n                }).then((res) => {\r\n                    console.log(res.data.dataBody.access_token);\r\n                    var userToken = res.data.dataBody.access_token;\r\n                    var requestData = {\r\n                        \"dataBody\": {\r\n                            \"z_chn_cd\": \"API\",\r\n                            \"pan_typ_srch_scy_ctc\": {\r\n                                \"job_cd\": \"12021\",\r\n                                \"ntin_heal_arc_eny_yn\": \"1\",\r\n                                \"tdtn_cd\": \"US\",\r\n                                \"ins_qtnd\": [\r\n                                    {\r\n                                        \"qtn_rep_yn_19\": \"0\",\r\n                                        \"qtn_rep_yn_16\": \"0\",\r\n                                        \"qtn_rep_yn_15\": \"0\",\r\n                                        \"ins_rsdn_no\": \"Tc08fJZB7Ccs30r+GcpD4N4VkzSe6raL2pJrZdcJ3FuqUCXQPnMe3KtWllFkqoVWr4E2fw==\",\r\n                                        \"qtn_rep_yn_18\": \"0\",\r\n                                        \"qtn_rep_yn_17\": \"0\",\r\n                                        \"qtn_rep_yn_14\": \"0\",\r\n                                        \"qtn_rep_yn_4\": \"0\",\r\n                                        \"qtn_rep_yn_20\": \"0\"\r\n                                    }\r\n                                ],\r\n                                \"sl_pan_cd\": \"A01\",\r\n                                \"scy_ctc_ins\": [\r\n                                    {\r\n                                        \"ins_nm\": \"유관우\",\r\n                                        \"ins_mbph_3\": \"8250\",\r\n                                        \"ins_rsdn_no\": \"Tc08fJZB7Ccs30r+GcpD4N4VkzSe6raL2pJrZdcJ3FuqUCXQPnMe3KtWllFkqoVWr4E2fw==\",\r\n                                        \"ins_mbph_2\": \"9207\",\r\n                                        \"ins_eml\": \"send@mail.com\",\r\n                                        \"ins_mbph_1\": \"010\",\r\n                                        \"add_dt\": \"20210501\",\r\n                                        \"sx_cd\":\"2\",\r\n                                        \"trmt_dt\": \"20210505\"\r\n                                    }\r\n                                ],\r\n                                \"eny_psct\": \"1\"\r\n                            },\r\n                            \"mast_plno\": \"120210341120\",\r\n                            \"z_ctf_yn\": \"\",\r\n                            \"scy_ctc_cvr_detl\": [\r\n                                {\r\n                                    \"crty_arc_inam_1\": \"10000000\",\r\n                                    \"crcy_cd\": \"WON\",\r\n                                    \"sl_cvr_cd\": \"101555\",\r\n                                    \"crty_dct_amt_1\": \"0\",\r\n                                    \"sl_pan_cd\": \"A01\"\r\n                                },\r\n                                {\r\n                                    \"crty_arc_inam_1\": \"200000000\",\r\n                                    \"crcy_cd\": \"WON\",\r\n                                    \"sl_cvr_cd\": \"101545\",\r\n                                    \"crty_dct_amt_1\": \"0\",\r\n                                    \"sl_pan_cd\": \"A01\"\r\n                                }\r\n                            ],\r\n                            \"appt_key\": \"\",\r\n                            \"enpl_ctc_bsc_if\": {\r\n                                \"arc_trm_str_dt\": \"20210420\",\r\n                                \"plhd_brtn\": \"1358207931\",\r\n                                \"arc_trm_fin_time\": \"2400\",\r\n                                \"arc_trm_str_time\": \"0000\",\r\n                                \"arc_trm_fin_dt\": \"20210425\",\r\n                                \"rcrt_empno\": \"10786830\"\r\n                            },\r\n                            \"pdc_cd\": \"13512\"\r\n                        },\r\n                        \"dataHeader\": {\r\n                            \"z_user_id\": \"10786830\"\r\n                        },\r\n                        \"testBody\": {}\r\n                    }\r\n                    const option = {\r\n                        method: 'post',\r\n                        url: '/v1.0/GNI/trip_overseas/inj/wound/design',\r\n                        data : JSON.stringify(requestData),\r\n                        headers: {\r\n                            'Authorization' : 'Bearer ' + userToken,\r\n                            'timestamp' : '20210218190839',\r\n                            'ci' : 'E4PIs45uiscs8quYnySoQXuZKwjB66mE3Wqvw9gRuWOqMON3FiLQt+U4ZV42Y1+prQWpFWWnbKomShR+O5dHlg==',\r\n                            'appKey': 'l7xxe840074288574eeabb346f15f7a3d6af',\r\n                            'appSecret': 'f8449d6220b54dddb892a262409c3e07',\r\n                            'Content-Type': 'application/json; charset=utf-8',\r\n                            'hsKey' : cryptoMy.hsKey(JSON.stringify(requestData))\r\n                        }\r\n                    }\r\n                    axios(option)\r\n                    .then(function (response) {\r\n                        console.log(response.data);\r\n                    })\r\n                    .catch(function (error) {\r\n                        // handle error\r\n                        console.log(error);\r\n                    })\r\n                    .then(function () {\r\n                        // always executed\r\n                    });\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            .then(function () {\r\n                // always executed\r\n            });        \r\n\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n        })\r\n        .then(function () {\r\n            // always executed\r\n        });\r\n    }\r\n    const inputChange = (e) =>{\r\n       const {name, value} = e.target;\r\n\r\n    }\r\n    const btnClick = () => {\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        &lt;>\r\n            &lt;Header title={'보험 가입 데이터 입력'}>&lt;/Header>\r\n            &lt;button onClick={getUserToken}>api 콜&lt;/button>\r\n        &lt;/>\r\n\r\n    );\r\n}\r\n\r\nexport default SignupResult;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>lib에 userTokenGet.js 를 만든다.   moduleTest.js도.</p>\n<p>이렇게 하면 3개가 동시에 실행돼 빨리 끝나는 순으로,<br>\ncallback 되는 식이라 에러가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token function\">getAccessToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token function\">getMaster</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token function\">getUserAccessToken</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>1번 안에 2번, 2번 안에 3번 넣는 무식한 방법이 있는데, 소스 관리에 적합하지는 않다.</p>\n<p><code class=\"language-text\">userTokenGet, moduleTest, signupResult</code></p>\n<p>signupResult에 설계 결과까지 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">import axios from 'axios';\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../component/Header';\r\nimport cryptoMy from '../lib/apiCrypto';\r\n//LOGIC\r\n\r\nconst SignupInsure = () => {\r\n    const [result, setResult] = useState(undefined);\r\n    const getUserToken = () => {\r\n        const option = {\r\n            method: 'post',\r\n            url: '/v1.0/cert/oauth2.0/clientCredential',\r\n            headers: {\r\n                'appKey': 'l7xxe840074288574eeabb346f15f7a3d6af',\r\n                'appSecret': 'f8449d6220b54dddb892a262409c3e07',\r\n                'Content-Type': 'application/json; charset=utf-8'\r\n            }\r\n        }\r\n        axios(option)\r\n        .then(function (response) {\r\n            var companyToken = response.data.dataBody.access_token;\r\n            console.log(response.data.dataBody.access_token);\r\n            const dataBody = {\r\n                \"dataHeader\":\r\n                {\r\n                },\r\n                \"dataBody\":\r\n                {\r\n                    \"language\":null,\r\n             \"country\":null,\r\n             \"clientIp\":\"127.0.0.1\",\r\n             \"txId\":\"20200825153816934000000__3939_server1\",\r\n             \"exTxId\":null,\r\n             \"serviceName\":\"GDBD205BS.aPiiMastPlyNrmYnSrch\",\r\n             \"errorCode\":null,\r\n             \"requestPage\":1,\r\n             \"rowsPerPage\":15,\r\n             \"totalCount\":0,\r\n             \"totalPage\":0,\r\n             \"requestTimestamp\":1598337496944,\r\n             \"returnMessage\":null,\r\n             \"traceFlag\":false,\r\n             \"z_user_nm\":\"테스터\",\r\n             \"z_msg_cd\":null,\r\n             \"z_msg_type\":null,\r\n             \"z_err_cpn_id\":null,\r\n             \"z_sys_msg_cn\":null,\r\n             \"z_scrn_id\":\"\",\r\n             \"z_work_mnu_id\":\"\",\r\n             \"z_chn_cd\":\"GUI\",\r\n             \"z_mac_adr\":\"\",\r\n             \"z_afcp_dvcd\":\"\",\r\n             \"z_orn_dvcd\":\"\",\r\n             \"z_orn_no\":\"\",\r\n             \"z_orn_nm\":\"\",\r\n             \"z_stcn_no\":\"\",\r\n             \"z_stcn_nm\":\"\",\r\n             \"z_hdqt_no\":\"\",\r\n             \"z_hdqt_nm\":\"\",\r\n             \"z_bzlv_no\":\"\",\r\n             \"z_bzlv_nm\":\"\",\r\n             \"z_bh_no\":\"\",\r\n             \"z_bh_nm\":\"\",\r\n             \"z_brc_no\":\"\",\r\n             \"z_brc_nm\":\"\",\r\n             \"z_cnof_yn\":\"\",\r\n             \"z_ormm_no\":\"\",\r\n             \"z_ormm_nm\":\"\",\r\n             \"z_ormm_dvcd\":\"\",\r\n             \"z_ormm_tpcd\":\"\",\r\n             \"z_ormm_ptl_tpcd\":\"\",\r\n             \"z_magc_no\":\"\",\r\n             \"z_rp_agnc_no\":\"\",\r\n             \"z_auth_grp_cd\":\"\",\r\n             \"z_comm_auth_grp_cd\":\"\",\r\n             \"z_pos_cd\":\"\",\r\n             \"z_pos_nm\":\"\",\r\n             \"z_dty_cd\":\"\",\r\n             \"z_dty_nm\":\"\",\r\n             \"z_clpo_cd\":\"\",\r\n             \"z_clpo_nm\":\"\",\r\n             \"z_bdut_cd\":\"\",\r\n             \"z_bdut_nm\":\"\",\r\n             \"z_email\":\"\",\r\n             \"z_ctf_key\":\"\",\r\n             \"z_in_outs_dvn\":\"\",\r\n             \"z_srch_ref_orr\":null,\r\n             \"z_row_type\":1,\r\n             \"z_page_if\":{},\r\n             \"z_scrn_rltn_sys_cd\":\"\",\r\n             \"appt_key\":\"11111\",\r\n             \"mast_plno\":\"120210341120\",\r\n             \"nrm_yn\":\"\",\r\n             \"z_user_id\":\"10786830\",\r\n             \"superIFVO\":null,\r\n             \"superPRTVO\":null\r\n                }\r\n            }\r\n            const option = {\r\n                method: 'post',\r\n                url: '/v1.0/GNI/comm/mastplysrch',\r\n                data : JSON.stringify(dataBody),\r\n                headers: {\r\n                    'Authorization' : 'Bearer ' + companyToken,\r\n                    'timestamp' : '20210218190839',\r\n                    'ci' : 'E4PIs45uiscs8quYnySoQXuZKwjB66mE3Wqvw9gRuWOqMON3FiLQt+U4ZV42Y1+prQWpFWWnbKomShR+O5dHlg==',\r\n                    'appKey': 'l7xxe840074288574eeabb346f15f7a3d6af',\r\n                    'appSecret': 'f8449d6220b54dddb892a262409c3e07',\r\n                    'Content-Type': 'application/json; charset=utf-8',\r\n                    'hsKey' : cryptoMy.hsKey(JSON.stringify(dataBody))\r\n                }\r\n            }\r\n            axios(option)\r\n            .then(function (response) {\r\n                axios.post('/v1.0/cert/oauth2.0/resourceOwner', {}, {\r\n                    headers: {\r\n                        'Connection': 'keep-alive',\r\n                        'Content-Type': 'application/json; charset=utf-8',\r\n                        'appKey': 'l7xxe840074288574eeabb346f15f7a3d6af',\r\n                        'appSecret': 'f8449d6220b54dddb892a262409c3e07',\r\n                        'Authorization': 'Bearer ' + companyToken,\r\n                        'ci': 'E4PIs45uiscs8quYnySoQXuZKwjB66mE3Wqvw9gRuWOqMON3FiLQt+U4ZV42Y1+prQWpFWWnbKomShR+O5dHlg==',\r\n                    }\r\n                }).then((res) => {\r\n                    console.log(res.data.dataBody.access_token);\r\n                    var userToken = res.data.dataBody.access_token;\r\n                    var requestData = {\r\n                        \"dataBody\": {\r\n                            \"z_chn_cd\": \"API\",\r\n                            \"pan_typ_srch_scy_ctc\": {\r\n                                \"job_cd\": \"12021\",\r\n                                \"ntin_heal_arc_eny_yn\": \"1\",\r\n                                \"tdtn_cd\": \"US\",\r\n                                \"ins_qtnd\": [\r\n                                    {\r\n                                        \"qtn_rep_yn_19\": \"0\",\r\n                                        \"qtn_rep_yn_16\": \"0\",\r\n                                        \"qtn_rep_yn_15\": \"0\",\r\n                                        \"ins_rsdn_no\": \"Tc08fJZB7Ccs30r+GcpD4N4VkzSe6raL2pJrZdcJ3FuqUCXQPnMe3KtWllFkqoVWr4E2fw==\",\r\n                                        \"qtn_rep_yn_18\": \"0\",\r\n                                        \"qtn_rep_yn_17\": \"0\",\r\n                                        \"qtn_rep_yn_14\": \"0\",\r\n                                        \"qtn_rep_yn_4\": \"0\",\r\n                                        \"qtn_rep_yn_20\": \"0\"\r\n                                    }\r\n                                ],\r\n                                \"sl_pan_cd\": \"A01\",\r\n                                \"scy_ctc_ins\": [\r\n                                    {\r\n                                        \"ins_nm\": \"유관우\",\r\n                                        \"ins_mbph_3\": \"8250\",\r\n                                        \"ins_rsdn_no\": \"Tc08fJZB7Ccs30r+GcpD4N4VkzSe6raL2pJrZdcJ3FuqUCXQPnMe3KtWllFkqoVWr4E2fw==\",\r\n                                        \"ins_mbph_2\": \"9207\",\r\n                                        \"ins_eml\": \"send@mail.com\",\r\n                                        \"ins_mbph_1\": \"010\",\r\n                                        \"add_dt\": \"20210501\",\r\n                                        \"sx_cd\":\"2\",\r\n                                        \"trmt_dt\": \"20210505\"\r\n                                    }\r\n                                ],\r\n                                \"eny_psct\": \"1\"\r\n                            },\r\n                            \"mast_plno\": \"120210341120\",\r\n                            \"z_ctf_yn\": \"\",\r\n                            \"scy_ctc_cvr_detl\": [\r\n                                {\r\n                                    \"crty_arc_inam_1\": \"10000000\",\r\n                                    \"crcy_cd\": \"WON\",\r\n                                    \"sl_cvr_cd\": \"101555\",\r\n                                    \"crty_dct_amt_1\": \"0\",\r\n                                    \"sl_pan_cd\": \"A01\"\r\n                                },\r\n                                {\r\n                                    \"crty_arc_inam_1\": \"200000000\",\r\n                                    \"crcy_cd\": \"WON\",\r\n                                    \"sl_cvr_cd\": \"101545\",\r\n                                    \"crty_dct_amt_1\": \"0\",\r\n                                    \"sl_pan_cd\": \"A01\"\r\n                                }\r\n                            ],\r\n                            \"appt_key\": \"\",\r\n                            \"enpl_ctc_bsc_if\": {\r\n                                \"arc_trm_str_dt\": \"20210420\",\r\n                                \"plhd_brtn\": \"1358207931\",\r\n                                \"arc_trm_fin_time\": \"2400\",\r\n                                \"arc_trm_str_time\": \"0000\",\r\n                                \"arc_trm_fin_dt\": \"20210425\",\r\n                                \"rcrt_empno\": \"10786830\"\r\n                            },\r\n                            \"pdc_cd\": \"13512\"\r\n                        },\r\n                        \"dataHeader\": {\r\n                            \"z_user_id\": \"10786830\"\r\n                        },\r\n                        \"testBody\": {}\r\n                    }\r\n                    const option = {\r\n                        method: 'post',\r\n                        url: '/v1.0/GNI/trip_overseas/inj/wound/design',\r\n                        data : JSON.stringify(requestData),\r\n                        headers: {\r\n                            'Authorization' : 'Bearer ' + userToken,\r\n                            'timestamp' : '20210218190839',\r\n                            'ci' : 'E4PIs45uiscs8quYnySoQXuZKwjB66mE3Wqvw9gRuWOqMON3FiLQt+U4ZV42Y1+prQWpFWWnbKomShR+O5dHlg==',\r\n                            'appKey': 'l7xxe840074288574eeabb346f15f7a3d6af',\r\n                            'appSecret': 'f8449d6220b54dddb892a262409c3e07',\r\n                            'Content-Type': 'application/json; charset=utf-8',\r\n                            'hsKey' : cryptoMy.hsKey(JSON.stringify(requestData))\r\n                        }\r\n                    }\r\n                    axios(option)\r\n                    .then(function (response) {\r\n                        setResult(response.data);\r\n                    })\r\n                    .catch(function (error) {\r\n                        // handle error\r\n                        console.log(error);\r\n                    })\r\n                    .then(function () {\r\n                        // always executed\r\n                    });\r\n                })\r\n            })\r\n            .catch(function (error) {\r\n                // handle error\r\n                console.log(error);\r\n            })\r\n            .then(function () {\r\n                // always executed\r\n            });        \r\n\r\n        })\r\n        .catch(function (error) {\r\n            // handle error\r\n            console.log(error);\r\n        })\r\n        .then(function () {\r\n            // always executed\r\n        });\r\n    }\r\n    const inputChange = (e) =>{\r\n       const {name, value} = e.target;\r\n\r\n    }\r\n    const btnClick = () => {\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        &lt;>\r\n            &lt;Header title={'보험 가입 데이터 입력'}>&lt;/Header>\r\n            &lt;button onClick={getUserToken}>api 콜&lt;/button>\r\n            {result !== undefined &amp;&amp;\r\n                &lt;>\r\n                    &lt;p>이름 : {result.dataBody.pan_typ_srch_scy_ctc.scy_ctc_ins[0].ins_nm}&lt;/p>    \r\n                    &lt;p>직업명 : {result.dataBody.pan_typ_srch_scy_ctc.dtl_job_nm}&lt;/p>\r\n                    &lt;p>결과 설계번호 : {result.dataBody.rsl_plan_no_each_if[0].rsl_plan_no}&lt;/p>\r\n                &lt;/>\r\n            }\r\n        &lt;/>\r\n\r\n    );\r\n}\r\n\r\nexport default SignupInsure;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>참고로, client 단에서 다 하면 보안의 의미가 없다.<br>\nexpress server를 만드는 게 더 좋다. 소스 하드코딩 말고 환경변수나 파일로 해야 한다.<br>\ntoken은 서버 분리를 권한다.</p>\n<hr>\n<h3 id=\"상세조회--계약-확정\" style=\"position:relative;\">상세조회 / 계약 확정<a href=\"#%EC%83%81%EC%84%B8%EC%A1%B0%ED%9A%8C--%EA%B3%84%EC%95%BD-%ED%99%95%EC%A0%95\" aria-label=\"상세조회  계약 확정 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>pages 밑에 ConfirmCont.js 만든다.</p>\n<p>$ npm install query-string</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">/* ConfirmCont.js */\r\nimport React, { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport Header from '../component/Header';\r\nimport SearchTool from '../component/SearchTool';\r\nimport SearchResult from '../component/SearchResult';\r\nimport qs from 'query-string';\r\nimport axios from 'axios';\r\n\r\n//LOGIC\r\n\r\nconst ConfirmCont = ({location}) => {\r\n\r\n    let planId = qs.parse(location.search).planId;\r\n    let ssnnum = sessionStorage.getItem('ssnnum');\r\n    console.log(planId, ssnnum)\r\n    const changeText = (e) =>{\r\n    }\r\n\r\n    const clickBtn = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        &lt;>\r\n            &lt;Header title={'뉴스검색'}>&lt;/Header>\r\n\r\n        &lt;/>\r\n    );\r\n}\r\n\r\nexport default ConfirmCont;</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>useEffect : 특정 변화를 알아내 화면 최초 실행 시 Mount 때 스크립트 실행</p>\n<p>usefToken은 sessionStorage를 활용한다 (10분까지 재사용 가능)</p>\n<p>C:\\Users\\Choi\\Videos\\Captures</p>\n<p>금결원 사이트<br>\n<a href=\"https://developers.kftc.or.kr/dev\">https://developers.kftc.or.kr/dev</a></p>\n<p>d</p>","tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"#%EC%96%B4%EC%A0%9C-%EC%9E%90-%EC%97%90%EB%9F%AC-%EC%88%98%EC%A0%95---%EC%9D%B4%EC%9A%A9%EC%9E%90-%ED%86%A0%ED%81%B0-%EB%B0%9C%EA%B8%89-%EA%B4%80%EB%A0%A8\">어제 자 에러 수정 - 이용자 토큰 발급 관련</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%EC%83%81%EC%84%B8%EC%A1%B0%ED%9A%8C--%EA%B3%84%EC%95%BD-%ED%99%95%EC%A0%95\">상세조회 / 계약 확정</a></p>\n</li>\n</ul>","frontmatter":{"title":"KISA 교육 후기 - 인슈어테크 서비스 개발 기초 교육 과정 5일차"}}},"pageContext":{"slug":"/kisa-인슈어테크-서비스-개발-기초-교육-5일차/"}},
    "staticQueryHashes": ["3159585216"]}