{"componentChunkName":"component---src-templates-blog-post-js","path":"/Hands-On-Machine-learning-정리/","result":{"data":{"markdownRemark":{"html":"<p>책 &#x3C;1년 안에 AI 빅데이터 전문가가 되는 법>에 나오는 책이 동네 도서관으로 오기를 기다리면서, 그 사이 봐 볼 책을 하나 골랐다.  </p>\n<p>지난주에 보던 캐글 책보다 이게 좀 더 실용적이라 갈아탔다. <del>(보던 책은 데이터 분석이 익숙해 지고 다시 보든지 뭐...)</del> 다만, 사이킷런은 좀 생소한데, 책이 워낙 친절해서 (...) 감안하기로 했다. 2판이라 컬러풀한데다가 tf 2 버전대인 거도 마음에 든다. Keras도.  </p>\n<p>늦어도 다음 주까지는 다 보고 싶다.</p>\n<p>내후년에는 직무를 바꿔야 할 텐데 어지럽다... 하고 싶은 분야가 너무 많은데, 이 책은 넓게 다루니까 범위 좀 추려볼 수 있는 기회가 됐음 싶고...  </p>\n<ul>\n<li>코딩테스트 공부를 시작해야겠다.  </li>\n<li>부스트코스 UI개발 코칭스터디 몇시에 발표되는거지...? 떨어지면 서포터즈 3기를 지원해야겠다. 회사 다니면서 백만 했더니 너무 어렵다 프론트ㅠㅠ  </li>\n</ul>\n<h4 id=\"메모\" style=\"position:relative;\">메모<a href=\"#%EB%A9%94%EB%AA%A8\" aria-label=\"메모 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ul>\n<li><a href=\"https://github.com/rickiepark/handson-ml2\">책 코드 예제</a><br>\ncf. 위 github에 jupyter notebook(.ipynb)이 올라와 있는데, google colab에서도 실행할 수 있게 잘 해 놓음. 추천!  </li>\n<li><a href=\"https://www.youtube.com/playlist?list=PLJN246lAkhQjX3LOdLVnfdFaCbGouEBeb\">책 동영상 강의 List</a>  </li>\n<li>저작권 문제가 있으니 내용을 열심히 쓰진 않음;;  </li>\n</ul>\n<hr>\n<h3 id=\"1장---한눈에-보는-머신러닝\" style=\"position:relative;\">1장 - 한눈에 보는 머신러닝<a href=\"#1%EC%9E%A5---%ED%95%9C%EB%88%88%EC%97%90-%EB%B3%B4%EB%8A%94-%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D\" aria-label=\"1장   한눈에 보는 머신러닝 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>1장에서는 ML에 대한 basic한 개념을 다룬다.  </p>\n<p>실제 필드(회사 업무)에서 쓰게 된다면, batch나 mini-batch로 쓰게 되겠지 싶다. 도커를 쓴다면 모를까... ㅎㅎ  </p>\n<p><strong>(생각 중)</strong>  </p>\n<h3 id=\"2장---머신러닝-프로젝트-처음부터-끝까지\" style=\"position:relative;\">2장 - 머신러닝 프로젝트 처음부터 끝까지<a href=\"#2%EC%9E%A5---%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%B2%98%EC%9D%8C%EB%B6%80%ED%84%B0-%EB%81%9D%EA%B9%8C%EC%A7%80\" aria-label=\"2장   머신러닝 프로젝트 처음부터 끝까지 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>중간에 보던 캐글 책을 버리게 된 결정적인 계기가 된 부분이다.<br>\n3년 만에 실제 데이터를 다루려니, 아직은 어색(?)해서 이렇게 자세한 설명이 된 책이 필요했다.  </p>\n<p>2장에서는 주택 가격 예측을 한다.\n= 지도학습/다중회귀/단변량회귀/배치  </p>\n<p>회귀 > 성능측정 > RMSE (outlier가 많으면 MAE)  </p>\n<p>housing.info() / housing[\"???\"].value_counts() / housing.describe() / housing.hist()  </p>\n<p>data split => 데이터 스누핑(data snooping) 편향  </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token operator\">//</span> 사이킷런에 있긴 함\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> train_test_split\ntrain_set<span class=\"token punctuation\">,</span> test_set <span class=\"token operator\">=</span> train_test_split<span class=\"token punctuation\">(</span>housing<span class=\"token punctuation\">,</span> test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> random_state<span class=\"token operator\">=</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>소득 카테고리  </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">housing<span class=\"token punctuation\">[</span><span class=\"token string\">\"income_cat\"</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>housing<span class=\"token punctuation\">[</span><span class=\"token string\">\"median_income\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                               bins<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3.0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4.5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> np<span class=\"token punctuation\">.</span>inf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                               labels<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>소득 카테고리 기반 계층 샘플링 => 전체 데이터셋과 비슷  </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>model_selection <span class=\"token keyword\">import</span> StratifiedShuffleSplit\n\nsplit <span class=\"token operator\">=</span> StratifiedShuffleSplit<span class=\"token punctuation\">(</span>n_splits<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> test_size<span class=\"token operator\">=</span><span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span> random_state<span class=\"token operator\">=</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> train_index<span class=\"token punctuation\">,</span> test_index <span class=\"token keyword\">in</span> split<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span>housing<span class=\"token punctuation\">,</span> housing<span class=\"token punctuation\">[</span><span class=\"token string\">\"income_cat\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n    strat_train_set <span class=\"token operator\">=</span> housing<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>train_index<span class=\"token punctuation\">]</span>\n    strat_test_set <span class=\"token operator\">=</span> housing<span class=\"token punctuation\">.</span>loc<span class=\"token punctuation\">[</span>test_index<span class=\"token punctuation\">]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>EDA 및 시각화 - strat<em>train</em>set 변형 방지를 위해 .copy() 복사본 활용<br>\n.plot()</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">housing<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>kind<span class=\"token operator\">=</span><span class=\"token string\">\"scatter\"</span><span class=\"token punctuation\">,</span> x<span class=\"token operator\">=</span><span class=\"token string\">\"longitude\"</span><span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span><span class=\"token string\">\"latitude\"</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">0.4</span><span class=\"token punctuation\">,</span>\n    s<span class=\"token operator\">=</span>housing<span class=\"token punctuation\">[</span><span class=\"token string\">\"population\"</span><span class=\"token punctuation\">]</span><span class=\"token operator\">/</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"population\"</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    c<span class=\"token operator\">=</span><span class=\"token string\">\"median_house_value\"</span><span class=\"token punctuation\">,</span> cmap<span class=\"token operator\">=</span>plt<span class=\"token punctuation\">.</span>get_cmap<span class=\"token punctuation\">(</span><span class=\"token string\">\"jet\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> colorbar<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\n    sharex<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\nplt<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsave_fig<span class=\"token punctuation\">(</span><span class=\"token string\">\"housing_prices_scatterplot\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>상관계수 .corr() - 선형관계 한정  </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">corr_matrix<span class=\"token punctuation\">[</span><span class=\"token string\">\"median_house_value\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># from pandas.tools.plotting import scatter_matrix # 옛날 버전의 판다스에서는</span>\n<span class=\"token keyword\">from</span> pandas<span class=\"token punctuation\">.</span>plotting <span class=\"token keyword\">import</span> scatter_matrix\n\nattributes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"median_house_value\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"median_income\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"total_rooms\"</span><span class=\"token punctuation\">,</span>\n              <span class=\"token string\">\"housing_median_age\"</span><span class=\"token punctuation\">]</span>\nscatter_matrix<span class=\"token punctuation\">(</span>housing<span class=\"token punctuation\">[</span>attributes<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">12</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nsave_fig<span class=\"token punctuation\">(</span><span class=\"token string\">\"scatter_matrix_plot\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>ML을 위한 데이터 준비</p>\n<p>.drop() .dropna() .fillna() 등 있다만,<br>\n사이킷런 SimpleImputer을 활용하여 전처리 진행  </p>\n<ul>\n<li>훈련 세트에서 계산한 .median 을 fillna</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">median <span class=\"token operator\">=</span> housing<span class=\"token punctuation\">[</span><span class=\"token string\">\"total_bedrooms\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>median<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nsample_incomplete_rows<span class=\"token punctuation\">[</span><span class=\"token string\">\"total_bedrooms\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span>median<span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 옵션 3</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>수치형만 적용 가능해서 텍스트 특성 삭제 후 fit</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>impute <span class=\"token keyword\">import</span> SimpleImputer\nimputer <span class=\"token operator\">=</span> SimpleImputer<span class=\"token punctuation\">(</span>strategy<span class=\"token operator\">=</span><span class=\"token string\">\"median\"</span><span class=\"token punctuation\">)</span>\n\nhousing_num <span class=\"token operator\">=</span> housing<span class=\"token punctuation\">.</span>drop<span class=\"token punctuation\">(</span><span class=\"token string\">\"ocean_proximity\"</span><span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\"># 다른 방법: housing_num = housing.select_dtypes(include=[np.number])</span>\nimputer<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>housing_num<span class=\"token punctuation\">)</span>\nimputer<span class=\"token punctuation\">.</span>statistics_  <span class=\"token comment\"># housing_num.median().values 값과 동일</span>\n\nX <span class=\"token operator\">=</span> imputer<span class=\"token punctuation\">.</span>transform<span class=\"token punctuation\">(</span>housing_num<span class=\"token punctuation\">)</span>\nhousing_tr <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span>housing_num<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">,</span>\n                          index<span class=\"token operator\">=</span>housing_num<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>범주형은 숫자로 변환해야 ML에 적용 가능  </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> OrdinalEncoder\n\nordinal_encoder <span class=\"token operator\">=</span> OrdinalEncoder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nhousing_cat_encoded <span class=\"token operator\">=</span> ordinal_encoder<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>housing_cat<span class=\"token punctuation\">)</span>\nhousing_cat_encoded<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token comment\"># OneHotEncoder : sparse matrix이다.</span>\nordinal_encoder<span class=\"token punctuation\">.</span>categories_\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> OneHotEncoder\n\ncat_encoder <span class=\"token operator\">=</span> OneHotEncoder<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nhousing_cat_1hot <span class=\"token operator\">=</span> cat_encoder<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>housing_cat<span class=\"token punctuation\">)</span>\nhousing_cat_1hot\nhousing_cat_1hot<span class=\"token punctuation\">.</span>toarray<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>특성 스케일링 feature scaling => min-max 스케일링 / 표준화 (MinMaxScaler / StandardScaler)  </p>","tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"/Hands-On-Machine-learning-%EC%A0%95%EB%A6%AC/#%EB%A9%94%EB%AA%A8\">메모</a></li>\n</ul>\n</li>\n<li><a href=\"/Hands-On-Machine-learning-%EC%A0%95%EB%A6%AC/#1%EC%9E%A5---%ED%95%9C%EB%88%88%EC%97%90-%EB%B3%B4%EB%8A%94-%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D\">1장 - 한눈에 보는 머신러닝</a></li>\n<li><a href=\"/Hands-On-Machine-learning-%EC%A0%95%EB%A6%AC/#2%EC%9E%A5---%EB%A8%B8%EC%8B%A0%EB%9F%AC%EB%8B%9D-%ED%94%84%EB%A1%9C%EC%A0%9D%ED%8A%B8-%EC%B2%98%EC%9D%8C%EB%B6%80%ED%84%B0-%EB%81%9D%EA%B9%8C%EC%A7%80\">2장 - 머신러닝 프로젝트 처음부터 끝까지</a></li>\n</ul>","frontmatter":{"title":"책 핸즈온 머신러닝 생각 1,2장 정리"}}},"pageContext":{"slug":"/Hands-On-Machine-learning-정리/"}},"staticQueryHashes":["3159585216"]}