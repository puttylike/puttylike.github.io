{"componentChunkName":"component---src-templates-blog-post-js","path":"/ai-이노베이션-스퀘어-언어-9일차/","result":{"data":{"markdownRemark":{"html":"<p>2주 만의 강의이다.<br>\n간만의 tensorflow 입문.</p>\n<hr>\n<h3 id=\"9일차\" style=\"position:relative;\">9일차<a href=\"#9%EC%9D%BC%EC%B0%A8\" aria-label=\"9일차 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li><a href=\"https://colab.research.google.com/notebooks/intro.ipynb#recent=true\">https://colab.research.google.com/notebooks/intro.ipynb#recent=true</a></li>\n</ul>\n<p>colab 아닌 VS에서 ipynb 파일을 생성해 진행하였다.</p>\n<p>$ pip install tensorflow==2.6.0</p>\n<ul>\n<li>00_tensorflow_fundamentals.ipynb</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> tensorflow <span class=\"token keyword\">as</span> tf\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>__version__<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 2.6.0</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>tensorflow : 데이터 전처리, 데이터 모델링, 모델 제공을 위한 오픈소스 머신 러닝 라이브러리</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">scalar <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\r\nscalar <span class=\"token comment\"># &lt;tf.Tensor: shape=(), dtype=int32, numpy=7></span>\r\n\r\nscalar<span class=\"token punctuation\">.</span>ndim <span class=\"token comment\"># 0</span>\r\n\r\nvector <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nvector <span class=\"token comment\"># &lt;tf.Tensor: shape=(2,), dtype=int32, numpy=array([10, 10])></span>\r\n\r\nvector<span class=\"token punctuation\">.</span>ndim <span class=\"token comment\"># 1</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>일반적으로 tensorflow를 사용할 때 위에서처럼 직접 텐서를 만들지 않습니다.<br>\ntensorflow에 내장된 모듈인 tf.io나 tf.data가 데이터를 읽고 쓸 때 자동으로 데이터를<br>\n텐서로 변환한 다음 나중에 신경망 모델에 적용 및 처리합니다.</p>\n<p>scalar(스칼라)는 rank가 0인 tensor! 왜냐하면 ndim이 0이라서 그렇습니다.<br>\ntensor는 dimension에 제한이 없다는 것이 중요합니다!</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">matrix <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>\r\n                        <span class=\"token punctuation\">[</span>\r\n                            <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span>\r\n                        <span class=\"token punctuation\">]</span>\r\n                    <span class=\"token punctuation\">)</span>\r\nmatrix\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[10,  7],</span>\r\n<span class=\"token comment\">#        [ 7, 10]])></span>\r\n\r\nmatrix<span class=\"token punctuation\">.</span>ndim <span class=\"token comment\"># 2</span>\r\n\r\nmatrix2 <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>\r\n                        <span class=\"token punctuation\">[</span>\r\n                            <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\r\n                        <span class=\"token punctuation\">]</span>\r\n                    <span class=\"token punctuation\">)</span>\r\nmatrix2\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=float32, numpy=</span>\r\n<span class=\"token comment\"># array([[10.,  7.],</span>\r\n<span class=\"token comment\">#        [ 7., 10.]], dtype=float32)></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>tensorflow는 기본적으로 tensor를 생성할 때, 자료형(Datatype)을 int32나 float32로 설정합니다.<br>\n=> 정밀도가 필요 없는 부분에서는 int16 이렇게 줄여서 쓰면 된다. 메모리 효율성과 관련된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">another_matrix <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>\r\n                        <span class=\"token punctuation\">[</span>\r\n                            <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span>\r\n                        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>dtype <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>float16\r\n                    <span class=\"token punctuation\">)</span>\r\nanother_matrix\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(3, 2), dtype=float16, numpy=</span>\r\n<span class=\"token comment\"># array([[10.,  7.],</span>\r\n<span class=\"token comment\">#        [ 3.,  2.],</span>\r\n<span class=\"token comment\">#        [ 8.,  9.]], dtype=float16)></span>\r\n\r\nanother_matrix<span class=\"token punctuation\">.</span>ndim <span class=\"token comment\"># 2</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tensor <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">[</span>\r\n        <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\r\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">[</span>\r\n        <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\r\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">[</span>\r\n        <span class=\"token punctuation\">[</span><span class=\"token number\">13</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">17</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">]</span>\r\n    <span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\ntensor\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(3, 2, 3), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[[ 1,  2,  3],</span>\r\n<span class=\"token comment\">#         [ 4,  5,  6]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[ 7,  8,  9],</span>\r\n<span class=\"token comment\">#         [10, 11, 12]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[13, 14, 15],</span>\r\n<span class=\"token comment\">#         [16, 17, 18]]])></span>\r\n\r\ntensor<span class=\"token punctuation\">.</span>ndim <span class=\"token comment\"># 3 # 2행 3열짜리 행렬이 3개가 있다!</span>\r\n<span class=\"token comment\"># rank가 3인 tensor</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>shape=(3, 2, 3) => (맨 앞 숫자) 3개, (뒤에서부터 읽음) (3x2) matrix가 있다는 의미</li>\n</ul>\n<p>위에서 굳이 scalar, vector, matrix, tensor 등등으로 구분해서 표현을 했지만<br>\n기술적으로는 사실 위의 모든 것이 tensor입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">changeable_tensor <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>Variable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nunchangeable_tensor <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nchangeable_tensor<span class=\"token punctuation\">,</span> unchangeable_tensor\r\n\r\n<span class=\"token comment\"># (&lt;tf.Variable 'Variable:0' shape=(2,) dtype=int32, numpy=array([10,  7])>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(2,), dtype=int32, numpy=array([10,  7])>)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">unchangeable_tensor<span class=\"token punctuation\">.</span>ndim <span class=\"token comment\"># 1</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">changeable_tensor<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">7</span> <span class=\"token comment\"># .ndim도 에러</span>\r\n\r\n<span class=\"token comment\"># TypeError: 'ResourceVariable' object does not support item assignment</span>\r\n<span class=\"token comment\"># ---------------------------------------------------------------------------</span>\r\n<span class=\"token comment\"># TypeError                                 Traceback (most recent call last)</span>\r\n<span class=\"token comment\"># ~\\AppData\\Local\\Temp/ipykernel_30856/2197253226.py in &lt;module></span>\r\n<span class=\"token comment\"># ----> 1 changeable_tensor[0] = 7</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># TypeError: 'ResourceVariable' object does not support item assignment</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">changeable_tensor<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>assign<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\r\nchangeable_tensor\r\n<span class=\"token comment\"># &lt;tf.Variable 'Variable:0' shape=(2,) dtype=int32, numpy=array([7, 7])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">unchangeable_tensor<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>assign<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span>\r\nunchangeable_tensor\r\n<span class=\"token comment\"># AttributeError: 'tensorflow.python.framework.ops.EagerTensor' object has no attribute 'assign'</span>\r\n<span class=\"token comment\"># ---------------------------------------------------------------------------</span>\r\n<span class=\"token comment\"># AttributeError                            Traceback (most recent call last)</span>\r\n<span class=\"token comment\"># ~\\AppData\\Local\\Temp/ipykernel_30856/1712840518.py in &lt;module></span>\r\n<span class=\"token comment\"># ----> 1 unchangeable_tensor[0].assign(7)</span>\r\n<span class=\"token comment\">#       2 unchangeable_tensor</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py in __getattr__(self, name)</span>\r\n<span class=\"token comment\">#     399         from tensorflow.python.ops.numpy_ops import np_config</span>\r\n<span class=\"token comment\">#     400         np_config.enable_numpy_behavior()\"\"\".format(type(self).__name__, name))</span>\r\n<span class=\"token comment\"># --> 401     self.__getattribute__(name)</span>\r\n<span class=\"token comment\">#     402</span>\r\n<span class=\"token comment\">#     403   @staticmethod</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># AttributeError: 'tensorflow.python.framework.ops.EagerTensor' object has no attribute 'assign'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>tf.constant()을 사용해야 할 지.. tf.Variable()을 사용해야 할 지..<br>\n우리가 해결할 문제에 따라서 선택하면 되고,<br>\n우리가 실제로 직접 ensor를 만들 경우는 없습니다.<br>\n왜? tensor가 데이터를 불러오고, 모델링할 때 알아서 선택해 줍니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">random_1 <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>Generator<span class=\"token punctuation\">.</span>from_seed<span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># np.random.seed(42)와 비슷</span>\r\nrandom_1 <span class=\"token operator\">=</span> random_1<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nrandom_2 <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>Generator<span class=\"token punctuation\">.</span>from_seed<span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\r\nrandom_2 <span class=\"token operator\">=</span> random_2<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\nrandom_1<span class=\"token punctuation\">,</span> random_2<span class=\"token punctuation\">,</span> random_1 <span class=\"token operator\">==</span> random_2\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(3, 2), dtype=float32, numpy=</span>\r\n<span class=\"token comment\">#  array([[-0.7565803 , -0.06854702],</span>\r\n<span class=\"token comment\">#         [ 0.07595026, -1.2573844 ],</span>\r\n<span class=\"token comment\">#         [-0.23193763, -1.8107855 ]], dtype=float32)>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(3, 2), dtype=float32, numpy=</span>\r\n<span class=\"token comment\">#  array([[-0.7565803 , -0.06854702],</span>\r\n<span class=\"token comment\">#         [ 0.07595026, -1.2573844 ],</span>\r\n<span class=\"token comment\">#         [-0.23193763, -1.8107855 ]], dtype=float32)>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(3, 2), dtype=bool, numpy=</span>\r\n<span class=\"token comment\">#  array([[ True,  True],</span>\r\n<span class=\"token comment\">#         [ True,  True],</span>\r\n<span class=\"token comment\">#         [ True,  True]])>)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> seed가 같으면 똑같은 게 생긴다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">random_3 <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>Generator<span class=\"token punctuation\">.</span>from_seed<span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\"># np.random.seed(42)와 비슷</span>\r\nrandom_3 <span class=\"token operator\">=</span> random_3<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nrandom_4 <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>Generator<span class=\"token punctuation\">.</span>from_seed<span class=\"token punctuation\">(</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span>\r\nrandom_4 <span class=\"token operator\">=</span> random_4<span class=\"token punctuation\">.</span>normal<span class=\"token punctuation\">(</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\nrandom_3<span class=\"token punctuation\">,</span> random_4<span class=\"token punctuation\">,</span> random_3 <span class=\"token operator\">==</span> random_4\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(3, 2), dtype=float32, numpy=</span>\r\n<span class=\"token comment\">#  array([[-0.7565803 , -0.06854702],</span>\r\n<span class=\"token comment\">#         [ 0.07595026, -1.2573844 ],</span>\r\n<span class=\"token comment\">#         [-0.23193763, -1.8107855 ]], dtype=float32)>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(3, 2), dtype=float32, numpy=</span>\r\n<span class=\"token comment\">#  array([[ 0.27305737, -0.29925638],</span>\r\n<span class=\"token comment\">#         [-0.3652325 ,  0.61883307],</span>\r\n<span class=\"token comment\">#         [-1.0130816 ,  0.28291714]], dtype=float32)>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(3, 2), dtype=bool, numpy=</span>\r\n<span class=\"token comment\">#  array([[False, False],</span>\r\n<span class=\"token comment\">#         [False, False],</span>\r\n<span class=\"token comment\">#         [False, False]])>)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> random은 seed를 다르게 줘야 다른 게 나온다.</p>\n<p>왜 shuffle을 해야하는지..<br>\n딥러닝 시 이미지가 15,000개 있을 때, 처음에 10,000은 고양이<br>\n그리고, 이어서 나머지 5,000은 개!<br>\n이 순서대로 학습을 하게 된다면 신경망에 overfit을 유발시킬 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">not_shuffled <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\ntf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span>not_shuffled<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(3, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[10,  7],</span>\r\n<span class=\"token comment\">#        [ 2,  5],</span>\r\n<span class=\"token comment\">#        [ 3,  4]])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span>not_shuffled<span class=\"token punctuation\">,</span> seed<span class=\"token operator\">=</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(3, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[10,  7],</span>\r\n<span class=\"token comment\">#        [ 3,  4],</span>\r\n<span class=\"token comment\">#        [ 2,  5]])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>shuffle<span class=\"token punctuation\">(</span>tensor<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(3, 2, 3), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[[13, 14, 15],</span>\r\n<span class=\"token comment\">#         [16, 17, 18]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[ 7,  8,  9],</span>\r\n<span class=\"token comment\">#         [10, 11, 12]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[ 1,  2,  3],</span>\r\n<span class=\"token comment\">#         [ 4,  5,  6]]])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> shuffle은 랜덤으로 계속 바뀐다.</p>\n<ul>\n<li>\n<p>강사님께 이미지를 받았다.</p>\n</li>\n<li>\n<p><a href=\"https://www.mathsisfun.com/algebra/scalar-vector-matrix.html\">https://www.mathsisfun.com/algebra/scalar-vector-matrix.html</a></p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-markdown line-numbers\"><code class=\"language-markdown\"><span class=\"token url\"><span class=\"token operator\">!</span>[<span class=\"token content\">scalar-vector-matrix-tensor 비교</span>](<span class=\"token url\">images/00-scalar-vector-matrix-tensor.png</span>)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>=> 이걸 입력하고 markdown으로 저장하니 이미지가 업로드 되었다.</p>\n<p>(224, 224, 3, 32)<br>\n224, 224 (첫부분 2차원) : 픽셀 단위로 이미지의 높이 (height)와 너비 (width)<br>\n3 : 이미지의 컬러 채널 (RGB, Red Green Blue)<br>\n32 : 배치 (Batch) 크기 - 1번에 신경망이 처리할 이미지의 갯수</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tf<span class=\"token punctuation\">.</span>ones<span class=\"token punctuation\">(</span>shape <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(3, 2), dtype=float32, numpy=</span>\r\n<span class=\"token comment\"># array([[1., 1.],</span>\r\n<span class=\"token comment\">#        [1., 1.],</span>\r\n<span class=\"token comment\">#        [1., 1.]], dtype=float32)></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span>shape <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(3, 2), dtype=float32, numpy=</span>\r\n<span class=\"token comment\"># array([[0., 0.],</span>\r\n<span class=\"token comment\">#        [0., 0.],</span>\r\n<span class=\"token comment\">#        [0., 0.]], dtype=float32)></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\r\nnumpy_A <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>np<span class=\"token punctuation\">.</span>int32<span class=\"token punctuation\">)</span> <span class=\"token comment\"># 24개</span>\r\nA <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>numpy_A<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 24 = 2 * 4 * 3</span>\r\n\r\nnumpy_A<span class=\"token punctuation\">,</span> A\r\n<span class=\"token comment\"># (array([ 1,  2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 16, 17,</span>\r\n<span class=\"token comment\">#         18, 19, 20, 21, 22, 23, 24]),</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(2, 4, 3), dtype=int32, numpy=</span>\r\n<span class=\"token comment\">#  array([[[ 1,  2,  3],</span>\r\n<span class=\"token comment\">#          [ 4,  5,  6],</span>\r\n<span class=\"token comment\">#          [ 7,  8,  9],</span>\r\n<span class=\"token comment\">#          [10, 11, 12]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [[13, 14, 15],</span>\r\n<span class=\"token comment\">#          [16, 17, 18],</span>\r\n<span class=\"token comment\">#          [19, 20, 21],</span>\r\n<span class=\"token comment\">#          [22, 23, 24]]])>)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> A : 4x3 2개</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">rank_4_tensor <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>zeros<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nrank_4_tensor\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 3, 4, 5), dtype=float32, numpy=</span>\r\n<span class=\"token comment\"># array([[[[0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [[0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [[0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.]]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[[0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [[0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\"># show more (open the raw output data in a text editor) ...</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [[0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0., 0., 0., 0.]]]], dtype=float32)></span>\r\n\r\nrank_4_tensor<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> rank_4_tensor<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span>rank_4_tensor<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># (TensorShape([2, 3, 4, 5]), 4, &lt;tf.Tensor: shape=(), dtype=int32, numpy=120>)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>tensor의 정보 (shape, rank, size)를 얻는 과정<br>\nshape : tensor를 이루는 각각의 차원의 길이 (element의 수)<br>\nrank : tensor를 이루는 차원의 갯수 (scalar는 0 / vector는 1 / matrix는 2 / tensor는 n (number))<br>\nAxis or Dimension : tensor의 특징 차원을 지칭<br>\nsize : tensor를 이루는 items (elements의 갯수)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'모든 elements의 자료형은 '</span><span class=\"token punctuation\">,</span> rank_4_tensor<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'차원의 갯수는 '</span><span class=\"token punctuation\">,</span> rank_4_tensor<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'텐서의 shape는 '</span><span class=\"token punctuation\">,</span> rank_4_tensor<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'텐서의 axis 0에 속하는 element들은 '</span><span class=\"token punctuation\">,</span> rank_4_tensor<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'텐서의 마지막 axis에 속하는 element들은 '</span><span class=\"token punctuation\">,</span> rank_4_tensor<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'모든 element의 갯수 (2 * 3 * 4 * 5)는 '</span><span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span>rank_4_tensor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># numpy()를 사용한 이유는 tf.size가 결과를 tensor로 주기 때문에 이 tensor를 numpy array 형태로 변환이 필요</span>\r\n\r\n<span class=\"token comment\"># 모든 elements의 자료형은  &lt;dtype: 'float32'></span>\r\n<span class=\"token comment\"># 차원의 갯수는  4</span>\r\n<span class=\"token comment\"># 텐서의 shape는  (2, 3, 4, 5)</span>\r\n<span class=\"token comment\"># 텐서의 axis 0에 속하는 element들은  2</span>\r\n<span class=\"token comment\"># 텐서의 마지막 axis에 속하는 element들은  5</span>\r\n<span class=\"token comment\"># 모든 element의 갯수 (2 * 3 * 4 * 5)는  120</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">rank_4_tensor<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2, 2, 2), dtype=float32, numpy=</span>\r\n<span class=\"token comment\"># array([[[[0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0.]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [[0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0.]]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[[0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0.]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [[0., 0.],</span>\r\n<span class=\"token comment\">#          [0., 0.]]]], dtype=float32)></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> 각 차원 별로 접근이 가능하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">rank_4_tensor<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(1, 1, 1, 5), dtype=float32, numpy=array([[[[0., 0., 0., 0., 0.]]]], dtype=float32)></span>\r\n\r\nrank_2_tensor <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># 각 행의 마지막 elements를 출력</span>\r\nrank_2_tensor<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2,), dtype=int32, numpy=array([7, 4])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">rank_3_tensor <span class=\"token operator\">=</span> rank_2_tensor<span class=\"token punctuation\">[</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>newaxis<span class=\"token punctuation\">]</span>\r\nrank_2_tensor<span class=\"token punctuation\">,</span> rank_2_tensor<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">,</span> rank_3_tensor<span class=\"token punctuation\">,</span> rank_3_tensor<span class=\"token punctuation\">.</span>ndim\r\n<span class=\"token comment\"># 파이썬에서 ...는 기존에 존재하는 것은 모두 유지</span>\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\">#  array([[10,  7],</span>\r\n<span class=\"token comment\">#         [ 3,  4]])>,</span>\r\n<span class=\"token comment\">#  2,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(2, 2, 1), dtype=int32, numpy=</span>\r\n<span class=\"token comment\">#  array([[[10],</span>\r\n<span class=\"token comment\">#          [ 7]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [[ 3],</span>\r\n<span class=\"token comment\">#          [ 4]]])>,</span>\r\n<span class=\"token comment\">#  3)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> rank_3_tensor을 expand_dims로 만들 수도 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tf<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>rank_2_tensor<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># axis = -1 / 마지막 차원이라는 뜻</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2, 1), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[[10],</span>\r\n<span class=\"token comment\">#         [ 7]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[ 3],</span>\r\n<span class=\"token comment\">#         [ 4]]])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tensor <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\ntensor <span class=\"token operator\">+</span> <span class=\"token number\">10</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[20, 17],</span>\r\n<span class=\"token comment\">#        [13, 14]])></span>\r\n\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tensor\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[10,  7],</span>\r\n<span class=\"token comment\">#        [ 3,  4]])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> 원래의 tensor에는 영향을 주지 못한다.<br>\ntf.Variable도 마찬가지이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tensor <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>Variable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\ntensor <span class=\"token operator\">+</span> <span class=\"token number\">10</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[20, 17],</span>\r\n<span class=\"token comment\">#        [13, 14]])></span>\r\n\r\ntensor\r\n\r\n<span class=\"token comment\"># &lt;tf.Variable 'Variable:0' shape=(2, 2) dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[10,  7],</span>\r\n<span class=\"token comment\">#        [ 3,  4]])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tensor <span class=\"token operator\">*</span> <span class=\"token number\">10</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[100,  70],</span>\r\n<span class=\"token comment\">#        [ 30,  40]])></span>\r\n\r\ntensor\r\n\r\n<span class=\"token comment\"># &lt;tf.Variable 'Variable:0' shape=(2, 2) dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[10,  7],</span>\r\n<span class=\"token comment\">#        [ 3,  4]])></span>\r\n\r\ntensor <span class=\"token operator\">-</span> <span class=\"token number\">10</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[ 0, -3],</span>\r\n<span class=\"token comment\">#        [-7, -6]])></span>\r\n\r\ntensor\r\n\r\n<span class=\"token comment\"># &lt;tf.Variable 'Variable:0' shape=(2, 2) dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[10,  7],</span>\r\n<span class=\"token comment\">#        [ 3,  4]])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tf<span class=\"token punctuation\">.</span>multiply<span class=\"token punctuation\">(</span>tensor<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[100,  70],</span>\r\n<span class=\"token comment\">#        [ 30,  40]])></span>\r\n\r\ntensor\r\n\r\n<span class=\"token comment\"># &lt;tf.Variable 'Variable:0' shape=(2, 2) dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[10,  7],</span>\r\n<span class=\"token comment\">#        [ 3,  4]])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>subtract<span class=\"token punctuation\">(</span>tensor<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[ 0, -3],</span>\r\n<span class=\"token comment\">#        [-7, -6]])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>tensor<span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[20, 17],</span>\r\n<span class=\"token comment\">#        [13, 14]])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> tf.함수를 써도 값이 변하진 않지만, 이를 더 권장한다.</p>\n<ul>\n<li><a href=\"https://www.tensorflow.org/tensorboard/graphs\">https://www.tensorflow.org/tensorboard/graphs</a></li>\n</ul>\n<p>=> 1 버전대와 달리 지금은 tf가 그래프를 그려준다.</p>\n<ul>\n<li><a href=\"https://www.mathsisfun.com/algebra/matrix-multiplying.html\">https://www.mathsisfun.com/algebra/matrix-multiplying.html</a></li>\n</ul>\n<p>=> matrix multiplication을 많이 하게 된다.</p>\n<p>tensorflow 에서는 matrix multiplication을 tf.matmul)(로 처리합니다.<br>\n파이썬에서 @는 matrix multiplication을 의미합니다. @는 annotation을 의미하기도 합니다.<br>\n규칙 1 : 안에 있는 차원이 같아야 한다<br>\n(3, 5) @ (3, 5) => 안 됨!<br>\n(5, 3) @ (3, 5) => 잘 됨!<br>\n(3, 5) @ (5, 3) => 잘 됨!</p>\n<p>규칙 2 : 연산의 결과 행렬은 외부차원들로 이루어 진다<br>\n(5, 3) @ (3, 5) => (5, 5)<br>\n(3, 5) @ (5, 3) => (3, 3)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tensor <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\ntensor\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[10,  7],</span>\r\n<span class=\"token comment\">#        [ 3,  4]])></span>\r\n\r\n\r\n<span class=\"token comment\"># (2,2) @ (2,2)</span>\r\ntf<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>tensor<span class=\"token punctuation\">,</span> tensor<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[121,  98],</span>\r\n<span class=\"token comment\">#        [ 42,  37]])></span>\r\n\r\ntensor @ tensor\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[121,  98],</span>\r\n<span class=\"token comment\">#        [ 42,  37]])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">X <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\nY <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\nX<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">,</span> X<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">.</span>ndim\r\n\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(3, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\">#  array([[1, 2],</span>\r\n<span class=\"token comment\">#         [3, 4],</span>\r\n<span class=\"token comment\">#         [5, 6]])>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(3, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\">#  array([[ 7,  8],</span>\r\n<span class=\"token comment\">#         [ 9, 10],</span>\r\n<span class=\"token comment\">#         [11, 12]])>,</span>\r\n<span class=\"token comment\">#  2,</span>\r\n<span class=\"token comment\">#  2)</span>\r\n\r\n<span class=\"token comment\"># (3,2) @ (3,2) => 규칙 1 위반</span>\r\nX @ Y\r\n\r\n<span class=\"token comment\"># InvalidArgumentError: In[0] mismatch In[1] shape: 2 vs. 3: [3,2] [3,2] 0 0 [Op:MatMul]</span>\r\n<span class=\"token comment\"># ---------------------------------------------------------------------------</span>\r\n<span class=\"token comment\"># InvalidArgumentError                      Traceback (most recent call last)</span>\r\n<span class=\"token comment\"># ~\\AppData\\Local\\Temp/ipykernel_30856/127213216.py in &lt;module></span>\r\n<span class=\"token comment\">#       1 # (3,2) @ (3,2) => 규칙 1 위반</span>\r\n<span class=\"token comment\"># ----> 2 X @ Y</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\tensorflow\\python\\ops\\math_ops.py in binary_op_wrapper(x, y)</span>\r\n<span class=\"token comment\">#    1365         #   r_binary_op_wrapper use different force_same_dtype values.</span>\r\n<span class=\"token comment\">#    1366         x, y = maybe_promote_tensors(x, y, force_same_dtype=False)</span>\r\n<span class=\"token comment\"># -> 1367         return func(x, y, name=name)</span>\r\n<span class=\"token comment\">#    1368       except (TypeError, ValueError) as e:</span>\r\n<span class=\"token comment\">#    1369         # Even if dispatching the op failed, the RHS may be a tensor aware</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\tensorflow\\python\\ops\\math_ops.py in matmul_wrapper(a, b, name)</span>\r\n<span class=\"token comment\">#    3761   if ops._numpy_style_type_promotion:</span>\r\n<span class=\"token comment\">#    3762     return a._matmul(b)</span>\r\n<span class=\"token comment\"># -> 3763   return matmul(a, b, name=name)</span>\r\n<span class=\"token comment\">#    3764 matmul_wrapper.__doc__ = matmul.__doc__</span>\r\n<span class=\"token comment\">#    3765 _OverrideBinaryOperatorHelper(matmul_wrapper, \"matmul\")</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\tensorflow\\python\\util\\dispatch.py in wrapper(*args, **kwargs)</span>\r\n<span class=\"token comment\">#     204     \"\"\"Call target, and fall back on dispatchers if there is a TypeError.\"\"\"</span>\r\n<span class=\"token comment\">#     205     try:</span>\r\n<span class=\"token comment\"># --> 206       return target(*args, **kwargs)</span>\r\n<span class=\"token comment\">#     207     except (TypeError, ValueError):</span>\r\n<span class=\"token comment\">#     208       # Note: convert_to_eager_tensor currently raises a ValueError, not a</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\tensorflow\\python\\ops\\math_ops.py in matmul(a, b, transpose_a, transpose_b, adjoint_a, adjoint_b, a_is_sparse, b_is_sparse, output_type, name)</span>\r\n<span class=\"token comment\">#    3652             a, b, adj_x=adjoint_a, adj_y=adjoint_b, Tout=output_type, name=name)</span>\r\n<span class=\"token comment\">#    3653       else:</span>\r\n<span class=\"token comment\"># -> 3654         return gen_math_ops.mat_mul(</span>\r\n<span class=\"token comment\">#    3655             a, b, transpose_a=transpose_a, transpose_b=transpose_b, name=name)</span>\r\n<span class=\"token comment\">#    3656</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\tensorflow\\python\\ops\\gen_math_ops.py in mat_mul(a, b, transpose_a, transpose_b, name)</span>\r\n<span class=\"token comment\">#    5693       return _result</span>\r\n<span class=\"token comment\">#    5694     except _core._NotOkStatusException as e:</span>\r\n<span class=\"token comment\"># -> 5695       _ops.raise_from_not_ok_status(e, name)</span>\r\n<span class=\"token comment\">#    5696     except _core._FallbackException:</span>\r\n<span class=\"token comment\">#    5697       pass</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py in raise_from_not_ok_status(e, name)</span>\r\n<span class=\"token comment\">#    6939   message = e.message + (\" name: \" + name if name is not None else \"\")</span>\r\n<span class=\"token comment\">#    6940   # pylint: disable=protected-access</span>\r\n<span class=\"token comment\"># -> 6941   six.raise_from(core._status_to_exception(e.code, message), None)</span>\r\n<span class=\"token comment\">#    6942   # pylint: enable=protected-access</span>\r\n<span class=\"token comment\">#    6943</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\six.py in raise_from(value, from_value)</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># InvalidArgumentError: In[0] mismatch In[1] shape: 2 vs. 3: [3,2] [3,2] 0 0 [Op:MatMul]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>위와 같은 경우를 해결하려면<br>\n(3, 2) @ (3, 2)</p>\n<ol>\n<li>X의 shape 변경 => (2, 3) @ (3, 2) => 결과 (2, 2)</li>\n<li>Y의 shape 변경 => (3, 2) @ (2, 3) => 결과 (3, 3)</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 3), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[1, 2, 3],</span>\r\n<span class=\"token comment\">#        [4, 5, 6]])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[ 58,  64],</span>\r\n<span class=\"token comment\">#        [139, 154]])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 3), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[ 7,  8,  9],</span>\r\n<span class=\"token comment\">#        [10, 11, 12]])></span>\r\n\r\nX @ tf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(3, 3), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[ 27,  30,  33],</span>\r\n<span class=\"token comment\">#        [ 61,  68,  75],</span>\r\n<span class=\"token comment\">#        [ 95, 106, 117]])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li><a href=\"http://matrixmultiplication.xyz/\">http://matrixmultiplication.xyz/</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">X<span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(3, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\">#  array([[1, 2],</span>\r\n<span class=\"token comment\">#         [3, 4],</span>\r\n<span class=\"token comment\">#         [5, 6]])>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(2, 3), dtype=int32, numpy=</span>\r\n<span class=\"token comment\">#  array([[1, 2, 3],</span>\r\n<span class=\"token comment\">#         [4, 5, 6]])>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(2, 3), dtype=int32, numpy=</span>\r\n<span class=\"token comment\">#  array([[1, 3, 5],</span>\r\n<span class=\"token comment\">#         [2, 4, 6]])>)</span>\r\n\r\ntf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> @ Y<span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">)</span> @ Y\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\">#  array([[ 58,  64],</span>\r\n<span class=\"token comment\">#         [139, 154]])>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\">#  array([[ 89,  98],</span>\r\n<span class=\"token comment\">#         [116, 128]])>)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> tf.reshape와 tf.transpose는 다르다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tf<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[ 89,  98],</span>\r\n<span class=\"token comment\">#        [116, 128]])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>a <span class=\"token operator\">=</span> X<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> Y <span class=\"token punctuation\">,</span> transpose_a <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> transpose_b <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[ 89,  98],</span>\r\n<span class=\"token comment\">#        [116, 128]])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li><a href=\"https://www.tensorflow.org/api_docs/python/tf/tensordot\">https://www.tensorflow.org/api_docs/python/tf/tensordot</a></li>\n</ul>\n<p>dot 연산</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tf<span class=\"token punctuation\">.</span>tensordot<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">,</span> axes<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2, 2), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[ 89,  98],</span>\r\n<span class=\"token comment\">#        [116, 128]])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(3, 3), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[ 23,  29,  35],</span>\r\n<span class=\"token comment\">#        [ 53,  67,  81],</span>\r\n<span class=\"token comment\">#        [ 83, 105, 127]])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(3, 3), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[ 27,  30,  33],</span>\r\n<span class=\"token comment\">#        [ 61,  68,  75],</span>\r\n<span class=\"token comment\">#        [ 95, 106, 117]])></span>\r\n\r\nY<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>shape       \r\n\r\n<span class=\"token comment\"># (TensorShape([3, 2]), TensorShape([2, 3]), TensorShape([2, 3]))</span>\r\n\r\nY<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># (TensorShape([3, 2]),</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(2, 3), dtype=int32, numpy=</span>\r\n<span class=\"token comment\">#  array([[ 7,  8,  9],</span>\r\n<span class=\"token comment\">#         [10, 11, 12]])>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(2, 3), dtype=int32, numpy=</span>\r\n<span class=\"token comment\">#  array([[ 7,  9, 11],</span>\r\n<span class=\"token comment\">#         [ 8, 10, 12]])>)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>tf.reshape() : 주어진 tensor의 shape를 지정한 shape로 바꾸어 준다. 그 값이 나온 순서대로 (행에서 그리고 열) 값을 채운다.<br>\ntf.transpose() : 축을 바꾸어준다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">B <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7.4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nC <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\nB<span class=\"token punctuation\">,</span> C\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(2,), dtype=float32, numpy=array([1.7, 7.4], dtype=float32)>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(2,), dtype=int32, numpy=array([1, 7])>)</span>\r\n\r\nB <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>cast<span class=\"token punctuation\">(</span>B<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>float16<span class=\"token punctuation\">)</span>\r\nB\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2,), dtype=float16, numpy=array([1.7, 7.4], dtype=float16)></span>\r\n\r\nC <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>cast<span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span>\r\nC\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2,), dtype=float32, numpy=array([1., 7.], dtype=float32)></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">D <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nD\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2,), dtype=int32, numpy=array([ -7, -10])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>D<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(2,), dtype=int32, numpy=array([ 7, 10])></span>\r\n\r\nE <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span>low <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> high <span class=\"token operator\">=</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> size <span class=\"token operator\">=</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nE\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(50,), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([ 3, 92, 21, 80, 58, 58, 52, 38,  1, 80, 79, 98, 55, 91, 42, 47, 42,</span>\r\n<span class=\"token comment\">#        67, 25, 93, 91, 45, 30, 11, 43, 67, 68, 11, 37, 67, 45, 86, 28, 37,</span>\r\n<span class=\"token comment\">#        52, 20,  1, 62,  7, 82, 49,  2, 31, 84, 47, 57, 20, 74, 88, 65])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>reduce_min<span class=\"token punctuation\">(</span>E<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(), dtype=int32, numpy=1></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>reduce_max<span class=\"token punctuation\">(</span>E<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(), dtype=int32, numpy=98></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>reduce_mean<span class=\"token punctuation\">(</span>E<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(), dtype=int32, numpy=50></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>reduce_sum<span class=\"token punctuation\">(</span>E<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(), dtype=int32, numpy=2529></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>math<span class=\"token punctuation\">.</span>reduce_std<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>cast<span class=\"token punctuation\">(</span>E<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>float16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(), dtype=float16, numpy=27.8></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>math<span class=\"token punctuation\">.</span>reduce_variance<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>cast<span class=\"token punctuation\">(</span>E<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>float16<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(), dtype=float16, numpy=772.5></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> tf.math.reduce_variance(E)나 tf.math.reduce_std(E)는 에러가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tf<span class=\"token punctuation\">.</span>math<span class=\"token punctuation\">.</span>reduce_variance<span class=\"token punctuation\">(</span>E<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># TypeError: Input must be either real or complex</span>\r\n<span class=\"token comment\"># ---------------------------------------------------------------------------</span>\r\n<span class=\"token comment\"># TypeError                                 Traceback (most recent call last)</span>\r\n<span class=\"token comment\"># ~\\AppData\\Local\\Temp/ipykernel_30856/4121209761.py in &lt;module></span>\r\n<span class=\"token comment\"># ----> 1 tf.math.reduce_variance(E)</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\tensorflow\\python\\util\\dispatch.py in wrapper(*args, **kwargs)</span>\r\n<span class=\"token comment\">#     204     \"\"\"Call target, and fall back on dispatchers if there is a TypeError.\"\"\"</span>\r\n<span class=\"token comment\">#     205     try:</span>\r\n<span class=\"token comment\"># --> 206       return target(*args, **kwargs)</span>\r\n<span class=\"token comment\">#     207     except (TypeError, ValueError):</span>\r\n<span class=\"token comment\">#     208       # Note: convert_to_eager_tensor currently raises a ValueError, not a</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\tensorflow\\python\\ops\\math_ops.py in reduce_variance(input_tensor, axis, keepdims, name)</span>\r\n<span class=\"token comment\">#    2633     means = reduce_mean(input_tensor, axis=axis, keepdims=True)</span>\r\n<span class=\"token comment\">#    2634     if means.dtype.is_integer:</span>\r\n<span class=\"token comment\"># -> 2635       raise TypeError(\"Input must be either real or complex\")</span>\r\n<span class=\"token comment\">#    2636     diff = input_tensor - means</span>\r\n<span class=\"token comment\">#    2637     if diff.dtype.is_complex:</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># TypeError: Input must be either real or complex</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tf<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>E<span class=\"token punctuation\">)</span> <span class=\"token comment\"># max 값을 가진 위치를 알려준다</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(), dtype=int64, numpy=11></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>argmin<span class=\"token punctuation\">(</span>E<span class=\"token punctuation\">)</span> <span class=\"token comment\"># min 값을 가진 위치를 알려준다</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(), dtype=int64, numpy=8></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> 마찬가지로 tf.math.argmax(E)나 tf.argmax(E)나 같다.</p>\n<p>[\"Red\",\"Green\",\"Blue\"] : 우리가 보는 라벨<br>\n[0.98, 0.01, 0.01] : softmax를 통해서 고를 예측 확률</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">F <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">(</span><span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nF\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(50,), dtype=float64, numpy=</span>\r\n<span class=\"token comment\"># array([0.38349058, 0.59043882, 0.47021885, 0.28668067, 0.04204524,</span>\r\n<span class=\"token comment\">#        0.152571  , 0.780592  , 0.20151822, 0.46618558, 0.97529879,</span>\r\n<span class=\"token comment\">#        0.9323223 , 0.76280508, 0.91380297, 0.47739067, 0.93741911,</span>\r\n<span class=\"token comment\">#        0.6411422 , 0.32356045, 0.89410648, 0.80150281, 0.28859752,</span>\r\n<span class=\"token comment\">#        0.03447547, 0.40404648, 0.67203547, 0.7077001 , 0.66874856,</span>\r\n<span class=\"token comment\">#        0.51143404, 0.2314429 , 0.80012783, 0.4194564 , 0.65609816,</span>\r\n<span class=\"token comment\">#        0.65075169, 0.73124192, 0.47058994, 0.87205455, 0.19664541,</span>\r\n<span class=\"token comment\">#        0.69909013, 0.78111112, 0.60826993, 0.27176986, 0.75757152,</span>\r\n<span class=\"token comment\">#        0.10815923, 0.07897335, 0.80086772, 0.73185003, 0.54035161,</span>\r\n<span class=\"token comment\">#        0.2800487 , 0.32628766, 0.9632602 , 0.92694396, 0.83379813])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>reduce_max<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(), dtype=float64, numpy=0.9752987946610587>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(), dtype=int64, numpy=9>)</span>\r\n\r\ntf<span class=\"token punctuation\">.</span>reduce_min<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>argmin<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(), dtype=float64, numpy=0.03447547455904221>,</span>\r\n <span class=\"token comment\"># &lt;tf.Tensor: shape=(), dtype=int64, numpy=20>)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"F의 최대값의 위치는 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>tf<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"F의 최대값은 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>tf<span class=\"token punctuation\">.</span>reduce_max<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># F의 최대값의 위치는 9</span>\r\n<span class=\"token comment\"># F의 최대값은 0.9752987946610587  </span>\r\n\r\nF<span class=\"token punctuation\">[</span>tf<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># 0.9752987946610587</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"tf.argmax()의 값을 이용해서 찾은 F의 최대값은 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>F<span class=\"token punctuation\">[</span>tf<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"tf.reduce_max와 값과 tf.argmax()를 통해서 찾은 값은 같을까? </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>F<span class=\"token punctuation\">[</span>tf<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> tf<span class=\"token punctuation\">.</span>reduce_max<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># tf.argmax()의 값을 이용해서 찾은 F의 최대값은 0.9752987946610587</span>\r\n<span class=\"token comment\"># tf.reduce_max와 값과 tf.argmax()를 통해서 찾은 값은 같을까? True</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">G <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> shape <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nG<span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">.</span>ndim\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(1, 1, 1, 1, 50), dtype=int32, numpy=</span>\r\n<span class=\"token comment\">#  array([[[[[63, 35, 63, 49,  6, 52, 22, 62, 14, 80, 70, 61, 28,  7, 75,</span>\r\n<span class=\"token comment\">#             72,  1, 64, 20, 85, 56,  7, 15, 64, 23, 92, 58, 75, 91, 35,</span>\r\n<span class=\"token comment\">#             77, 49, 36, 94, 97, 69, 94, 96, 34, 80, 38, 53,  7, 58, 56,</span>\r\n<span class=\"token comment\">#             64, 58, 72, 10, 94]]]]])>,</span>\r\n<span class=\"token comment\">#  TensorShape([1, 1, 1, 1, 50]),</span>\r\n<span class=\"token comment\">#  5)</span>\r\n\r\nG_squeezed <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">)</span>\r\nG_squeezed<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> G_squeezed<span class=\"token punctuation\">.</span>ndim\r\n<span class=\"token comment\"># 차원의 크기가 1인 차원을 제거해 주는 함수</span>\r\n\r\n<span class=\"token comment\"># (TensorShape([50]), 1)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">some_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\r\ntf<span class=\"token punctuation\">.</span>one_hot<span class=\"token punctuation\">(</span>some_list<span class=\"token punctuation\">,</span> depth<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(4, 4), dtype=float32, numpy=</span>\r\n<span class=\"token comment\"># array([[1., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#        [0., 1., 0., 0.],</span>\r\n<span class=\"token comment\">#        [0., 0., 1., 0.],</span>\r\n<span class=\"token comment\">#        [0., 0., 0., 1.]], dtype=float32)></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>one_hot<span class=\"token punctuation\">(</span>some_list<span class=\"token punctuation\">,</span> depth<span class=\"token operator\">=</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> on_value<span class=\"token operator\">=</span><span class=\"token string\">\"On\"</span><span class=\"token punctuation\">,</span> off_value<span class=\"token operator\">=</span><span class=\"token string\">\"Off\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(4, 4), dtype=string, numpy=</span>\r\n<span class=\"token comment\"># array([[b'On', b'Off', b'Off', b'Off'],</span>\r\n<span class=\"token comment\">#        [b'Off', b'On', b'Off', b'Off'],</span>\r\n<span class=\"token comment\">#        [b'Off', b'Off', b'On', b'Off'],</span>\r\n<span class=\"token comment\">#        [b'Off', b'Off', b'Off', b'On']], dtype=object)></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">H <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nH\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(9,), dtype=int32, numpy=array([1, 2, 3, 4, 5, 6, 7, 8, 9])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>square<span class=\"token punctuation\">(</span>H<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(9,), dtype=int32, numpy=array([ 1,  4,  9, 16, 25, 36, 49, 64, 81])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> tf.sqrt(H)를 하면 에러가 난다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tf<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>H<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># InvalidArgumentError: Value for attr 'T' of int32 is not in the list of allowed values: bfloat16, half, float, double, complex64, complex128</span>\r\n<span class=\"token comment\"># \t; NodeDef: {{node Sqrt}}; Op&lt;name=Sqrt; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]> [Op:Sqrt]</span>\r\n<span class=\"token comment\"># ---------------------------------------------------------------------------</span>\r\n<span class=\"token comment\"># InvalidArgumentError                      Traceback (most recent call last)</span>\r\n<span class=\"token comment\"># ~\\AppData\\Local\\Temp/ipykernel_30856/2689301343.py in &lt;module></span>\r\n<span class=\"token comment\"># ----> 1 tf.sqrt(H)</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\tensorflow\\python\\util\\dispatch.py in wrapper(*args, **kwargs)</span>\r\n<span class=\"token comment\">#     204     \"\"\"Call target, and fall back on dispatchers if there is a TypeError.\"\"\"</span>\r\n<span class=\"token comment\">#     205     try:</span>\r\n<span class=\"token comment\"># --> 206       return target(*args, **kwargs)</span>\r\n<span class=\"token comment\">#     207     except (TypeError, ValueError):</span>\r\n<span class=\"token comment\">#     208       # Note: convert_to_eager_tensor currently raises a ValueError, not a</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\tensorflow\\python\\ops\\math_ops.py in sqrt(x, name)</span>\r\n<span class=\"token comment\">#    5324     A `tf.Tensor` of same size, type and sparsity as `x`.</span>\r\n<span class=\"token comment\">#    5325   \"\"\"</span>\r\n<span class=\"token comment\"># -> 5326   return gen_math_ops.sqrt(x, name)</span>\r\n<span class=\"token comment\">#    5327</span>\r\n<span class=\"token comment\">#    5328</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\tensorflow\\python\\ops\\gen_math_ops.py in sqrt(x, name)</span>\r\n<span class=\"token comment\">#   10298       return _result</span>\r\n<span class=\"token comment\">#   10299     except _core._NotOkStatusException as e:</span>\r\n<span class=\"token comment\"># > 10300       _ops.raise_from_not_ok_status(e, name)</span>\r\n<span class=\"token comment\">#   10301     except _core._FallbackException:</span>\r\n<span class=\"token comment\">#   10302       pass</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\tensorflow\\python\\framework\\ops.py in raise_from_not_ok_status(e, name)</span>\r\n<span class=\"token comment\">#    6939   message = e.message + (\" name: \" + name if name is not None else \"\")</span>\r\n<span class=\"token comment\">#    6940   # pylint: disable=protected-access</span>\r\n<span class=\"token comment\"># -> 6941   six.raise_from(core._status_to_exception(e.code, message), None)</span>\r\n<span class=\"token comment\">#    6942   # pylint: enable=protected-access</span>\r\n<span class=\"token comment\">#    6943</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># c:\\20210821\\venv_20210821\\lib\\site-packages\\six.py in raise_from(value, from_value)</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># InvalidArgumentError: Value for attr 'T' of int32 is not in the list of allowed values: bfloat16, half, float, double, complex64, complex128</span>\r\n<span class=\"token comment\"># \t; NodeDef: {{node Sqrt}}; Op&lt;name=Sqrt; signature=x:T -> y:T; attr=T:type,allowed=[DT_BFLOAT16, DT_HALF, DT_FLOAT, DT_DOUBLE, DT_COMPLEX64, DT_COMPLEX128]> [Op:Sqrt]</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">H<span class=\"token punctuation\">.</span>dtype\r\n\r\n<span class=\"token comment\"># tf.int32</span>\r\n\r\nH <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>cast<span class=\"token punctuation\">(</span>H<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span>\r\nH<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">,</span> H\r\n\r\n<span class=\"token comment\"># (tf.float32,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(9,), dtype=float32, numpy=array([1., 2., 3., 4., 5., 6., 7., 8., 9.], dtype=float32)>)</span>\r\n\r\ntf<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>H<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(9,), dtype=float32, numpy=</span>\r\n<span class=\"token comment\"># array([0.99999994, 1.4142134 , 1.7320508 , 1.9999999 , 2.236068  ,</span>\r\n<span class=\"token comment\">#        2.4494896 , 2.6457512 , 2.8284268 , 3.        ], dtype=float32)></span>\r\n\r\nH<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>cast<span class=\"token punctuation\">(</span>H<span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>float16<span class=\"token punctuation\">)</span>\r\nH<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">,</span> H\r\n\r\n<span class=\"token comment\"># (tf.float16,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(9,), dtype=float16, numpy=array([1., 2., 3., 4., 5., 6., 7., 8., 9.], dtype=float16)>)</span>\r\n\r\ntf<span class=\"token punctuation\">.</span>sqrt<span class=\"token punctuation\">(</span>H<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(9,), dtype=float16, numpy=</span>\r\n<span class=\"token comment\"># array([1.   , 1.414, 1.732, 2.   , 2.236, 2.45 , 2.646, 2.828, 3.   ],</span>\r\n<span class=\"token comment\">#       dtype=float16)></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>math<span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span>H<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(9,), dtype=float16, numpy=</span>\r\n<span class=\"token comment\"># array([0.    , 0.6934, 1.099 , 1.387 , 1.609 , 1.792 , 1.946 , 2.08  ,</span>\r\n<span class=\"token comment\">#        2.197 ], dtype=float16)></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> float16, float32 정밀도가 다르다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">I <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>Variable<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nI\r\n<span class=\"token comment\"># &lt;tf.Variable 'Variable:0' shape=(5,) dtype=int32, numpy=array([0, 1, 2, 3, 4])></span>\r\n\r\nI<span class=\"token punctuation\">.</span>assign<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># &lt;tf.Variable 'UnreadVariable' shape=(5,) dtype=int32, numpy=array([ 0,  1,  2,  3, 50])></span>\r\n\r\nI\r\n<span class=\"token comment\"># &lt;tf.Variable 'Variable:0' shape=(5,) dtype=int32, numpy=array([ 0,  1,  2,  3, 50])></span>\r\n\r\nI<span class=\"token punctuation\">.</span>assign_add<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># &lt;tf.Variable 'UnreadVariable' shape=(5,) dtype=int32, numpy=array([10, 11, 12, 13, 60])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> Variable은 얘네 자체 값이 바뀐다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Numpy array를 통해서 tensor를 생성</span>\r\nJ <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nJ<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>J<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> J<span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(3,), dtype=float64, numpy=array([ 3.,  7., 10.])>,</span>\r\n<span class=\"token comment\">#  tensorflow.python.framework.ops.EagerTensor,</span>\r\n<span class=\"token comment\">#  array([ 3.,  7., 10.]))</span>\r\n\r\nnp<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>J<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span>J<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># (array([ 3.,  7., 10.]), numpy.ndarray)</span>\r\n\r\nJ<span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>J<span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># (array([ 3.,  7., 10.]), numpy.ndarray)</span>\r\n\r\nnumpy_J <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\ntensor_J <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nnumpy_J<span class=\"token punctuation\">,</span> tensor_J\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(3,), dtype=float64, numpy=array([ 3.,  7., 10.])>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(3,), dtype=float32, numpy=array([ 3.,  7., 10.], dtype=float32)>)</span>\r\n\r\nnumpy_J<span class=\"token punctuation\">.</span>dtype<span class=\"token punctuation\">,</span> tensor_J<span class=\"token punctuation\">.</span>dtype\r\n\r\n<span class=\"token comment\"># (tf.float64, tf.float32)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">function</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">return</span> x<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> y\r\n\r\nx <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\ny <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">20</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nfunction<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>    \r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(10,), dtype=int32, numpy=array([ 10,  12,  16,  22,  30,  40,  52,  66,  82, 100])></span>\r\n\r\n<span class=\"token decorator annotation punctuation\">@tf<span class=\"token punctuation\">.</span>function</span> <span class=\"token comment\"># decorator</span>\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">tf_function</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">return</span> x<span class=\"token operator\">**</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> y\r\n\r\ntf_function<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(10,), dtype=int32, numpy=array([ 10,  12,  16,  22,  30,  40,  52,  66,  82, 100])>    </span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> 함수를 정의하더라도 tf.function이라는 decorator를 추가하는 걸 권장한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>config<span class=\"token punctuation\">.</span>list_physical_devices<span class=\"token punctuation\">(</span><span class=\"token string\">\"GPU\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># []</span>\r\n\r\n!nvidia<span class=\"token operator\">-</span>smi</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> GPU 환경이면 값 잘 나온다.</p>\n<h3 id=\"quiz\" style=\"position:relative;\">Quiz<a href=\"#quiz\" aria-label=\"quiz permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ol>\n<li><code class=\"language-text\">tf.constant()</code>를 사용하여 선택한 값으로 벡터, 스칼라, 행렬 및 텐서를 생성합니다.</li>\n<li>1에서 생성한 텐서의 모양, 순위 및 크기를 찾습니다.</li>\n<li>shape가 <code class=\"language-text\">[5, 300]</code>인 0과 1 사이의 임의 값을 포함하는 두 개의 텐서를 만듭니다.</li>\n<li>행렬 곱을 사용하여 3에서 만든 두 텐서를 곱합니다.</li>\n<li>내적을 사용하여 3에서 만든 두 개의 텐서를 곱합니다.</li>\n<li>shape가 <code class=\"language-text\">[224, 224, 3]</code>인 0과 1 사이의 임의 값으로 텐서를 만듭니다.</li>\n<li>6에서 생성한 텐서의 최소값과 최대값을 찾습니다.</li>\n<li><code class=\"language-text\">[1, 224, 224, 3]</code> 모양의 임의 값으로 텐서를 만든 다음, 모양을 <code class=\"language-text\">[224, 224, 3]</code>으로 변경하도록 압축합니다.</li>\n<li>자신이 선택한 값을 사용하여 <code class=\"language-text\">[10]</code> 모양의 텐서를 만든 다음 최대값을 갖는 인덱스를 찾습니다.</li>\n<li>9에서 생성한 텐서를 원-핫 인코딩합니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 1. `tf.constant()`를 사용하여 선택한 값으로 벡터, 스칼라, 행렬 및 텐서를 생성합니다.  </span>\r\nscalar <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\r\nvector <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nmatrix <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\ntensor <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    <span class=\"token punctuation\">[</span>\r\n        <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span>\r\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">[</span>\r\n        <span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span>\r\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n    <span class=\"token punctuation\">[</span>\r\n        <span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token punctuation\">[</span><span class=\"token number\">11</span><span class=\"token punctuation\">,</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span>\r\n    <span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>```\r\n\r\n\r\n```python\r\n<span class=\"token comment\"># 2. 1에서 생성한 텐서들의 shape, rank, size를 찾습니다.  </span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>scalar<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>scalar<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>tf<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span>scalar<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>vector<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>vector<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>tf<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span>vector<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>matrix<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>matrix<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>tf<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>tensor<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>tensor<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">}</span></span><span class=\"token string\"> </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>tf<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span>tensor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># () 0 1</span>\r\n<span class=\"token comment\"># (2,) 1 2</span>\r\n<span class=\"token comment\"># (2, 2) 2 4</span>\r\n<span class=\"token comment\"># (3, 2, 2) 3 12</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 3. shape가 `[5, 300]`인 0과 1 사이의 임의 값을 포함하는 두 개의 텐서를 만듭니다.  </span>\r\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\r\nX <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nY <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nX<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">,</span> X<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">.</span>ndim\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(1500,), dtype=int32, numpy=array([0, 0, 0, ..., 0, 0, 0])>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(1500,), dtype=int32, numpy=array([0, 0, 0, ..., 0, 0, 0])>,</span>\r\n<span class=\"token comment\">#  1,</span>\r\n<span class=\"token comment\">#  1)</span>\r\n\r\nX <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token number\">1500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nY <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token number\">1500</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nX<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">,</span> X<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">.</span>ndim\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(5, 300), dtype=float64, numpy=</span>\r\n<span class=\"token comment\">#  array([[0.94473243, 0.11931624, 0.59288695, ..., 0.01573097, 0.83511826,</span>\r\n<span class=\"token comment\">#          0.73076698],</span>\r\n<span class=\"token comment\">#         [0.20480663, 0.90483644, 0.43863018, ..., 0.13155988, 0.47251556,</span>\r\n<span class=\"token comment\">#          0.37035296],</span>\r\n<span class=\"token comment\">#         [0.60116919, 0.59321585, 0.40074726, ..., 0.82678579, 0.62195052,</span>\r\n<span class=\"token comment\">#          0.77780858],</span>\r\n<span class=\"token comment\">#         [0.69967528, 0.02501624, 0.41092765, ..., 0.12267836, 0.64669395,</span>\r\n<span class=\"token comment\">#          0.06368639],</span>\r\n<span class=\"token comment\">#         [0.64570429, 0.56969293, 0.64757416, ..., 0.72578109, 0.83138237,</span>\r\n<span class=\"token comment\">#          0.55651537]])>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(5, 300), dtype=float64, numpy=</span>\r\n<span class=\"token comment\">#  array([[0.20627016, 0.02816316, 0.78325808, ..., 0.22769214, 0.40453621,</span>\r\n<span class=\"token comment\">#          0.58598012],</span>\r\n<span class=\"token comment\">#         [0.07944549, 0.10316506, 0.7529801 , ..., 0.42827437, 0.57333096,</span>\r\n<span class=\"token comment\">#          0.0370162 ],</span>\r\n<span class=\"token comment\">#         [0.0353202 , 0.93208487, 0.33833391, ..., 0.17564963, 0.41423089,</span>\r\n<span class=\"token comment\">#          0.20722149],</span>\r\n<span class=\"token comment\">#         [0.88552396, 0.49987382, 0.84417042, ..., 0.13351838, 0.03587802,</span>\r\n<span class=\"token comment\">#          0.68989979],</span>\r\n<span class=\"token comment\">#         [0.42157633, 0.38220649, 0.90456791, ..., 0.34142198, 0.82571165,</span>\r\n<span class=\"token comment\">#          0.16518775]])>,</span>\r\n<span class=\"token comment\">#  2,</span>\r\n<span class=\"token comment\">#  2)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 4. 행렬 곱(matrix multiplication)을 사용하여 3에서 만든 두 텐서를 곱합니다.</span>\r\n\r\n<span class=\"token comment\"># (5, 300) @ (5, 300)</span>\r\n<span class=\"token comment\"># X @ Y</span>\r\n\r\n<span class=\"token comment\"># reshape를 이용</span>\r\n<span class=\"token comment\"># Case 1 : (5, 300) @ (300, 5)</span>\r\nX @ tf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(5, 5), dtype=float64, numpy=</span>\r\n<span class=\"token comment\"># array([[77.03441834, 74.38904466, 67.72470424, 71.13978747, 74.69835994],</span>\r\n<span class=\"token comment\">#        [74.88438843, 76.927109  , 70.98715849, 71.85404047, 74.44199168],</span>\r\n<span class=\"token comment\">#        [76.78942493, 76.86240715, 70.52206719, 72.02567616, 75.70953619],</span>\r\n<span class=\"token comment\">#        [76.41546273, 72.90255369, 67.83892844, 69.87369516, 73.98997761],</span>\r\n<span class=\"token comment\">#        [79.70892343, 77.37344681, 75.23527915, 72.71393376, 79.2713922 ]])></span>\r\n\r\n<span class=\"token comment\"># Case 2 : (300, 5) @ (5, 300)</span>\r\ntf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> @ Y\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(300, 300), dtype=float64, numpy=</span>\r\n<span class=\"token comment\"># array([[0.65583675, 0.88782721, 1.62643403, ..., 0.53785019, 1.01216703,</span>\r\n<span class=\"token comment\">#         0.95602905],</span>\r\n<span class=\"token comment\">#        [0.83784845, 1.10755033, 1.44979467, ..., 0.51247488, 0.69806908,</span>\r\n<span class=\"token comment\">#         0.75203137],</span>\r\n<span class=\"token comment\">#        [0.59669188, 1.11368182, 2.14356064, ..., 0.89836135, 1.57087858,</span>\r\n<span class=\"token comment\">#         0.8531718 ],</span>\r\n<span class=\"token comment\">#        ...,</span>\r\n<span class=\"token comment\">#        [0.48440498, 0.89810013, 1.31232922, ..., 0.56668137, 1.02238661,</span>\r\n<span class=\"token comment\">#         0.38835546],</span>\r\n<span class=\"token comment\">#        [1.1345141 , 1.12028841, 2.40024186, ..., 0.82168392, 1.47232121,</span>\r\n<span class=\"token comment\">#         1.14243625],</span>\r\n<span class=\"token comment\">#        [1.07721443, 1.40403588, 2.18876682, ..., 0.84313569, 1.34740547,</span>\r\n<span class=\"token comment\">#         0.86499408]])></span>\r\n\r\n<span class=\"token comment\"># transpose를 이용</span>\r\n<span class=\"token comment\"># Case 1 : (5, 300) @ (300, 5)</span>\r\nX @ tf<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(5, 5), dtype=float64, numpy=</span>\r\n<span class=\"token comment\"># array([[75.15813254, 75.45158505, 72.54254114, 74.12276445, 71.3920275 ],</span>\r\n<span class=\"token comment\">#        [73.51846137, 74.76600714, 71.25912787, 78.31299847, 72.33712024],</span>\r\n<span class=\"token comment\">#        [72.5811083 , 73.97906889, 71.08287431, 74.84620832, 71.49388228],</span>\r\n<span class=\"token comment\">#        [74.43866915, 74.9996565 , 72.21568882, 71.50938365, 72.23972104],</span>\r\n<span class=\"token comment\">#        [74.8815144 , 82.18717917, 77.00221369, 77.57672598, 73.90721682]])></span>\r\n\r\n<span class=\"token comment\"># Case 2 : (300, 5) @ (5, 300)</span>\r\ntf<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">)</span> @ Y\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(300, 300), dtype=float64, numpy=</span>\r\n<span class=\"token comment\"># array([[1.12416735, 1.20461797, 2.2723091 , ..., 0.72229387, 1.30689181,</span>\r\n<span class=\"token comment\">#         1.27511903],</span>\r\n<span class=\"token comment\">#        [0.37977059, 0.87988065, 1.5119282 , ..., 0.71672959, 1.28406643,</span>\r\n<span class=\"token comment\">#         0.33770262],</span>\r\n<span class=\"token comment\">#        [0.80818476, 0.88839836, 1.86291745, ..., 0.66920332, 1.20677919,</span>\r\n<span class=\"token comment\">#         0.83717005],</span>\r\n<span class=\"token comment\">#        ...,</span>\r\n<span class=\"token comment\">#        [0.45750566, 1.12337189, 1.15119278, ..., 0.4693276 , 1.02795867,</span>\r\n<span class=\"token comment\">#         0.38994159],</span>\r\n<span class=\"token comment\">#        [1.15492074, 1.29300246, 2.51829661, ..., 0.87195929, 1.57605869,</span>\r\n<span class=\"token comment\">#         1.21922315],</span>\r\n<span class=\"token comment\">#        [0.49864018, 1.02831075, 1.67157468, ..., 0.66013425, 1.29195502,</span>\r\n<span class=\"token comment\">#         0.73896938]])></span>\r\n\r\n\r\ntf<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(5, 5), dtype=float64, numpy=</span>\r\n<span class=\"token comment\"># array([[77.03441834, 74.38904466, 67.72470424, 71.13978747, 74.69835994],</span>\r\n<span class=\"token comment\">#        [74.88438843, 76.927109  , 70.98715849, 71.85404047, 74.44199168],</span>\r\n<span class=\"token comment\">#        [76.78942493, 76.86240715, 70.52206719, 72.02567616, 75.70953619],</span>\r\n<span class=\"token comment\">#        [76.41546273, 72.90255369, 67.83892844, 69.87369516, 73.98997761],</span>\r\n<span class=\"token comment\">#        [79.70892343, 77.37344681, 75.23527915, 72.71393376, 79.2713922 ]])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">300</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(300, 300), dtype=float64, numpy=</span>\r\n<span class=\"token comment\"># array([[0.65583675, 0.88782721, 1.62643403, ..., 0.53785019, 1.01216703,</span>\r\n<span class=\"token comment\">#         0.95602905],</span>\r\n<span class=\"token comment\">#        [0.83784845, 1.10755033, 1.44979467, ..., 0.51247488, 0.69806908,</span>\r\n<span class=\"token comment\">#         0.75203137],</span>\r\n<span class=\"token comment\">#        [0.59669188, 1.11368182, 2.14356064, ..., 0.89836135, 1.57087858,</span>\r\n<span class=\"token comment\">#         0.8531718 ],</span>\r\n<span class=\"token comment\">#        ...,</span>\r\n<span class=\"token comment\">#        [0.48440498, 0.89810013, 1.31232922, ..., 0.56668137, 1.02238661,</span>\r\n<span class=\"token comment\">#         0.38835546],</span>\r\n<span class=\"token comment\">#        [1.1345141 , 1.12028841, 2.40024186, ..., 0.82168392, 1.47232121,</span>\r\n<span class=\"token comment\">#         1.14243625],</span>\r\n<span class=\"token comment\">#        [1.07721443, 1.40403588, 2.18876682, ..., 0.84313569, 1.34740547,</span>\r\n<span class=\"token comment\">#         0.86499408]])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(300, 300), dtype=float64, numpy=</span>\r\n<span class=\"token comment\"># array([[1.12416735, 1.20461797, 2.2723091 , ..., 0.72229387, 1.30689181,</span>\r\n<span class=\"token comment\">#         1.27511903],</span>\r\n<span class=\"token comment\">#        [0.37977059, 0.87988065, 1.5119282 , ..., 0.71672959, 1.28406643,</span>\r\n<span class=\"token comment\">#         0.33770262],</span>\r\n<span class=\"token comment\">#        [0.80818476, 0.88839836, 1.86291745, ..., 0.66920332, 1.20677919,</span>\r\n<span class=\"token comment\">#         0.83717005],</span>\r\n<span class=\"token comment\">#        ...,</span>\r\n<span class=\"token comment\">#        [0.45750566, 1.12337189, 1.15119278, ..., 0.4693276 , 1.02795867,</span>\r\n<span class=\"token comment\">#         0.38994159],</span>\r\n<span class=\"token comment\">#        [1.15492074, 1.29300246, 2.51829661, ..., 0.87195929, 1.57605869,</span>\r\n<span class=\"token comment\">#         1.21922315],</span>\r\n<span class=\"token comment\">#        [0.49864018, 1.02831075, 1.67157468, ..., 0.66013425, 1.29195502,</span>\r\n<span class=\"token comment\">#         0.73896938]])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 5. 내적을 사용하여 3에서 만든 두 개의 텐서를 곱합니다.  </span>\r\ntf<span class=\"token punctuation\">.</span>tensordot<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> axes<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(5, 5), dtype=float64, numpy=</span>\r\n<span class=\"token comment\"># array([[75.15813254, 75.45158505, 72.54254114, 74.12276445, 71.3920275 ],</span>\r\n<span class=\"token comment\">#        [73.51846137, 74.76600714, 71.25912787, 78.31299847, 72.33712024],</span>\r\n<span class=\"token comment\">#        [72.5811083 , 73.97906889, 71.08287431, 74.84620832, 71.49388228],</span>\r\n<span class=\"token comment\">#        [74.43866915, 74.9996565 , 72.21568882, 71.50938365, 72.23972104],</span>\r\n<span class=\"token comment\">#        [74.8815144 , 82.18717917, 77.00221369, 77.57672598, 73.90721682]])></span>\r\n\r\ntf<span class=\"token punctuation\">.</span>tensordot<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>transpose<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">,</span> axes<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(300, 300), dtype=float64, numpy=</span>\r\n<span class=\"token comment\"># array([[1.12416735, 1.20461797, 2.2723091 , ..., 0.72229387, 1.30689181,</span>\r\n<span class=\"token comment\">#         1.27511903],</span>\r\n<span class=\"token comment\">#        [0.37977059, 0.87988065, 1.5119282 , ..., 0.71672959, 1.28406643,</span>\r\n<span class=\"token comment\">#         0.33770262],</span>\r\n<span class=\"token comment\">#        [0.80818476, 0.88839836, 1.86291745, ..., 0.66920332, 1.20677919,</span>\r\n<span class=\"token comment\">#         0.83717005],</span>\r\n<span class=\"token comment\">#        ...,</span>\r\n<span class=\"token comment\">#        [0.45750566, 1.12337189, 1.15119278, ..., 0.4693276 , 1.02795867,</span>\r\n<span class=\"token comment\">#         0.38994159],</span>\r\n<span class=\"token comment\">#        [1.15492074, 1.29300246, 2.51829661, ..., 0.87195929, 1.57605869,</span>\r\n<span class=\"token comment\">#         1.21922315],</span>\r\n<span class=\"token comment\">#        [0.49864018, 1.02831075, 1.67157468, ..., 0.66013425, 1.29195502,</span>\r\n<span class=\"token comment\">#         0.73896938]])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 6. shape가 `[224, 224, 3]`인 0과 100 사이의 임의 값으로 텐서를 만듭니다.  </span>\r\nmy_tensor <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">224</span><span class=\"token operator\">*</span><span class=\"token number\">224</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>shape<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nmy_tensor<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> my_tensor<span class=\"token punctuation\">.</span>ndim<span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">(</span>my_tensor<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># (TensorShape([224, 224, 3]),</span>\r\n<span class=\"token comment\">#  3,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(), dtype=int32, numpy=150528>)</span>\r\n\r\nmy_tensor\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(224, 224, 3), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[[75, 50,  0],</span>\r\n<span class=\"token comment\">#         [ 8, 35,  1],</span>\r\n<span class=\"token comment\">#         [93,  3, 51],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [84, 81, 37],</span>\r\n<span class=\"token comment\">#         [11, 12, 34],</span>\r\n<span class=\"token comment\">#         [62, 60, 28]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[81, 21, 89],</span>\r\n<span class=\"token comment\">#         [ 5, 39, 41],</span>\r\n<span class=\"token comment\">#         [54,  9, 13],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [18, 24, 93],</span>\r\n<span class=\"token comment\">#         [78, 40, 51],</span>\r\n<span class=\"token comment\">#         [17,  5, 32]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[64, 21, 68],</span>\r\n<span class=\"token comment\">#         [72, 99, 62],</span>\r\n<span class=\"token comment\">#         [70,  4, 15],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [ 6, 56, 53],</span>\r\n<span class=\"token comment\">#         [ 9, 24, 96],</span>\r\n<span class=\"token comment\">#         [59, 59, 65]],</span>\r\n<span class=\"token comment\"># show more (open the raw output data in a text editor) ...</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [72, 44, 19],</span>\r\n<span class=\"token comment\">#         [24, 64, 49],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [17, 79, 87],</span>\r\n<span class=\"token comment\">#         [50, 96, 93],</span>\r\n<span class=\"token comment\">#         [37, 32, 69]]])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 7. 6에서 생성한 텐서의 최소값과 최대값을 찾습니다.  </span>\r\ntf<span class=\"token punctuation\">.</span>reduce_max<span class=\"token punctuation\">(</span>my_tensor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>reduce_min<span class=\"token punctuation\">(</span>my_tensor<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(), dtype=int32, numpy=99>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(), dtype=int32, numpy=0>)</span>\r\n\r\ntf<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>my_tensor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>argmin<span class=\"token punctuation\">(</span>my_tensor<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(224, 3), dtype=int64, numpy=</span>\r\n<span class=\"token comment\">#  array([[ 42,  43,  60],</span>\r\n<span class=\"token comment\">#         [ 94,   2,  72],</span>\r\n<span class=\"token comment\">#         [ 31,  19, 220],</span>\r\n<span class=\"token comment\">#         [ 32, 113, 102],</span>\r\n<span class=\"token comment\">#         [ 54,  89, 139],</span>\r\n<span class=\"token comment\">#         [ 92, 121,  81],</span>\r\n<span class=\"token comment\">#         [ 23,  62, 186],</span>\r\n<span class=\"token comment\">#         [142,  45,  40],</span>\r\n<span class=\"token comment\">#         [ 36,   7,   6],</span>\r\n<span class=\"token comment\">#         [ 15, 133, 142],</span>\r\n<span class=\"token comment\">#         [  8,  32,  23],</span>\r\n<span class=\"token comment\">#         [ 76,  57,  24],</span>\r\n<span class=\"token comment\">#         [ 23,  71,  21],</span>\r\n<span class=\"token comment\">#         [ 61, 169, 112],</span>\r\n<span class=\"token comment\">#         [ 10,  38,  58],</span>\r\n<span class=\"token comment\">#         [ 70,  17,  51],</span>\r\n<span class=\"token comment\">#         [120, 174,  54],</span>\r\n<span class=\"token comment\">#         [102, 142, 130],</span>\r\n<span class=\"token comment\">#         [  3,  16,  37],</span>\r\n<span class=\"token comment\">#         [ 12,  68,  47],</span>\r\n<span class=\"token comment\">#         [ 69, 142,  29],</span>\r\n<span class=\"token comment\">#         [ 44,  49,  39],</span>\r\n<span class=\"token comment\">#         [ 31,  70,  88],</span>\r\n<span class=\"token comment\">#         [  9,  59,  22],</span>\r\n<span class=\"token comment\"># show more (open the raw output data in a text editor) ...</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [151, 164,  51],</span>\r\n<span class=\"token comment\">#         [104,  55,  40],</span>\r\n<span class=\"token comment\">#         [ 62,  42,  62],</span>\r\n<span class=\"token comment\">#         [ 54, 144,  50],</span>\r\n<span class=\"token comment\">#         [ 21,   7, 106],</span>\r\n<span class=\"token comment\">#         [ 55, 220,  77]], dtype=int64)>)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> 데이터가 많다 보니 argmax가 array로 나온다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 8. shape가 `[1, 224, 224, 3]`인 임의의 값을 가진 텐서를 만든 다음, shape 를 [224, 224, 3]으로 변경하도록 압축합니다.</span>\r\nmy_tensor <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">200000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150528</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nmy_tensor<span class=\"token punctuation\">.</span>shape\r\n\r\n<span class=\"token comment\"># TensorShape([1, 224, 224, 3])</span>\r\n\r\nmy_tensor_squeezed <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>squeeze<span class=\"token punctuation\">(</span>my_tensor<span class=\"token punctuation\">)</span>\r\nmy_tensor_squeezed\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(224, 224, 3), dtype=int32, numpy=</span>\r\n<span class=\"token comment\"># array([[[175009, 110981, 100502],</span>\r\n<span class=\"token comment\">#         [  3281, 112021, 175138],</span>\r\n<span class=\"token comment\">#         [  2710, 171668, 119450],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [ 89030,  19940,  22604],</span>\r\n<span class=\"token comment\">#         [ 58292,  52735,  12148],</span>\r\n<span class=\"token comment\">#         [  2487, 162231,  47562]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[ 19869, 136252, 177059],</span>\r\n<span class=\"token comment\">#         [102490,  64080, 148801],</span>\r\n<span class=\"token comment\">#         [  1160, 158575, 150935],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [172852, 121926,  72938],</span>\r\n<span class=\"token comment\">#         [104886,   4703,  24997],</span>\r\n<span class=\"token comment\">#         [ 61092, 128339,  38330]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[147137,  65838, 142377],</span>\r\n<span class=\"token comment\">#         [ 16982,  28400,  90343],</span>\r\n<span class=\"token comment\">#         [139882,  42696,  85943],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [110674,  37291, 121498],</span>\r\n<span class=\"token comment\">#         [117555,  25337, 160308],</span>\r\n<span class=\"token comment\">#         [  6367, 199894,  33939]],</span>\r\n<span class=\"token comment\"># show more (open the raw output data in a text editor) ...</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [194010, 120434,  92275],</span>\r\n<span class=\"token comment\">#         [151216,   2881, 153930],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [ 63223, 198063,  99874],</span>\r\n<span class=\"token comment\">#         [125788,  29255,  10041],</span>\r\n<span class=\"token comment\">#         [145130,  96858,  34686]]])></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 9. 자신이 선택한 값을 사용하여 shape가 `[10]`인 텐서를 만든 다음 최대값을 갖는 인덱스를 찾습니다.  </span>\r\nmy_tensor <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nmy_tensor<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> my_tensor\r\n\r\n<span class=\"token comment\"># (TensorShape([10]),</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(10,), dtype=int32, numpy=array([44, 39, 66, 95, 90, 87, 15, 61, 41, 30])>)</span>\r\n\r\ntf<span class=\"token punctuation\">.</span>reduce_max<span class=\"token punctuation\">(</span>my_tensor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>reduce_min<span class=\"token punctuation\">(</span>my_tensor<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(), dtype=int32, numpy=95>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(), dtype=int32, numpy=15>)</span>\r\n\r\ntf<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>my_tensor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> tf<span class=\"token punctuation\">.</span>argmin<span class=\"token punctuation\">(</span>my_tensor<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(), dtype=int64, numpy=3>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(), dtype=int64, numpy=6>)</span>\r\n\r\nmy_tensor<span class=\"token punctuation\">[</span>tf<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span>my_tensor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> my_tensor<span class=\"token punctuation\">[</span>tf<span class=\"token punctuation\">.</span>argmin<span class=\"token punctuation\">(</span>my_tensor<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># (95, 15)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 10. 9에서 생성한 텐서를 원-핫 인코딩합니다.  </span>\r\ntf<span class=\"token punctuation\">.</span>one_hot<span class=\"token punctuation\">(</span>my_tensor<span class=\"token punctuation\">,</span> depth<span class=\"token operator\">=</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(10, 10), dtype=float32, numpy=</span>\r\n<span class=\"token comment\"># array([[0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.],</span>\r\n<span class=\"token comment\">#        [0., 0., 0., 0., 0., 0., 0., 0., 0., 0.]], dtype=float32)></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<hr>\n<h2 id=\"regression\" style=\"position:relative;\">Regression<a href=\"#regression\" aria-label=\"regression permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ul>\n<li>01_neural_network_regression.ipynb</li>\n</ul>\n<p>머신러닝</p>\n<ol>\n<li>Supervised (Regression, Classification)</li>\n<li>Non-supervised</li>\n<li>Reinforce</li>\n</ol>\n<p>regression 문제 해결! (특정 값인 숫자를 예측하고자 하는 것)</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\r\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\r\n\r\nX <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">7</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">14</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># feature</span>\r\ny <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">15</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">18</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># label</span>\r\n\r\nplt<span class=\"token punctuation\">.</span>scatter<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>모델링 (modeling) : X 와 y에 숨겨진 pattern(패턴)을 찾고 계산, 수식으로 표현하고 싶다!</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> tensorflow <span class=\"token keyword\">as</span> tf\r\nhouse_info <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"bedroom\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"bathroom\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"garage\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nhouse_price <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>constant<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">939700</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nhouse_info<span class=\"token punctuation\">,</span> house_price\r\n\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(3,), dtype=string, numpy=array([b'bedroom', b'bathroom', b'garage'], dtype=object)>,</span>\r\n<span class=\"token comment\">#  &lt;tf.Tensor: shape=(1,), dtype=int32, numpy=array([939700])>)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>신경망 (neural network)을 활용할 때 가장 중요한 개념 중에 하나가 입력 shape, 출력 shape<br>\ninput shape (입력 shape) : 모델에 입력할 데이터의 shape<br>\noutput shape (출력 shape) : 입력한 데이터를 모델이 처리하고 내보내는 결과의 shape<br>\ninput shape, output shape 를 우리가 해결하려는 문제에 따라서 항상 다르다!<br>\n신경망은 숫자를 받아들이고, 숫자로 결과를 알려줍니다. 일반적으로 이러한 숫자들은 tensor 및 array로 표현합니다.</p>\n<p>입력인 X를 통해서 y를 예측하고 싶다! ==> regression</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">input_shape <span class=\"token operator\">=</span> X<span class=\"token punctuation\">.</span>shape\r\noutput_shape <span class=\"token operator\">=</span> y<span class=\"token punctuation\">.</span>shape\r\n\r\nX<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> Y<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> input_shape<span class=\"token punctuation\">,</span> output_shape\r\n<span class=\"token comment\"># (-7.0, 3.0, (8,), (8,))</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Tensorflow로 모델링을 하는 과정, 즉 모델을 생성하고 학습하는 3가지 과정</p>\n<ol>\n<li>모델을 create : 직접 신경망의 계층을 추가합니다 / 이전에 만들어진 모델을 가져와서 사용 (전이학습 transfer learning)</li>\n<li>모델을 compile : 모델의 성능을 평가할 수 있는 지표를 지정 (loss/metrics)하고 모델이 어떻게 개선되어야할지 정의 (optimizer)</li>\n<li>모델을 fit : 데이터에서 패턴을 찾도록 시키는 것</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>set_seed<span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 1. 모델을 create</span>\r\nmodel <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 2. 모델을 compile</span>\r\n\r\nmodel<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>\r\n    loss <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>losses<span class=\"token punctuation\">.</span>mae<span class=\"token punctuation\">,</span> <span class=\"token comment\"># mean absolute error</span>\r\n    optimizer <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>optimizers<span class=\"token punctuation\">.</span>SGD<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># short for stochastic gradient descent</span>\r\n    metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"mae\"</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 3. 모델을 fit</span>\r\nmodel<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">,</span> epochs <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Epoch 1/5</span>\r\n<span class=\"token comment\"># 1/1 [==============================] - 0s 424ms/step - loss: 11.5048 - mae: 11.5048</span>\r\n<span class=\"token comment\"># Epoch 2/5</span>\r\n<span class=\"token comment\"># 1/1 [==============================] - 0s 3ms/step - loss: 11.3723 - mae: 11.3723</span>\r\n<span class=\"token comment\"># Epoch 3/5</span>\r\n<span class=\"token comment\"># 1/1 [==============================] - 0s 3ms/step - loss: 11.2398 - mae: 11.2398</span>\r\n<span class=\"token comment\"># Epoch 4/5</span>\r\n<span class=\"token comment\"># 1/1 [==============================] - 0s 3ms/step - loss: 11.1073 - mae: 11.1073</span>\r\n<span class=\"token comment\"># Epoch 5/5</span>\r\n<span class=\"token comment\"># 1/1 [==============================] - 0s 2ms/step - loss: 10.9748 - mae: 10.9748</span>\r\n<span class=\"token comment\"># &lt;keras.callbacks.History at 0x1e34bdd9400></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">X<span class=\"token punctuation\">,</span> y\r\n\r\n<span class=\"token comment\"># (array([-7., -4., -1.,  2.,  5.,  8., 11., 14.]),</span>\r\n<span class=\"token comment\">#  array([ 3.,  6.,  9., 12., 15., 18., 21., 24.]))</span>\r\n\r\n<span class=\"token comment\"># 4. 만들고 학습한 모델로 predict</span>\r\nmodel<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">17.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> model<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">10.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># (array([[12.716021]], dtype=float32), array([[-7.4006]], dtype=float32))</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>학습한 모델읠 결과가 좋지 않아요!<br>\n모델의 성능을 더 좋게 만들어야 합니다.</p>\n<ol>\n<li>모델을 create : 계층을 추가해 준다! / 계층을 구성하는 neuron을 추가 / activation function (활성화 함수)를 바꿔 본다</li>\n<li>모델을 compile : optimization function (최적화 함수)를 바꿔 본다 / 최적화 함수의 learning rate 를 변경</li>\n<li>모델을 fit : 더 많이 공부, 즉 학습 epoch를 늘린다! => 시간이 늘어난다 / 학습하는 데이터를 더 많이 준다!</li>\n</ol>\n<p>cf. 계층을 추가해 준다! / 계층을 구성하는 neuron을 추가 / 최적화 함수의 learning rate를 변경 (Data Augmentation)<br>\n지금까지 모델을 개선하기 위해서 섬령한 위의 내용들은 개발자가 직접 변경할 수 있다!<br>\nhyper parameter 라고 합니다.<br>\nhyper parameter를 우리가 직접 수정하는 그 과정 => hyper parameter tuning!</p>\n<ul>\n<li>\n<p><a href=\"https://en.wikipedia.org/wiki/Hyperparameter_(machine_learning)\">https://en.wikipedia.org/wiki/Hyperparameter_(machine_learning)</a></p>\n</li>\n<li>\n<p><a href=\"https://en.wikipedia.org/wiki/Hyperparameter_optimization\">https://en.wikipedia.org/wiki/Hyperparameter_optimization</a></p>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 1/1 [==============================] - 0s 4ms/step - loss: 10.0473 - mae: 10.0473</span>\r\n<span class=\"token comment\"># Epoch 13/200</span>\r\n<span class=\"token comment\"># show more (open the raw output data in a text editor) ...</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\"># 1/1 [==============================] - 0s 2ms/step - loss: 6.3300 - mae: 6.3300</span>\r\n<span class=\"token comment\"># Epoch 199/200</span>\r\n<span class=\"token comment\"># 1/1 [==============================] - 0s 4ms/step - loss: 6.3244 - mae: 6.3244</span>\r\n<span class=\"token comment\"># Epoch 200/200</span>\r\n<span class=\"token comment\"># 1/1 [==============================] - 0s 997us/step - loss: 6.3187 - mae: 6.3187</span>\r\n<span class=\"token comment\"># &lt;keras.callbacks.History at 0x1e34c091a90></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> epochs를 200으로 바꿨더니, loss가 더 낮아졌다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">X<span class=\"token punctuation\">,</span> y\r\n<span class=\"token comment\"># (array([-7., -4., -1.,  2.,  5.,  8., 11., 14.]),</span>\r\n<span class=\"token comment\">#  array([ 3.,  6.,  9., 12., 15., 18., 21., 24.]))</span>\r\n\r\nmodel<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">17.0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># array([[30.908516]], dtype=float32)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>모델 평가 (Evaluating a model)<br>\n일반적인 신경망을 만드는 과정<br>\n모델 생성 -> 모델 평가 -> 평가를 기반으로 모델 수정 -> 모델 평가 -> 평가를 기반으로 모델 수정 ... 반복<br>\n수정이라는 표현은 모델을 다시 만든다라고 하기 보다 기존 설정을 변경한다라는 의미<br>\n시각화로 모델을 쉽고 직관적으로 평가를 하려 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">model<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Model: \"sequential_3\"</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># Layer (type)                 Output Shape              Param #   </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># dense_3 (Dense)              (None, 1)                 2         </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># Total params: 2</span>\r\n<span class=\"token comment\"># Trainable params: 2</span>\r\n<span class=\"token comment\"># Non-trainable params: 0</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"#9%EC%9D%BC%EC%B0%A8\">9일차</a></li>\n<li><a href=\"#quiz\">Quiz</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#regression\">Regression</a></p>\n</li>\n</ul>","frontmatter":{"title":"AI 이노베이션 스퀘어 3기 언어반 9일차 후기"}}},"pageContext":{"slug":"/ai-이노베이션-스퀘어-언어-9일차/"}},"staticQueryHashes":["3159585216"]}