{"componentChunkName":"component---src-templates-blog-post-js","path":"/ai-이노베이션-스퀘어-언어-6일차/","result":{"data":{"markdownRemark":{"html":"<p>Sqlite를 활용해 크롤링 데이터를 db에 저장했다. 특정 단어의 유사한 단어를 찾아본 게 인상적이다.</p>\n<hr>\n<h3 id=\"6일차\" style=\"position:relative;\">6일차<a href=\"#6%EC%9D%BC%EC%B0%A8\" aria-label=\"6일차 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h4 id=\"앞으로의-일정\" style=\"position:relative;\">앞으로의 일정<a href=\"#%EC%95%9E%EC%9C%BC%EB%A1%9C%EC%9D%98-%EC%9D%BC%EC%A0%95\" aria-label=\"앞으로의 일정 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>오전 데이터 수집<br>\n오후 자연어 처리</p>\n<p>MongoDB : PDF에서 문서 추출</p>\n<p>5~6주차 : Tensorflow 기초, Tnesorflow로 하는 자연어 처리</p>\n<p>6~10주차:오후 4시간 씩 프로젝트 시간</p>\n<p>7~10주차</p>\n<ul>\n<li>웹 프로그래밍</li>\n<li>챗봇 만들기</li>\n<li>OCR 해보기 (OpenCV)</li>\n<li>REST API 서버 구현</li>\n</ul>\n<p>다음주에 16시 30분에서 1시간 분량 토, 일<br>\nSQL 기초</p>\n<hr>\n<h3 id=\"\" style=\"position:relative;\"><a href=\"#\" aria-label=\" permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>데이터 분석 그리고 AI -> 데이터가 없으면 의미가 없다.</p>\n<p>장기과정에서 프로젝트를 하는 학생이나 데이터 분석 컨설팅<br>\n계획이나 주제는 참 좋습니다! => 그 데이터가 있는지? 왜 의미가 있는지?</p>\n<ol>\n<li>공개된 데이터를 사용하기 (Kaggle, aihub, 공공데이터 등등)</li>\n<li>web crawling : 특정 사이트의 웹페이지 내용을 가져오는 것</li>\n</ol>\n<p>web scraping : 특정 사이트에서 가져온 웹페이지에서 원하는 부분을 추려내는 것<br>\n=> 문제점 : 비공식적 방법이다!</p>\n<ol>\n<li>웹페이지 내용이 오늘과 내일이 다를 수 있습니다.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\"> => 어제까지 잘 추출하던 내용이 오늘 없을 수가 있다.  </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ol start=\"2\">\n<li>웹페이지의 내용은 해당 사이트에 존재 컨텐츠</li>\n<li>해당 서버에 부담을 준다.</li>\n</ol>\n<p>cf. <a href=\"https://httpbin.org/\">https://httpbin.org/</a><br>\n=> ben을 당할 수가 있다.<br>\n=> 어제 예제의 경우 1초에 1페이지씩 처리가 되었다.<br>\n사회공학적으로 보았을 때 사람이라면 1초에 1페이지씩 이동한다는 것은 불가능하다고 가정<br>\n=> 이런 패턴을 해당 사이트에서는 감시를 한다. 이상한 동작이 발생하면 IP 주소를 차단<br>\n[1] 해당 페이지 처리 간에 지연을 준다 2초 정도<br>\n[2] proxy 서버를 통해 우회해서 나를 속이는 경우<br>\n[3] 헤더 부분을 변경<br>\n[4] browserless 방식으로 웹 접속<br>\n3) REST API : 공식적인 방법!<br>\nREST API는 endpoint라는 것을 사용합니다.<br>\nendpoint 제공하는 서버가 별도로 존재합니다.<br>\n돈이 든다. 서비스화가 필요!<br>\n사례)<br>\n- 날씨 : <a href=\"https://openweathermap.org/\">https://openweathermap.org/</a><br>\n- 언어 확인 : <a href=\"https://languagelayer.com/\">https://languagelayer.com/</a><br>\n- 공공 데이터 : <a href=\"https://www.data.go.kr/\">https://www.data.go.kr/</a></p>\n<p>[특징]</p>\n<ol>\n<li>공식적인 API (Application Programming Interface)가 존재</li>\n</ol>\n<p>-> 이것만 따라하면 이상없이 데이터를 얻을 수 있다.<br>\n-> sample program도 제공<br>\n2. 사용량만큼 돈을 내야하는 서비스들이 대부분.<br>\n-> 사용자가 누구인지 파악하는 API Key가 존재!<br>\n-> 만약에 내가 API 서비스를 사용하는 프로그램을 github나 누군가에게 공개할 때, API Key를 삭제하고 제공해야 한다.<br>\n3. API의 버전이 존재!<br>\n-> 공식적인 서버에서 제공하는 데이터가 더 많아질 수도 있다.<br>\n-> 더 좋은 방식으로 데이터의 결과를 주고 싶은 경우가 있다.<br>\n-> 공식적인 서비스이기 때문에, 최소 1개월 전에는 사용자들에게 알림을 전달<br>\n4. API 호출의 결과는 대부분 JSON 형식을 사용!</p>\n<p><a href=\"https://dev.mysql.com/downloads/windows/installer/8.0.html\">https://dev.mysql.com/downloads/windows/installer/8.0.html</a></p>\n<h3 id=\"크롤링--db-저장\" style=\"position:relative;\">크롤링 (+ DB 저장)<a href=\"#%ED%81%AC%EB%A1%A4%EB%A7%81--db-%EC%A0%80%EC%9E%A5\" aria-label=\"크롤링  db 저장 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>API key를 지웠습니다.</li>\n</ul>\n<p>prettytable 설치 후 vsc를 재시작한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">> pip install prettytable</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>get_data_from_api.py</li>\n</ul>\n<p><a href=\"https://jsonformatter.curiousconcept.com/\">https://jsonformatter.curiousconcept.com/</a></p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> request\r\n<span class=\"token keyword\">import</span> json\r\n<span class=\"token keyword\">from</span> prettytable <span class=\"token keyword\">import</span> PrettyTable\r\ndataTable <span class=\"token operator\">=</span> PrettyTable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\nURL <span class=\"token operator\">=</span> <span class=\"token string\">\"http://api.openweathermap.org/data/2.5/weather?q={city name}&amp;appid={API key}\"</span>\r\nCITY <span class=\"token operator\">=</span> <span class=\"token string\">\"seoul\"</span>\r\nAPI_KEY <span class=\"token operator\">=</span> <span class=\"token string\">\"   \"</span>\r\n\r\n<span class=\"token keyword\">with</span> request<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>URL<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"{city name}\"</span><span class=\"token punctuation\">,</span> CITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"{API key}\"</span><span class=\"token punctuation\">,</span> API_KEY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\r\n    <span class=\"token comment\"># print(response.read())</span>\r\n    result_json <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\nparsed_json <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>result_json<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># print(parsed_json[\"weather\"])</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>parsed_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>parsed_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\ndataTable<span class=\"token punctuation\">.</span>field_names <span class=\"token operator\">=</span> parsed_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> parsed_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n    list_values <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list_values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list_values<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list_values<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list_values<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n    dataTable<span class=\"token punctuation\">.</span>add_row<span class=\"token punctuation\">(</span>parsed_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dataTable<span class=\"token punctuation\">)</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>table에 저장된 거처럼 터미널 상에 보여진다.</p>\n<ul>\n<li>문제 : seoul과 busan의 날씨를 가져오고, 또한, description이 한글이었으면 좋겠다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> request\r\n<span class=\"token keyword\">import</span> json\r\n<span class=\"token keyword\">from</span> prettytable <span class=\"token keyword\">import</span> PrettyTable\r\ndataTable <span class=\"token operator\">=</span> PrettyTable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\nURL <span class=\"token operator\">=</span> <span class=\"token string\">\"http://api.openweathermap.org/data/2.5/weather?q={city name}&amp;appid={API key}\"</span>\r\n<span class=\"token comment\"># CITY = \"seoul\"</span>\r\nCITY <span class=\"token operator\">=</span> <span class=\"token string\">\"busan\"</span>\r\nURL <span class=\"token operator\">=</span> URL <span class=\"token operator\">+</span> <span class=\"token string\">\"&amp;lang=KR\"</span>\r\nAPI_KEY <span class=\"token operator\">=</span> <span class=\"token string\">\"   \"</span>\r\n\r\n<span class=\"token keyword\">with</span> request<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>URL<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"{city name}\"</span><span class=\"token punctuation\">,</span> CITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"{API key}\"</span><span class=\"token punctuation\">,</span> API_KEY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\r\n    <span class=\"token comment\"># print(response.read())</span>\r\n    result_json <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\nparsed_json <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>result_json<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># print(parsed_json[\"weather\"])</span>\r\n<span class=\"token comment\"># print(parsed_json[\"weather\"][0])</span>\r\n<span class=\"token comment\"># print(parsed_json[\"weather\"][0].keys())</span>\r\ndataTable<span class=\"token punctuation\">.</span>field_names <span class=\"token operator\">=</span> parsed_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> parsed_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n    list_values <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>list_values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list_values<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list_values<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> list_values<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n    dataTable<span class=\"token punctuation\">.</span>add_row<span class=\"token punctuation\">(</span>parsed_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dataTable<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 문제 : seoul과 busan의 날씨를 가져오고, 또한, description이 한글이었으면 좋겠다.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>city 3개를 크롤링 하기</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> request\r\n<span class=\"token keyword\">import</span> json\r\n<span class=\"token keyword\">from</span> prettytable <span class=\"token keyword\">import</span> PrettyTable\r\ndataTable <span class=\"token operator\">=</span> PrettyTable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\nURL <span class=\"token operator\">=</span> <span class=\"token string\">\"http://api.openweathermap.org/data/2.5/weather?q={city name}&amp;lang={lang}&amp;appid={API key}\"</span>\r\n<span class=\"token comment\"># CITY = \"seoul\"</span>\r\n<span class=\"token comment\"># CITY = \"busan\"</span>\r\nCITIES <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"seoul\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"busan\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"chuncheon\"</span><span class=\"token punctuation\">]</span>\r\nLANG <span class=\"token operator\">=</span> <span class=\"token string\">\"kr\"</span>\r\nAPI_KEY <span class=\"token operator\">=</span> <span class=\"token string\">\"   \"</span>\r\n\r\n<span class=\"token keyword\">for</span> CITY <span class=\"token keyword\">in</span> CITIES<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">with</span> request<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>URL<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"{city name}\"</span><span class=\"token punctuation\">,</span> CITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"{lang}\"</span><span class=\"token punctuation\">,</span> LANG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"{API key}\"</span><span class=\"token punctuation\">,</span> API_KEY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\r\n        <span class=\"token comment\"># print(response.read())</span>\r\n        result_json <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    parsed_json <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>result_json<span class=\"token punctuation\">)</span>\r\n    <span class=\"token comment\"># print(parsed_json[\"weather\"])</span>\r\n    <span class=\"token comment\"># print(parsed_json[\"weather\"][0])</span>\r\n    <span class=\"token comment\"># print(parsed_json[\"weather\"][0].keys())</span>\r\n    dataTable<span class=\"token punctuation\">.</span>field_names <span class=\"token operator\">=</span> parsed_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> parsed_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n        list_values <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token comment\"># print(list_values[0], list_values[1], list_values[2], list_values[3])</span>\r\n        dataTable<span class=\"token punctuation\">.</span>add_row<span class=\"token punctuation\">(</span>parsed_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>dataTable<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>\n<p><a href=\"https://db-engines.com/en/ranking\">https://db-engines.com/en/ranking</a></p>\n</li>\n<li>\n<p><a href=\"https://www.python.org/dev/peps/pep-0249/\">https://www.python.org/dev/peps/pep-0249/</a></p>\n</li>\n</ul>\n<hr>\n<ul>\n<li>SQL command</li>\n</ul>\n<ul>\n<li>DDL : Data Define Language</li>\n<li>DML : Manipulation</li>\n<li>DCL : Control</li>\n</ul>\n<ul>\n<li>REST API 방식으로 가져온 데이터를 DB에 저장해 보자</li>\n</ul>\n<p>여기서는 sqlite3를 활용하였고, 실행 시 weather.db가 생성된다.</p>\n<p>SQLite를 설치하여 해당 db 데이터를 확인할 수 있다.</p>\n<ul>\n<li><a href=\"https://sqlitebrowser.org/\">https://sqlitebrowser.org/</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> urllib <span class=\"token keyword\">import</span> request\r\n<span class=\"token keyword\">import</span> json\r\n<span class=\"token keyword\">import</span> sqlite3\r\n<span class=\"token keyword\">from</span> prettytable <span class=\"token keyword\">import</span> PrettyTable\r\n\r\ndataTable <span class=\"token operator\">=</span> PrettyTable<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nURL <span class=\"token operator\">=</span> <span class=\"token string\">\"http://api.openweathermap.org/data/2.5/weather?q={city name}&amp;lang={lang}&amp;appid={API key}\"</span>\r\nCITIES <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"seoul\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"busan\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"chuncheon\"</span><span class=\"token punctuation\">]</span>\r\nLANG <span class=\"token operator\">=</span> <span class=\"token string\">\"kr\"</span>\r\nAPI_KEY <span class=\"token operator\">=</span> <span class=\"token string\">\"   \"</span>\r\n\r\nconnection_sqlite3 <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token string\">\"weather.db\"</span><span class=\"token punctuation\">)</span>\r\ncursor_sqlite3 <span class=\"token operator\">=</span> connection_sqlite3<span class=\"token punctuation\">.</span>cursor<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\ncity_weather_table_create <span class=\"token operator\">=</span> <span class=\"token string\">\"CREATE TABLE IF NOT EXISTS city_weather (id integer, main text, description text, icon text)\"</span>\r\ncursor_sqlite3<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>city_weather_table_create<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">for</span> CITY <span class=\"token keyword\">in</span> CITIES<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">with</span> request<span class=\"token punctuation\">.</span>urlopen<span class=\"token punctuation\">(</span>URL<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"{city name}\"</span><span class=\"token punctuation\">,</span> CITY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"{lang}\"</span><span class=\"token punctuation\">,</span> LANG<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"{API key}\"</span><span class=\"token punctuation\">,</span> API_KEY<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> response<span class=\"token punctuation\">:</span>\r\n        result_json <span class=\"token operator\">=</span> response<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n        parsed_json <span class=\"token operator\">=</span> json<span class=\"token punctuation\">.</span>loads<span class=\"token punctuation\">(</span>result_json<span class=\"token punctuation\">)</span>\r\n        dataTable<span class=\"token punctuation\">.</span>field_names <span class=\"token operator\">=</span> parsed_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>keys<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n        <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> parsed_json<span class=\"token punctuation\">[</span><span class=\"token string\">\"weather\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span>\r\n            list_values <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n            dataTable<span class=\"token punctuation\">.</span>add_row<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>values<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n            cursor_sqlite3<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span>\r\n                    <span class=\"token string\">\"INSERT INTO city_weather VALUES ('\"</span> <span class=\"token operator\">+</span>\r\n                    <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>list_values<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"', '\"</span> <span class=\"token operator\">+</span>\r\n                    list_values<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"', '\"</span> <span class=\"token operator\">+</span>\r\n                    list_values<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"', '\"</span> <span class=\"token operator\">+</span>\r\n                    list_values<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> <span class=\"token string\">\"')\"</span>\r\n        <span class=\"token punctuation\">)</span>\r\nconnection_sqlite3<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># print(dataTable)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>1시간 20분 만에</p>\n<ol>\n<li>REST API 사용법을 배웠고</li>\n<li>JSON 처리 및 파이썬 딕셔너리 방법도 배웠고</li>\n<li>SQLite3를 활용한 데이터베이스 개념을 간단히 알아보고,</li>\n</ol>\n<p>간단한 데이터 입력만 해보고, dbsqlitebrowser를 통해서 데이터를 확인</p>\n<hr>\n<ul>\n<li>study_sqlite.ipynb</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 파이썬으로 database 생성</span>\r\n<span class=\"token comment\"># SQLite3의 경우 connection을 할 때, 해당 database 파일이 존재하지 않으면 생성</span>\r\n<span class=\"token comment\"># 다른 관계형 (Relational) DBMS (Database Management System) 의 경우, 사전에 database가 생성되어 있어야 한다.</span>\r\n<span class=\"token keyword\">import</span> sqlite3\r\n\r\nconn <span class=\"token operator\">=</span> sqlite3<span class=\"token punctuation\">.</span>connect<span class=\"token punctuation\">(</span><span class=\"token string\">\"coffee.db\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Database 연결\"</span><span class=\"token punctuation\">)</span>\r\n\r\nDatabase 연결</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Database라는 곳은 데이터들을 보관하는 곳</span>\r\n<span class=\"token comment\"># table : 데이터들을 기준에 의해서 논리적으로 묶은 것</span>\r\n<span class=\"token comment\"># 행 (row, record) 및 열 (column, )으로 이루어 짐</span>\r\n<span class=\"token comment\"># table schema : 어떤 데이터들로 구성이 돼 있고, 각 열이 어떤 데이터 형식을 가지는지 정의</span>\r\n<span class=\"token comment\"># 테이블 생성하고 데이터를 입력</span>\r\nconn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nCREATE TABLE users(\r\n    id    INT   PRIMARY KEY  NOT NULL,\r\n    name  TEXT  NOT NULL\r\n)\r\n'''</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"테이블이 생성되었습니다.\"</span><span class=\"token punctuation\">)</span>\r\n\r\n테이블이 생성되었습니다<span class=\"token punctuation\">.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Database가 존재하고, Table 생성한 상태이다.</span>\r\n<span class=\"token comment\"># 이제 이 table에 data를 입력</span>\r\n\r\nconn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nINSERT INTO users (id, name)\r\nVALUES(1,\"김철수\")\r\n'''</span><span class=\"token punctuation\">)</span>\r\nconn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nINSERT INTO users (id, name)\r\nVALUES(2,\"이영희\")\r\n'''</span><span class=\"token punctuation\">)</span>\r\nconn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nINSERT INTO users (id, name)\r\nVALUES(3,\"이동국\")\r\n'''</span><span class=\"token punctuation\">)</span>\r\nconn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nINSERT INTO users (id, name)\r\nVALUES(4,\"안정환\")\r\n'''</span><span class=\"token punctuation\">)</span>\r\n\r\nconn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"데이터 입력 완료\"</span><span class=\"token punctuation\">)</span>\r\n\r\n데이터 입력 완료</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>commit까지 해야 insert가 완료된다.</p>\n<ul>\n<li>select</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 데이터를 보여준다!</span>\r\n<span class=\"token comment\"># 우선 데이터를 조회해서 Result Set를 가져온다</span>\r\n\r\ncursor <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nSELECT *\r\nFROM users\r\n'''</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>cursor<span class=\"token punctuation\">)</span> <span class=\"token comment\"># sqlite3.Cursor</span>\r\n\r\n\r\n<span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> cursor<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'김철수'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'이영희'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'이동국'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'안정환'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>    </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>DML</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nINSERT INTO users (id, name)\r\nVALUES(5,\"김철수\")\r\n'''</span><span class=\"token punctuation\">)</span>\r\nconn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nINSERT INTO users (id, name)\r\nVALUES(6,\"이영희\")\r\n'''</span><span class=\"token punctuation\">)</span>\r\nconn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nINSERT INTO users (id, name)\r\nVALUES(7,\"이동국\")\r\n'''</span><span class=\"token punctuation\">)</span>\r\nconn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nINSERT INTO users (id, name)\r\nVALUES(8,\"안정환\")\r\n'''</span><span class=\"token punctuation\">)</span>\r\n\r\nconn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\ncursor <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nSELECT name -- NAME만 보고 싶다\r\nFROM users\r\n'''</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> cursor<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token string\">'김철수'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token string\">'이영희'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token string\">'이동국'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token string\">'안정환'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token string\">'김철수'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token string\">'이영희'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token string\">'이동국'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token string\">'안정환'</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>    </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 데이터를 삭제하고 싶다.</span>\r\ncursor <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nDELETE FROM users\r\nWHERE id >= 5\r\n'''</span><span class=\"token punctuation\">)</span>\r\n\r\nconn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\ncursor <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nSELECT *\r\nFROM users\r\n'''</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> cursor<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'김철수'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'이영희'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'이동국'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'안정환'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 데이터 입력, 조회, 삭제</span>\r\n<span class=\"token comment\"># 이제 남은 건 수정!</span>\r\n\r\nconn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nUPDATE users\r\nSET name = \"이강인\"\r\nWHERE id = 2\r\n'''</span><span class=\"token punctuation\">)</span>\r\n\r\nconn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\ncursor <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nSELECT *\r\nFROM users\r\n'''</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> cursor<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'김철수'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'이강인'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'이동국'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'안정환'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nUPDATE users\r\nSET name = \"기성용\"\r\nWHERE id = 1\r\n'''</span><span class=\"token punctuation\">)</span>\r\n\r\nconn<span class=\"token punctuation\">.</span>commit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\ncursor <span class=\"token operator\">=</span> conn<span class=\"token punctuation\">.</span>execute<span class=\"token punctuation\">(</span><span class=\"token triple-quoted-string string\">'''\r\nSELECT * -- 테이블의 모든 열을 보여달라\r\nFROM users\r\n'''</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">for</span> row <span class=\"token keyword\">in</span> cursor<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'기성용'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'이강인'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'이동국'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>\r\n<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'안정환'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'tuple'</span><span class=\"token operator\">></span>    </code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<hr>\n<p>nltk, spacy, textblob, wordnet</p>\n<ul>\n<li>study_textblob.ipynb</li>\n</ul>\n<p>textblob을 설치한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">! pip install textblob\r\n! pip freeze <span class=\"token operator\">></span> requirements<span class=\"token punctuation\">.</span>txt\r\n\r\n<span class=\"token keyword\">from</span> textblob <span class=\"token keyword\">import</span> TextBlob\r\ntext <span class=\"token operator\">=</span> <span class=\"token string\">\"In this course we will learn how to perform NLP with TextBlob. TextBlob is a Phython package that's built on top of the famous Python package called NLTK.\"</span>\r\n\r\nblob <span class=\"token operator\">=</span> TextBlob<span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">(</span>textblob<span class=\"token punctuation\">.</span>blob<span class=\"token punctuation\">.</span>TextBlob<span class=\"token punctuation\">,</span> <span class=\"token number\">154</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> blob<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\r\n\r\nI\r\nn\r\n\r\nt\r\nh\r\n<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> nltk\r\nnltk<span class=\"token punctuation\">.</span>download<span class=\"token punctuation\">(</span><span class=\"token string\">\"punkt\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">[</span>nltk_data<span class=\"token punctuation\">]</span> Downloading package punkt to\r\n<span class=\"token punctuation\">[</span>nltk_data<span class=\"token punctuation\">]</span>     C<span class=\"token punctuation\">:</span>\\Users\\Choi\\AppData\\Roaming\\nltk_data<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<span class=\"token punctuation\">[</span>nltk_data<span class=\"token punctuation\">]</span>   Package punkt <span class=\"token keyword\">is</span> already up<span class=\"token operator\">-</span>to<span class=\"token operator\">-</span>date!\r\n<span class=\"token boolean\">True</span>\r\n\r\nresult <span class=\"token operator\">=</span> blob<span class=\"token punctuation\">.</span>words\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> result\r\n\r\n<span class=\"token comment\"># (textblob.blob.WordList,</span>\r\n<span class=\"token comment\">#  29,</span>\r\n<span class=\"token comment\">#  WordList(['In', 'this', 'course', 'we', 'will', 'learn', 'how', 'to', 'perform', 'NLP', 'with', 'TextBlob', 'TextBlob', 'is', 'a', 'Phython', 'package', 'that', \"'s\", 'built', 'on', 'top', 'of', 'the', 'famous', 'Python', 'package', 'called', 'NLTK']))</span>\r\n\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token punctuation\">(</span>textblob<span class=\"token punctuation\">.</span>blob<span class=\"token punctuation\">.</span>Word<span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'learn'</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>string\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'learn'</span><span class=\"token punctuation\">)</span>\r\n\r\nnew_string <span class=\"token operator\">=</span> <span class=\"token string\">\"Test \"</span> <span class=\"token operator\">+</span> result<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>new_string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>new_string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> new_string\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Test In'</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"문장-처리\" style=\"position:relative;\">문장 처리<a href=\"#%EB%AC%B8%EC%9E%A5-%EC%B2%98%EB%A6%AC\" aria-label=\"문장 처리 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 문장 (Sentence) 처리</span>\r\n\r\nsentences <span class=\"token operator\">=</span> blob<span class=\"token punctuation\">.</span>sentences\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>sentences<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sentences<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sentences\r\n\r\n<span class=\"token comment\"># (list,</span>\r\n<span class=\"token comment\">#  2,</span>\r\n<span class=\"token comment\">#  [Sentence(\"In this course we will learn how to perform NLP with TextBlob.\"),</span>\r\n<span class=\"token comment\">#   Sentence(\"TextBlob is a Phython package that's built on top of the famous Python package called NLTK.\")])</span>\r\n\r\n<span class=\"token keyword\">for</span> sentence <span class=\"token keyword\">in</span> sentences<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>sentence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sentence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sentence<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'textblob.blob.Sentence'</span><span class=\"token operator\">></span> <span class=\"token number\">62</span> In this course we will learn how to perform NLP <span class=\"token keyword\">with</span> TextBlob<span class=\"token punctuation\">.</span>\r\n<span class=\"token operator\">&lt;</span><span class=\"token keyword\">class</span> <span class=\"token string\">'textblob.blob.Sentence'</span><span class=\"token operator\">></span> <span class=\"token number\">91</span> TextBlob <span class=\"token keyword\">is</span> a Phython package that's built on top of the famous Python package called NLTK<span class=\"token punctuation\">.</span>\r\n\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>sentences<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sentences<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sentences<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token punctuation\">(</span>textblob<span class=\"token punctuation\">.</span>blob<span class=\"token punctuation\">.</span>Sentence<span class=\"token punctuation\">,</span>\r\n <span class=\"token number\">62</span><span class=\"token punctuation\">,</span>\r\n Sentence<span class=\"token punctuation\">(</span><span class=\"token string\">\"In this course we will learn how to perform NLP with TextBlob.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\nsentence <span class=\"token operator\">=</span> sentences<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>sentence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sentence<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sentence\r\n\r\n<span class=\"token punctuation\">(</span>textblob<span class=\"token punctuation\">.</span>blob<span class=\"token punctuation\">.</span>Sentence<span class=\"token punctuation\">,</span>\r\n <span class=\"token number\">91</span><span class=\"token punctuation\">,</span>\r\n Sentence<span class=\"token punctuation\">(</span><span class=\"token string\">\"TextBlob is a Phython package that's built on top of the famous Python package called NLTK.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>      \r\n\r\nsentence<span class=\"token punctuation\">.</span>detect_language<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 'en'</span>\r\n\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>sentence<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sentence<span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> sentence<span class=\"token punctuation\">.</span>string\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span>\r\n <span class=\"token number\">91</span><span class=\"token punctuation\">,</span>\r\n <span class=\"token string\">\"TextBlob is a Phython package that's built on top of the famous Python package called NLTK.\"</span><span class=\"token punctuation\">)</span>\r\n\r\nsentence<span class=\"token punctuation\">.</span>tokens\r\n\r\n<span class=\"token comment\"># WordList(['TextBlob', 'is', 'a', 'Phython', 'package', 'that', \"'s\", 'built', 'on', 'top', 'of', 'the', 'famous', 'Python', 'package', 'called', 'NLTK', '.'])</span>\r\n\r\nsentence<span class=\"token punctuation\">.</span>translate\r\n\r\n<span class=\"token operator\">&lt;</span>bound method BaseBlob<span class=\"token punctuation\">.</span>translate of Sentence<span class=\"token punctuation\">(</span><span class=\"token string\">\"TextBlob is a Phython package that's built on top of the famous Python package called NLTK.\"</span><span class=\"token punctuation\">)</span><span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"custom-tokenize\" style=\"position:relative;\">Custom Tokenize<a href=\"#custom-tokenize\" aria-label=\"custom tokenize permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Custom Tokenize</span>\r\n\r\n<span class=\"token keyword\">from</span> nltk<span class=\"token punctuation\">.</span>tokenize <span class=\"token keyword\">import</span> WhitespaceTokenizer\r\ntokenizer <span class=\"token operator\">=</span> WhitespaceTokenizer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\ntext_2 <span class=\"token operator\">=</span> <span class=\"token string\">\"test test\\ntest\\ttest\"</span>\r\n\r\nblob_2 <span class=\"token operator\">=</span> TextBlob<span class=\"token punctuation\">(</span>text_2<span class=\"token punctuation\">,</span> tokenizer <span class=\"token operator\">=</span> tokenizer<span class=\"token punctuation\">)</span>\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>blob_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>blob_2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> blob_2\r\n\r\n<span class=\"token comment\"># (textblob.blob.TextBlob,</span>\r\n<span class=\"token comment\">#  19,</span>\r\n<span class=\"token comment\">#  TextBlob(\"test test</span>\r\n<span class=\"token comment\">#  test\ttest\"))</span>\r\n\r\nblob_2<span class=\"token punctuation\">.</span>tokens\r\n\r\n<span class=\"token comment\"># WordList(['test', 'test', 'test', 'test'])</span>\r\n\r\nblob_3 <span class=\"token operator\">=</span> TextBlob<span class=\"token punctuation\">(</span>text_2<span class=\"token punctuation\">)</span>\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>blob_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>blob_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> blob_3\r\n\r\n<span class=\"token comment\"># (textblob.blob.TextBlob,</span>\r\n<span class=\"token comment\">#  19,</span>\r\n<span class=\"token comment\">#  TextBlob(\"test test</span>\r\n<span class=\"token comment\">#  test\ttest\"))</span>\r\n\r\nblob_3<span class=\"token punctuation\">.</span>tokens\r\n\r\n<span class=\"token comment\"># WordList(['test', 'test', 'test', 'test'])  </span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h4 id=\"pos-tagging\" style=\"position:relative;\">POS Tagging<a href=\"#pos-tagging\" aria-label=\"pos tagging permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># Part-Of_Speech Tagging</span>\r\n\r\nblob_3 <span class=\"token operator\">=</span> TextBlob<span class=\"token punctuation\">(</span><span class=\"token string\">\"I ran a race in Ottawa\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>blob_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>blob_3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> blob_3\r\n\r\n<span class=\"token punctuation\">(</span>textblob<span class=\"token punctuation\">.</span>blob<span class=\"token punctuation\">.</span>TextBlob<span class=\"token punctuation\">,</span> <span class=\"token number\">22</span><span class=\"token punctuation\">,</span> TextBlob<span class=\"token punctuation\">(</span><span class=\"token string\">\"I ran a race in Ottawa\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\nblob_3<span class=\"token punctuation\">.</span>tokens\r\n\r\n<span class=\"token comment\"># WordList(['I', 'ran', 'a', 'race', 'in', 'Ottawa'])</span>\r\n\r\n\r\n<span class=\"token keyword\">import</span> nltk\r\nnltk<span class=\"token punctuation\">.</span>download<span class=\"token punctuation\">(</span><span class=\"token string\">\"averaged_perceptron_tagger\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">[</span>nltk_data<span class=\"token punctuation\">]</span> Downloading package averaged_perceptron_tagger to\r\n<span class=\"token punctuation\">[</span>nltk_data<span class=\"token punctuation\">]</span>     C<span class=\"token punctuation\">:</span>\\Users\\Choi\\AppData\\Roaming\\nltk_data<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<span class=\"token punctuation\">[</span>nltk_data<span class=\"token punctuation\">]</span>   Package averaged_perceptron_tagger <span class=\"token keyword\">is</span> already up<span class=\"token operator\">-</span>to<span class=\"token operator\">-</span>\r\n<span class=\"token punctuation\">[</span>nltk_data<span class=\"token punctuation\">]</span>       date!\r\n<span class=\"token boolean\">True</span>\r\n\r\npos <span class=\"token operator\">=</span> blob_3<span class=\"token punctuation\">.</span>tags\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> pos\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'NN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'NN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'NN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'test'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'NN'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\nfirst <span class=\"token operator\">=</span> pos<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> first\r\n\r\n<span class=\"token punctuation\">(</span><span class=\"token builtin\">tuple</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'I'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'PRP'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>first<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> first<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token punctuation\">(</span>textblob<span class=\"token punctuation\">.</span>blob<span class=\"token punctuation\">.</span>Word<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'I'</span><span class=\"token punctuation\">)</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>quiz</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 도전 문제</span>\r\n<span class=\"token comment\"># 사용자에게 입력 (Americans live in the USA)을 받고, proper noun 의 리스트를 출력하는 프로그램</span>\r\n<span class=\"token comment\"># POS를 이용</span>\r\n<span class=\"token comment\"># singular proper noun tag : NNP</span>\r\n<span class=\"token comment\"># plural proper noun tag : NNPS</span>\r\n\r\n<span class=\"token comment\"># 입력 : Americans live in the USA</span>\r\n<span class=\"token comment\"># 출력 : ['Americans','USA']</span>\r\n\r\n<span class=\"token comment\"># 내 답안지</span>\r\ndata <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nblob_4 <span class=\"token operator\">=</span> TextBlob<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span>\r\npos2 <span class=\"token operator\">=</span> blob_4<span class=\"token punctuation\">.</span>tags\r\n\r\na <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">in</span> pos2<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">if</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'NNP'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'NNPS'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        a<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>v<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\">###########################################</span>\r\n<span class=\"token comment\"># 정답</span>\r\n\r\nuser_input <span class=\"token operator\">=</span> <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\nuser_blob <span class=\"token operator\">=</span> TextBlob<span class=\"token punctuation\">(</span>user_input<span class=\"token punctuation\">)</span>\r\n\r\nresult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\ntags <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"NNP\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"NNPS\"</span><span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token keyword\">for</span> pos_tuple <span class=\"token keyword\">in</span> user_blob<span class=\"token punctuation\">.</span>tags<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">if</span> pos_tuple<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">in</span> tags<span class=\"token punctuation\">:</span>\r\n        result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>pos_tuple<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>string<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<hr>\n<h4 id=\"단어-유사도\" style=\"position:relative;\">단어 유사도<a href=\"#%EB%8B%A8%EC%96%B4-%EC%9C%A0%EC%82%AC%EB%8F%84\" aria-label=\"단어 유사도 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ul>\n<li>study_wordnet.ipynb</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> nltk\r\nnltk<span class=\"token punctuation\">.</span>download<span class=\"token punctuation\">(</span><span class=\"token string\">\"wordnet\"</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">[</span>nltk_data<span class=\"token punctuation\">]</span> Downloading package wordnet to\r\n<span class=\"token punctuation\">[</span>nltk_data<span class=\"token punctuation\">]</span>     C<span class=\"token punctuation\">:</span>\\Users\\Choi\\AppData\\Roaming\\nltk_data<span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span>\r\n<span class=\"token punctuation\">[</span>nltk_data<span class=\"token punctuation\">]</span>   Package wordnet <span class=\"token keyword\">is</span> already up<span class=\"token operator\">-</span>to<span class=\"token operator\">-</span>date!\r\n<span class=\"token boolean\">True</span>\r\n\r\n<span class=\"token keyword\">from</span> textblob <span class=\"token keyword\">import</span> Word\r\nword <span class=\"token operator\">=</span> Word<span class=\"token punctuation\">(</span><span class=\"token string\">\"defend\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>word<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> word\r\n\r\n<span class=\"token punctuation\">(</span>textblob<span class=\"token punctuation\">.</span>blob<span class=\"token punctuation\">.</span>Word<span class=\"token punctuation\">,</span> <span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'defend'</span><span class=\"token punctuation\">)</span>\r\n\r\nsynsets <span class=\"token operator\">=</span> word<span class=\"token punctuation\">.</span>get_synsets<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 단어 유사도</span>\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>synsets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>synsets<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> synsets\r\n\r\n<span class=\"token comment\"># (list,</span>\r\n<span class=\"token comment\">#  7,</span>\r\n<span class=\"token comment\">#  [Synset('defend.v.01'),</span>\r\n<span class=\"token comment\">#   Synset('defend.v.02'),</span>\r\n<span class=\"token comment\">#   Synset('defend.v.03'),</span>\r\n<span class=\"token comment\">#   Synset('fight.v.02'),</span>\r\n<span class=\"token comment\">#   Synset('champion.v.01'),</span>\r\n<span class=\"token comment\">#   Synset('defend.v.06'),</span>\r\n  <span class=\"token comment\"># Synset('maintain.v.08')])</span>\r\n\r\nfirst_syn <span class=\"token operator\">=</span> synsets<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>first_syn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> first_syn<span class=\"token punctuation\">,</span> first_syn<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> first_syn<span class=\"token punctuation\">.</span>lemmas<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># (nltk.corpus.reader.wordnet.Synset,</span>\r\n<span class=\"token comment\">#  Synset('defend.v.01'),</span>\r\n<span class=\"token comment\">#  'defend.v.01',</span>\r\n<span class=\"token comment\">#  [Lemma('defend.v.01.defend'),</span>\r\n<span class=\"token comment\">#   Lemma('defend.v.01.support'),</span>\r\n<span class=\"token comment\">#   Lemma('defend.v.01.fend_for')])</span>\r\n\r\nlemmas <span class=\"token operator\">=</span> first_syn<span class=\"token punctuation\">.</span>lemmas<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">for</span> lem <span class=\"token keyword\">in</span> lemmas<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>lem<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># defend</span>\r\n<span class=\"token comment\"># support</span>\r\n<span class=\"token comment\"># fend_for</span>\r\n\r\nthird_syn <span class=\"token operator\">=</span> synsets<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span>\r\nlemmas <span class=\"token operator\">=</span> third_syn<span class=\"token punctuation\">.</span>lemmas<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">for</span> lem <span class=\"token keyword\">in</span> lemmas<span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>lem<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># fight</span>\r\n<span class=\"token comment\"># oppose</span>\r\n<span class=\"token comment\"># fight_back</span>\r\n<span class=\"token comment\"># fight_down</span>\r\n<span class=\"token comment\"># defend</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>특정 단어의 유사한 단어를 찾아보자</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">string <span class=\"token operator\">=</span> <span class=\"token string\">\"terrific\"</span>\r\nresult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\n\r\nword <span class=\"token operator\">=</span> Word<span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">for</span> syn <span class=\"token keyword\">in</span> word<span class=\"token punctuation\">.</span>get_synsets<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">for</span> lem <span class=\"token keyword\">in</span> syn<span class=\"token punctuation\">.</span>lemmas<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">if</span> lem<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> string<span class=\"token punctuation\">:</span> <span class=\"token comment\"># string과 유사한 단어를 찾는 거라 제외</span>\r\n            result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>lem<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># ['fantastic', 'grand', 'howling', 'marvelous', 'marvellous', 'rattling', 'tremendous', 'wonderful', 'wondrous', 'terrifying']</span>\r\n\r\nstring <span class=\"token operator\">=</span> <span class=\"token string\">\"stone\"</span>\r\nresult <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\r\n\r\nword <span class=\"token operator\">=</span> Word<span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">for</span> syn <span class=\"token keyword\">in</span> word<span class=\"token punctuation\">.</span>get_synsets<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">for</span> lem <span class=\"token keyword\">in</span> syn<span class=\"token punctuation\">.</span>lemmas<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n        <span class=\"token keyword\">if</span> lem<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> string<span class=\"token punctuation\">:</span>\r\n            result<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>lem<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># ['rock', 'rock', 'gem', 'gemstone', 'pit', 'endocarp', 'Stone', 'Harlan_Stone', 'Harlan_F._Stone', 'Harlan_Fisk_Stone', 'Stone', 'Oliver_Stone', 'Stone', 'Lucy_Stone', 'Stone', 'I._F._Stone', 'Isidor_Feinstein_Stone', 'Stone', 'Harlan_Fiske_Stone', 'Stone', 'Edward_Durell_Stone', 'lapidate', 'pit']</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#6%EC%9D%BC%EC%B0%A8\">6일차</a></p>\n<ul>\n<li><a href=\"#%EC%95%9E%EC%9C%BC%EB%A1%9C%EC%9D%98-%EC%9D%BC%EC%A0%95\">앞으로의 일정</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#%ED%81%AC%EB%A1%A4%EB%A7%81--db-%EC%A0%80%EC%9E%A5\">크롤링 (+ DB 저장)</a></p>\n<ul>\n<li><a href=\"#%EB%AC%B8%EC%9E%A5-%EC%B2%98%EB%A6%AC\">문장 처리</a></li>\n<li><a href=\"#custom-tokenize\">Custom Tokenize</a></li>\n<li><a href=\"#pos-tagging\">POS Tagging</a></li>\n<li><a href=\"#%EB%8B%A8%EC%96%B4-%EC%9C%A0%EC%82%AC%EB%8F%84\">단어 유사도</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"AI 이노베이션 스퀘어 3기 언어반 6일차 후기"}}},"pageContext":{"slug":"/ai-이노베이션-스퀘어-언어-6일차/"}},"staticQueryHashes":["3159585216"]}