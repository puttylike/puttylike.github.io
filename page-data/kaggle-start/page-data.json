{"componentChunkName":"component---src-templates-blog-post-js","path":"/kaggle-start/","result":{"data":{"markdownRemark":{"html":"<p>예상은 했다만, 갑작스러운 빅분사 시험 연기로 시간이 잠시 붕 떠버렸다. 도서관을 돌며 여러 책을 빌렸다. 그 중 하나는 kaggle 예제를 다루는 책이다.<br>\n사실, 대회 참여를 해보긴 해야한다는 생각은 해왔다. 3년 전에 빅콘테스트한 게 처음이자 마지막이니까.  </p>\n<p>현재 dacon에 태양열 예측하는 건 시게열인데 RNN을 아직 안 해서 애매하고... <del>교수님 책 읽고 고급 과정 들어가야지 ㅠㅠ 유튜브도 좀 봐야겠다 이제는</del>\nAI 이노베이션 기본 과정에서 배웠던 CNN이나 DNN을 활용할 수 있는 예제를 해보자 싶어서, 일단 이 책을 먼저 읽어 보게 됐다.  </p>\n<p>이게 끝나면 포폴을 하나 만들 수 있지 않을까...? 부스트코스에 있는 플젝 수준은 되어야할 느낌...</p>\n<p><strong>* 이 게시글은 미완성으로 챕터가 끝날 때마다 수정될 수 있습니다.</strong></p>\n<hr>\n<h3 id=\"1-santander-product-recommendation-경진대회-연습\" style=\"position:relative;\">1. Santander Product Recommendation 경진대회 연습<a href=\"#1-santander-product-recommendation-%EA%B2%BD%EC%A7%84%EB%8C%80%ED%9A%8C-%EC%97%B0%EC%8A%B5\" aria-label=\"1 santander product recommendation 경진대회 연습 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>cf. <a href=\"https://www.kaggle.com/c/santander-product-recommendation\">https://www.kaggle.com/c/santander-product-recommendation</a>  </p>\n<p>Kaggle에서 과거에 열렸던 대회를 탐색할 수 있다.  </p>\n<h4 id=\"1-kaggle-회원-가입\" style=\"position:relative;\">(1) Kaggle 회원 가입<a href=\"#1-kaggle-%ED%9A%8C%EC%9B%90-%EA%B0%80%EC%9E%85\" aria-label=\"1 kaggle 회원 가입 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>github이랑 연동되면 좋을텐데 그런 게 없어 보여 그냥 가입했다.<br>\nCompetition 을 Search 하면 예전 대회도 나온다.  </p>\n<p>__</p>\n<h4 id=\"2-준비-작업-with-colab\" style=\"position:relative;\">(2) 준비 작업 with Colab<a href=\"#2-%EC%A4%80%EB%B9%84-%EC%9E%91%EC%97%85-with-colab\" aria-label=\"2 준비 작업 with colab permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>우선은, 약관 Rules > I understand and Accept 클릭을 해야 한다.\n처음 agree한다면, 휴대폰 인증을 한 뒤에 다운로드가 가능하다.</p>\n<p><strong>\"You have accepted the rules for this competition. Good luck!\"</strong></p>\n<p>google colab에서 진행했다. 참고로 Requirement already satisfied: 라고 나오니 이건 안 해도 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">!pip install kaggle</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>profile > account Tab에서 Create New API Token 를 선택하면 kaggle.json 파일을 다운로드 받게 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> google<span class=\"token punctuation\">.</span>colab <span class=\"token keyword\">import</span> files\nfiles<span class=\"token punctuation\">.</span>upload<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>kaggle.json 파일을 선택해 구글 드라이브에 업로드하고,</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">kaggle.json\nkaggle.json(application/json) - 63 bytes, last modified: 2020. 12. 19. - 100% done\nSaving kaggle.json to kaggle.json\n{&#39;kaggle.json&#39;: b&#39;{&quot;username&quot;:&quot;pizazzy&quot;,&quot;key&quot;:&quot;b9bf486d8680739c305f6bf244e82010&quot;}&#39;}</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>해당 파일 업로드 여부를 확인한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"token function\">ls</span> -1ha kaggle.json</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">!mkdir <span class=\"token operator\">-</span>p <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>kaggle\n!cp kaggle<span class=\"token punctuation\">.</span>json <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>kaggle<span class=\"token operator\">/</span>\n!chmod <span class=\"token number\">600</span> <span class=\"token operator\">~</span><span class=\"token operator\">/</span><span class=\"token punctuation\">.</span>kaggle<span class=\"token operator\">/</span>kaggle<span class=\"token punctuation\">.</span>json\n!kaggle competitions <span class=\"token builtin\">list</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span></span></pre></div>\n<p>데이터를 다운로드 받는다. (sample<em>submission.csv.zip / test</em>ver2.csv.zip / train_ver2.csv.zip)</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-shell line-numbers\"><code class=\"language-shell\"><span class=\"token operator\">!</span>kaggle competitions download -c santander-product-recommendation\n<span class=\"token operator\">!</span>unzip -q test_ver2.csv.zip -d <span class=\"token builtin class-name\">.</span>\n<span class=\"token operator\">!</span>unzip -q train_ver2.csv.zip -d <span class=\"token builtin class-name\">.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<hr>\n<h4 id=\"3-eda-with-pandas\" style=\"position:relative;\">(3) EDA with Pandas<a href=\"#3-eda-with-pandas\" aria-label=\"3 eda with pandas permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>EDA ~ 전처리는 DS에서 가장 많이 걸리는 작업이다. <del>통계 지식이 조금 부족해서 EDA 할 때마다 걱정이다.</del>  </p>\n<p>pandas로 train data를 불러온다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n\ntrn <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">\"train_ver2.csv\"</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>trn<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span> <span class=\"token comment\"># (13647309, 48)</span>\ntrn<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 5줄 전체 보기</span>\n\n<span class=\"token comment\"># 모든 변수의 5줄 보기</span>\n<span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> trn<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'{}\\n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>trn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> 변수 파악, data type에 따른 전처리 방향 생각 필요  </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">trn<span class=\"token punctuation\">.</span>info<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 요약</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<ul>\n<li>\n<p>변수 살펴보기.  </p>\n<ul>\n<li>수치형 : count / mean / std / min / 25% / 50% / 75% / max  </li>\n<li>범주형 : count / unique / top / freq  </li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 수치형</span>\nnum_cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>col <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> trn<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> trn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dtype <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'int64'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'float64'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\ntrn<span class=\"token punctuation\">[</span>num_cols<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>describe<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 수치형 변수에 대한 기초 통계를 보여준다.</span>\n\n<span class=\"token comment\"># 범주형</span>\ncat_cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>col <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> trn<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">24</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">if</span> trn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>dtype <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'O'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token comment\"># object</span>\ntrn<span class=\"token punctuation\">[</span>cat_cols<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>describe<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># top : 최빈값 => 이에 대한 빈도수 : freq</span>\n\n<span class=\"token comment\"># 범주형 변수 고유값</span>\n<span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> cat_cols<span class=\"token punctuation\">:</span>\n  uniq <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span>trn<span class=\"token punctuation\">[</span>col<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span> <span class=\"token operator\">*</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'# col {}, n_uniq {}. uniq {}'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>col<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>uniq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> uniq<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># col indfall, n_uniq 3. uniq ['N' 'S' 'nan']  </span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<h5 id=\"-데이터변수-분석노트-를-만들자\" style=\"position:relative;\">* 데이터(변수) 분석노트 를 만들자!<a href=\"#-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B3%80%EC%88%98-%EB%B6%84%EC%84%9D%EB%85%B8%ED%8A%B8-%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%9E%90\" aria-label=\" 데이터변수 분석노트 를 만들자 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>(변수명 / 내용 / 데이터 타입 / 특징 / 변수 아이디어(<strong>데이터 정제 방식</strong>))  </p>\n<h4 id=\"4-시각화-with-matplotlib\" style=\"position:relative;\">(4) 시각화 with Matplotlib<a href=\"#4-%EC%8B%9C%EA%B0%81%ED%99%94-with-matplotlib\" aria-label=\"4 시각화 with matplotlib permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>seaborn은 처음인데, matplot보다 좀더 colorful한 느낌이 든다.<br>\n변수 시각화하여 알게된 사실을, 분석노트에 추가로 기입하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> matplotlib\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\n<span class=\"token operator\">%</span>matplotlib inline <span class=\"token comment\"># jupyter notebook inline code</span>\n<span class=\"token keyword\">import</span> seaborn <span class=\"token keyword\">as</span> sns\n\nskip_cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ncodpers'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'renta'</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> trn<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">:</span>\n  <span class=\"token keyword\">if</span> col <span class=\"token keyword\">in</span> skip_cols<span class=\"token punctuation\">:</span> <span class=\"token comment\"># 출력 너무 오래걸려 skip</span>\n    <span class=\"token keyword\">continue</span>\n\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'-'</span> <span class=\"token operator\">*</span> <span class=\"token number\">50</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># 가독성</span>\n  <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'col : '</span><span class=\"token punctuation\">,</span> col<span class=\"token punctuation\">)</span>\n\n  f<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># size setting</span>\n  sns<span class=\"token punctuation\">.</span>countplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>col<span class=\"token punctuation\">,</span> data<span class=\"token operator\">=</span>trn<span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># histogram</span>\n  plt<span class=\"token punctuation\">.</span>show<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>시계열 데이터는 시간 변화에 따른 시각화가 필요하다.<br>\nex. 월별 제품 변수의 합을 누적 막대 그래프 형태로 시각화  </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">months <span class=\"token operator\">=</span> trn<span class=\"token punctuation\">[</span><span class=\"token string\">'fecha_dato'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>unique<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nlabel_cols <span class=\"token operator\">=</span> trn<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\nlabel_over_time <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>label_cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  label_sum <span class=\"token operator\">=</span> trn<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'fecha_dato'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span>label_cols<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>agg<span class=\"token punctuation\">(</span><span class=\"token string\">'sum'</span><span class=\"token punctuation\">)</span>\n  label_over_time<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>label_sum<span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\nlabel_sum_over_time <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>label_cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  label_sum_over_time<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>label_over_time<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>\n  <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\ncolor_list <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'#F5B7B1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'#D2B4DE'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'#AED6F1'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'#A2D9CE'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'#ABEBC6'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'#F9E79F'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'#F5CBA7'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'#CCD1D1'</span><span class=\"token punctuation\">]</span>\n\nf<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>label_cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  sns<span class=\"token punctuation\">.</span>barplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>months<span class=\"token punctuation\">,</span>y<span class=\"token operator\">=</span>label_sum_over_time<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>color<span class=\"token operator\">=</span>color_list<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>alpha<span class=\"token operator\">=</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">)</span>\n\nplt<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>plt<span class=\"token punctuation\">.</span>Rectangle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>fc<span class=\"token operator\">=</span>color_list<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> edgecolor <span class=\"token operator\">=</span><span class=\"token string\">'none'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>label_cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> label_cols<span class=\"token punctuation\">,</span> loc<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> ncol<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> prop<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'size'</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>상대값으로 시각화하는 게 분석에 편하다만, 했음에도 이 예제에서는 알아낼 게 없었다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\">#상대값</span>\nlabel_sum_percent <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>label_sum_over_time <span class=\"token operator\">/</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">*</span>np<span class=\"token punctuation\">.</span>asarray<span class=\"token punctuation\">(</span>label_sum_over_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">100</span>\n\nf<span class=\"token punctuation\">,</span> ax <span class=\"token operator\">=</span> plt<span class=\"token punctuation\">.</span>subplots<span class=\"token punctuation\">(</span>figsize<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">,</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>label_cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  sns<span class=\"token punctuation\">.</span>barplot<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span>months<span class=\"token punctuation\">,</span> y<span class=\"token operator\">=</span>label_sum_percent<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> color<span class=\"token operator\">=</span>color_list<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> alpha<span class=\"token operator\">=</span><span class=\"token number\">0.7</span><span class=\"token punctuation\">)</span>\n\nplt<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>plt<span class=\"token punctuation\">.</span>Rectangle<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> fc<span class=\"token operator\">=</span>color_list<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>edgecolor <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>label_cols<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> label_cols<span class=\"token punctuation\">,</span> loc<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> ncol<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> prop<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'size'</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>실제로 예측해야 하는 변수에 대한 특징을 찾는 게 데이터 분석에 도움이 된다.  </p>\n<p>위처럼 월별 추이가 아닌, 신규 구매 추이를 보기 위해 신규 구매 여부를 추출해 보자.  </p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 신규 구매 데이터 생성</span>\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\n<span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\n\ntrn <span class=\"token operator\">=</span>  pd<span class=\"token punctuation\">.</span>read_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'train_ver2.csv'</span><span class=\"token punctuation\">)</span>\nprods <span class=\"token operator\">=</span> trn<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">[</span><span class=\"token number\">24</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>tolist<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">def</span> <span class=\"token function\">date_to_int</span><span class=\"token punctuation\">(</span>str_date<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\n  Y<span class=\"token punctuation\">,</span> M<span class=\"token punctuation\">,</span> D <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> a <span class=\"token keyword\">in</span> str_date<span class=\"token punctuation\">.</span>strip<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">\"-\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n  int_date <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>Y<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">2015</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">12</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> int_date\n\ntrn<span class=\"token punctuation\">[</span><span class=\"token string\">'int_date'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> trn<span class=\"token punctuation\">[</span><span class=\"token string\">'fecha_dato'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>date_to_int<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>int8<span class=\"token punctuation\">)</span>\n\ntrn_lag <span class=\"token operator\">=</span> trn<span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ntrn_lag<span class=\"token punctuation\">[</span><span class=\"token string\">'int_date'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+=</span> <span class=\"token number\">1</span>\ntrn_lag<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>col <span class=\"token operator\">+</span> <span class=\"token string\">'_prev'</span> <span class=\"token keyword\">if</span> col <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'ncodpers'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'int_date'</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">else</span> col <span class=\"token keyword\">for</span> col <span class=\"token keyword\">in</span> trn<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">]</span>\n\ndf_trn <span class=\"token operator\">=</span> trn<span class=\"token punctuation\">.</span>merge<span class=\"token punctuation\">(</span>trn_lag<span class=\"token punctuation\">,</span> on<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">'ncodpers'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'int_date'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>how<span class=\"token operator\">=</span><span class=\"token string\">'left'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">del</span> trn<span class=\"token punctuation\">,</span> trn_lag\n\n<span class=\"token keyword\">for</span> pord <span class=\"token keyword\">in</span> prods<span class=\"token punctuation\">:</span>\n  prev <span class=\"token operator\">=</span> prod <span class=\"token operator\">+</span> <span class=\"token string\">'_prev'</span>\n  df_trn<span class=\"token punctuation\">[</span>prev<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>fillna<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">for</span> pord <span class=\"token keyword\">in</span> prods<span class=\"token punctuation\">:</span>\n  padd <span class=\"token operator\">=</span> prod <span class=\"token operator\">+</span> <span class=\"token string\">'_add'</span>\n  prev <span class=\"token operator\">=</span> prod <span class=\"token operator\">+</span> <span class=\"token string\">'_prev'</span>\n  df_trn<span class=\"token punctuation\">[</span>padd<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>df_Trn<span class=\"token punctuation\">[</span>prod<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>df_trn<span class=\"token punctuation\">[</span>prev<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>astype<span class=\"token punctuation\">(</span>np<span class=\"token punctuation\">.</span>int8<span class=\"token punctuation\">)</span>\n\nadd_cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>prod <span class=\"token operator\">+</span> <span class=\"token string\">'_add'</span> <span class=\"token keyword\">for</span> prod <span class=\"token keyword\">in</span> pords<span class=\"token punctuation\">]</span>\nlabels <span class=\"token operator\">=</span> df_trn<span class=\"token punctuation\">[</span>add_cols<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>copy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\nlabels<span class=\"token punctuation\">.</span>columns <span class=\"token operator\">=</span> prods\nlabels<span class=\"token punctuation\">.</span>to_csv<span class=\"token punctuation\">(</span><span class=\"token string\">'labels.csv'</span><span class=\"token punctuation\">,</span> index<span class=\"token operator\">=</span>false<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"/kaggle-start/#1-santander-product-recommendation-%EA%B2%BD%EC%A7%84%EB%8C%80%ED%9A%8C-%EC%97%B0%EC%8A%B5\">1. Santander Product Recommendation 경진대회 연습</a></p>\n<ul>\n<li><a href=\"/kaggle-start/#1-kaggle-%ED%9A%8C%EC%9B%90-%EA%B0%80%EC%9E%85\">(1) Kaggle 회원 가입</a></li>\n<li><a href=\"/kaggle-start/#2-%EC%A4%80%EB%B9%84-%EC%9E%91%EC%97%85-with-colab\">(2) 준비 작업 with Colab</a></li>\n<li>\n<p><a href=\"/kaggle-start/#3-eda-with-pandas\">(3) EDA with Pandas</a></p>\n<ul>\n<li><a href=\"/kaggle-start/#-%EB%8D%B0%EC%9D%B4%ED%84%B0%EB%B3%80%EC%88%98-%EB%B6%84%EC%84%9D%EB%85%B8%ED%8A%B8-%EB%A5%BC-%EB%A7%8C%EB%93%A4%EC%9E%90\">* 데이터(변수) 분석노트 를 만들자!</a></li>\n</ul>\n</li>\n<li><a href=\"/kaggle-start/#4-%EC%8B%9C%EA%B0%81%ED%99%94-with-matplotlib\">(4) 시각화 with Matplotlib</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"Kaggle 입문 시작"}}},"pageContext":{"slug":"/kaggle-start/"}},"staticQueryHashes":["3159585216"]}