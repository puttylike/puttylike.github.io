{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/ai-이노베이션-스퀘어-시각-심화-6일차/",
    "result": {"data":{"markdownRemark":{"html":"<p>!!!</p>\n<hr>\n<h3 id=\"6일차\" style=\"position:relative;\">6일차<a href=\"#6%EC%9D%BC%EC%B0%A8\" aria-label=\"6일차 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<h4 id=\"kaggle-diabetes-이어서\" style=\"position:relative;\">kaggle diabetes 이어서<a href=\"#kaggle-diabetes-%EC%9D%B4%EC%96%B4%EC%84%9C\" aria-label=\"kaggle diabetes 이어서 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>구분자 확인하고 pandas로 읽어야 한다.<br>\n데이터 편향을 파악해야 한다.</p>\n<h5 id=\"데이터-표준화\" style=\"position:relative;\">데이터 표준화<a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%91%9C%EC%A4%80%ED%99%94\" aria-label=\"데이터 표준화 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>정답에는 단위가 없다.<br>\n정답을 만들어 내는 입력 데이터들의 단위가 다 다르다.<br>\n화폐처럼 통일 시켜줄 방법은 없으니 표준화가 필요하다.</p>\n<p>mnist 이미지처럼 단위가 같으면 정규화,<br>\ndiabetes txt처럼 단위가 다르면 표준화를 해야 한다.<br>\n정답을 제외하고.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 데이터 표준화</span>\r\n\r\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> StandardScaler\r\n\r\nscale_cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Pregnancies'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Glucose'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'BloodPressure'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'SkinThickness'</span><span class=\"token punctuation\">,</span>\r\n              <span class=\"token string\">'Insulin'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'BMI'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'DiabetesPedigreeFunction'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Age'</span> <span class=\"token punctuation\">]</span>\r\n\r\nscaler <span class=\"token operator\">=</span> StandardScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\ndf_scaled <span class=\"token operator\">=</span> scaler<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>df<span class=\"token punctuation\">[</span>scale_cols<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>df_scaled<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># numpy</span>\r\n\r\ndf_scaled <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>df_scaled<span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span>scale_cols<span class=\"token punctuation\">)</span> <span class=\"token comment\"># pandas로</span>\r\n\r\ndf_scaled<span class=\"token punctuation\">[</span><span class=\"token string\">'Outcome'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">[</span><span class=\"token string\">'Outcome'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values  <span class=\"token comment\"># 원본 DataFrame 보존</span>\r\ndf_scaled<span class=\"token punctuation\">.</span>describe<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># &lt;class 'numpy.ndarray'></span>\r\n<span class=\"token comment\"># Pregnancies\tGlucose\tBloodPressure\tSkinThickness\tInsulin\tBMI\tDiabetesPedigreeFunction\tAge\tOutcome</span>\r\n<span class=\"token comment\"># count\t7.680000e+02\t7.680000e+02\t7.680000e+02\t7.680000e+02\t7.680000e+02\t7.680000e+02\t7.680000e+02\t7.680000e+02\t768.000000</span>\r\n<span class=\"token comment\"># mean\t2.544261e-17\t-3.301757e-16\t6.966722e-16\t6.866252e-16\t-2.352033e-16\t3.090699e-16\t2.398978e-16\t1.857600e-16\t0.348958</span>\r\n<span class=\"token comment\"># std\t1.000652e+00\t1.000652e+00\t1.000652e+00\t1.000652e+00\t1.000652e+00\t1.000652e+00\t1.000652e+00\t1.000652e+00\t0.476951</span>\r\n<span class=\"token comment\"># min\t-1.141852e+00\t-2.554131e+00\t-4.004245e+00\t-2.521670e+00\t-1.665945e+00\t-2.075119e+00\t-1.189553e+00\t-1.041549e+00\t0.000000</span>\r\n<span class=\"token comment\"># 25%\t-8.448851e-01\t-7.212214e-01\t-6.953060e-01\t-4.727737e-01\t-4.007289e-01\t-7.215397e-01\t-6.889685e-01\t-7.862862e-01\t0.000000</span>\r\n<span class=\"token comment\"># 50%\t-2.509521e-01\t-1.540881e-01\t-1.675912e-02\t8.087936e-16\t-3.345079e-16\t-8.363615e-03\t-3.001282e-01\t-3.608474e-01\t0.000000</span>\r\n<span class=\"token comment\"># 75%\t6.399473e-01\t6.103090e-01\t6.282695e-01\t3.240194e-01\t-3.345079e-16\t6.029301e-01\t4.662269e-01\t6.602056e-01\t1.000000</span>\r\n<span class=\"token comment\"># max\t3.906578e+00\t2.541850e+00\t4.102655e+00\t7.950467e+00\t8.126238e+00\t5.042087e+00\t5.883565e+00\t4.063716e+00\t1.000000</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>Epoch 200/200\r\n21/21 [==============================] - 0s 4ms/step - loss: 0.4098 - accuracy: 0.8025 - val_loss: 0.5373 - val_accuracy: 0.7304\r\nelapsed time =>  0:00:14.356679</p>\n<p>어제보다 정확도가 조금 더 좋아졌다.</p>\n<hr>\n<h4 id=\"wine-project\" style=\"position:relative;\">Wine Project<a href=\"#wine-project\" aria-label=\"wine project permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p><a href=\"https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/\">https://archive.ics.uci.edu/ml/machine-learning-databases/wine-quality/</a></p>\n<p>UCI Machine Learning Repository의 wine quality data set 사이트에서,<br>\nwinequality-red.csv, winequality-white.csv 파일 다운로드</p>\n<h5 id=\"예제-1\" style=\"position:relative;\">예제 1<a href=\"#%EC%98%88%EC%A0%9C-1\" aria-label=\"예제 1 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>와인 품질(wine quality)을 3~9 숫자 값으로 예측</p>\n<p>domain 지식이 없어 outlier가 없다고 가정하고, 표준화를 진행했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 데이터 표준화</span>\r\n\r\n<span class=\"token keyword\">from</span> sklearn<span class=\"token punctuation\">.</span>preprocessing <span class=\"token keyword\">import</span> StandardScaler\r\n\r\nscale_cols <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'fixed acidity'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'volatile acidity'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'citric acid'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'residual sugar'</span><span class=\"token punctuation\">,</span>\r\n       <span class=\"token string\">'chlorides'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'free sulfur dioxide'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'total sulfur dioxide'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'density'</span><span class=\"token punctuation\">,</span>\r\n       <span class=\"token string\">'pH'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sulphates'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'alcohol'</span><span class=\"token punctuation\">]</span>\r\n\r\nscaler <span class=\"token operator\">=</span> StandardScaler<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nwine_scaled_df <span class=\"token operator\">=</span> scaler<span class=\"token punctuation\">.</span>fit_transform<span class=\"token punctuation\">(</span>wine_df<span class=\"token punctuation\">[</span>scale_cols<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>wine_scaled_df<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\nwine_scaled_df <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>wine_scaled_df<span class=\"token punctuation\">,</span> columns<span class=\"token operator\">=</span>scale_cols<span class=\"token punctuation\">)</span>\r\n\r\nwine_scaled_df<span class=\"token punctuation\">[</span><span class=\"token string\">'quality'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> wine_df<span class=\"token punctuation\">[</span><span class=\"token string\">'quality'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>values  <span class=\"token comment\"># 원본 DataFrame 보존</span>\r\nwine_scaled_df<span class=\"token punctuation\">.</span>describe<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># &lt;class 'numpy.ndarray'></span>\r\n<span class=\"token comment\"># fixed acidity\tvolatile acidity\tcitric acid\tresidual sugar\tchlorides\tfree sulfur dioxide\ttotal sulfur dioxide\tdensity\tpH\tsulphates\talcohol\tquality</span>\r\n<span class=\"token comment\"># count\t6.497000e+03\t6.497000e+03\t6.497000e+03\t6.497000e+03\t6.497000e+03\t6.497000e+03\t6.497000e+03\t6.497000e+03\t6.497000e+03\t6.497000e+03\t6.497000e+03\t6497.000000</span>\r\n<span class=\"token comment\"># mean\t1.007471e-15\t1.002225e-15\t-1.753083e-16\t-1.693547e-15\t3.303499e-16\t1.009232e-15\t-9.658103e-16\t-4.708938e-15\t3.086803e-15\t3.102883e-16\t1.542248e-15\t5.818378</span>\r\n<span class=\"token comment\"># std\t1.000077e+00\t1.000077e+00\t1.000077e+00\t1.000077e+00\t1.000077e+00\t1.000077e+00\t1.000077e+00\t1.000077e+00\t1.000077e+00\t1.000077e+00\t1.000077e+00\t0.873255</span>\r\n<span class=\"token comment\"># min\t-2.634589e+00\t-1.577330e+00\t-2.192833e+00\t-1.018034e+00\t-1.342639e+00\t-1.663583e+00\t-1.941780e+00\t-2.530192e+00\t-3.100615e+00\t-2.091935e+00\t-2.089350e+00\t3.000000</span>\r\n<span class=\"token comment\"># 25%\t-6.289329e-01\t-6.661613e-01\t-4.723335e-01\t-7.657978e-01\t-5.147986e-01\t-7.620742e-01\t-6.855323e-01\t-7.859527e-01\t-6.748622e-01\t-6.805919e-01\t-8.316152e-01\t5.000000</span>\r\n<span class=\"token comment\"># 50%\t-1.660892e-01\t-3.016939e-01\t-5.941375e-02\t-5.135612e-01\t-2.578826e-01\t-8.594301e-02\t3.990667e-02\t6.448888e-02\t-5.287424e-02\t-1.429373e-01\t-1.608231e-01\t6.000000</span>\r\n<span class=\"token comment\"># 75%\t3.738951e-01\t3.664962e-01\t4.911459e-01\t5.584445e-01\t2.559494e-01\t5.901882e-01\t7.122647e-01\t7.648525e-01\t6.313125e-01\t4.619241e-01\t6.776670e-01\t6.000000</span>\r\n<span class=\"token comment\"># max\t6.699425e+00\t7.534354e+00\t9.231281e+00\t1.268682e+01\t1.584219e+01\t1.456357e+01\t5.737257e+00\t1.476879e+01\t4.923029e+00\t9.870879e+00\t3.696231e+00\t9.000000</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>pandas에서 numpy로 변환하기 전,<br>\n데이터 다양성을 위해 shuffle 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># data shuffle</span>\r\nwine_scaled_df <span class=\"token operator\">=</span> wine_scaled_df<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span>frac<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span>drop<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span>\r\nwine_scaled_df<span class=\"token punctuation\">.</span>head<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<hr>\n<h5 id=\"예제-2\" style=\"position:relative;\">예제 2<a href=\"#%EC%98%88%EC%A0%9C-2\" aria-label=\"예제 2 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>와인 타입(wine type)을 red, white 두가지 타입으로 예측</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 구분을 위해 type 열 추가</span>\r\n\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'before => '</span><span class=\"token punctuation\">,</span>red_scaled_df<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> white_scaled_df<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\r\n\r\nred_scaled_df<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'red'</span>\r\nwhite_scaled_df<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'white'</span>\r\n\r\n<span class=\"token comment\">#red_scaled_df.insert(0, column='type', value='red')</span>\r\n<span class=\"token comment\">#white_scaled_df.insert(0, column='type', value='white')</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'after => '</span><span class=\"token punctuation\">,</span>red_scaled_df<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> white_scaled_df<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># before =>  (1599, 12) (4898, 12)</span>\r\n<span class=\"token comment\"># after =>  (1599, 13) (4898, 13)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>필요한 열을 새로 추가한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># type 항목의 'red' = 0, white = 1 로 변경</span>\r\nwine_scaled_df<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> wine_scaled_df<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\nwine_scaled_df<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> wine_scaled_df<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'white'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<p>숫자형으로 변환 후 학습한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># feature column, label column 추출 후 DataFrame 생성</span>\r\nfeature_df <span class=\"token operator\">=</span> wine_scaled_df<span class=\"token punctuation\">[</span>wine_scaled_df<span class=\"token punctuation\">.</span>columns<span class=\"token punctuation\">.</span>difference<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\nlabel_df <span class=\"token operator\">=</span> wine_scaled_df<span class=\"token punctuation\">[</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token comment\"># 이렇게 할 수도 있다.</span>\r\n<span class=\"token comment\"># feature_df = wine_scaled_df[wine_scaled_df.columns.difference(['type','quality'])]</span>\r\n<span class=\"token comment\"># label_df = wine_scaled_df['type']</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>type은 quality에서 파생된 지라, 얘를 빼도 되고, 넣어도 된다.</p>\n<hr>\n<h5 id=\"예제-3\" style=\"position:relative;\">예제 3<a href=\"#%EC%98%88%EC%A0%9C-3\" aria-label=\"예제 3 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>와인 품질(wine quality)을 가상의 bad, good 두가지 타입으로 예측</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">quality_bins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span>   <span class=\"token comment\"># [3, 6.7) 1구간, [6.7, 10) 2구간</span>\r\nquality_label <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'bad'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'good'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 3부터 6.7 구간은 bad, 6.7부터 10구간은 good</span>\r\n\r\nwine_scaled_df<span class=\"token punctuation\">[</span><span class=\"token string\">'quality'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>wine_scaled_df<span class=\"token punctuation\">[</span><span class=\"token string\">'quality'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n                                   right<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> include_lowest<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\r\n                                   bins<span class=\"token operator\">=</span>quality_bins<span class=\"token punctuation\">,</span> labels<span class=\"token operator\">=</span>quality_label<span class=\"token punctuation\">,</span>ordered<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>quality 를 bad, good 으로 분하는데,<br>\n분류 기준은 quality.mean()이 5.8, quality.std() 0.88 정도이므로 6.7 을 기준으로 bad, good 등으로 나눴다.</p>\n<p>right=False, include_lowest=True\r\n3&#x3C;=x&#x3C;6.7<br>\n6.7&#x3C;=x&#x3C;10</p>\n<p>cf. right=False, include_lowest=True로 쓰거나,<br>\nright=True, include_lowest=False로 써야 에러가 안 난다. (구간 겹쳐서 error)</p>\n<p>그런데 right=True, include_lowest=False로 쓰면,<br>\n3&#x3C;x&#x3C;=6.7<br>\n6.7&#x3C;x&#x3C;=10<br>\n인데, 정답은 3~9이다. 이 경우,<br>\n<strong>3이 포함 안 되기 때문에, right=False, include_lowest=True로 썼다.</strong></p>\n<p>이렇게 쓰고 싶다면, bins를 바꿔야 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">quality_bins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6.7</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span>   <span class=\"token comment\"># [3, 6.7) 1구간, [6.7, 10) 2구간</span>\r\nquality_label <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'bad'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'good'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 3부터 6.7 구간은 bad, 6.7부터 10구간은 good</span>\r\n\r\nwine_scaled_df<span class=\"token punctuation\">[</span><span class=\"token string\">'quality'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>wine_scaled_df<span class=\"token punctuation\">[</span><span class=\"token string\">'quality'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n                                   right<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span> include_lowest<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span>\r\n                                   bins<span class=\"token operator\">=</span>quality_bins<span class=\"token punctuation\">,</span> labels<span class=\"token operator\">=</span>quality_label<span class=\"token punctuation\">,</span>ordered<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>2&#x3C;x&#x3C;=6.7<br>\n6.7&#x3C;x&#x3C;=10<br>\n이러면 문제가 없다.</p>\n<hr>\n<h5 id=\"예제-4\" style=\"position:relative;\">예제 4<a href=\"#%EC%98%88%EC%A0%9C-4\" aria-label=\"예제 4 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>와인 품질(wine quality)을 가상의 bad, good, best 세가지 타입으로 예측</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">quality_bins <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">]</span>   <span class=\"token comment\"># [3, 5) 1구간, [5, 8) 2구간, [8, 10) 3구간</span>\r\nquality_label <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">'bad'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'good'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'best'</span><span class=\"token punctuation\">]</span>  <span class=\"token comment\"># 3부터 5 구간은 bad, 5부터 8구간은 good, 8부터 10구간은 best</span>\r\n\r\nwine_scaled_df<span class=\"token punctuation\">[</span><span class=\"token string\">'quality'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pd<span class=\"token punctuation\">.</span>cut<span class=\"token punctuation\">(</span>wine_scaled_df<span class=\"token punctuation\">[</span><span class=\"token string\">'quality'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\r\n                                   right<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">,</span> include_lowest<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">,</span>\r\n                                   bins<span class=\"token operator\">=</span>quality_bins<span class=\"token punctuation\">,</span> labels<span class=\"token operator\">=</span>quality_label<span class=\"token punctuation\">,</span>ordered<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>quality 를 bad, good, best 로 분류하는데,<br>\n분류기준은 평균이 5.8, 표준편차 0.8 이므로<br>\nbad 기준은 mean - std = 4 까지, good 기준은 mean + std = 5.8 + 0.8 = 6.6, 즉 7 까지, best 는 8 이상으로 해보았다.</p>\n<hr>\n<h4 id=\"cnn\" style=\"position:relative;\">CNN<a href=\"#cnn\" aria-label=\"cnn permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>딥러닝은 2012년, 컴퓨터 비전은 2015년을 기점으로 나뉜다.</p>\n<p>2012년, Alexnet이라는 CNN이 나오면서 image 에 대한 정확도가 올라갔다.<br>\n2015년, Yolo가 나왔다. 그 이전에는 Fast R-CNN이 사용되고 있었다.</p>\n<p>데이터가 정해지면 입, 출력층은 고정이다.<br>\n아키텍처 관점에서 은닉층만 변화된다고 볼 수 있다.</p>\n<h5 id=\"convolution\" style=\"position:relative;\">Convolution<a href=\"#convolution\" aria-label=\"convolution permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h5>\n<p>시간 t의 흐름에 따른 필터(커널)가 stride 이동하면서 원본 데이터 변화의 평균<br>\n스트라이드의 스탭을 시간으로 생각해도 될 듯...</p>\n<p>𝑓 (𝜏) * 𝑔 (𝑡) = ∫ 𝑓 ( 𝜏 )𝑔 (𝑡 - 𝜏) 𝑑𝜏</p>\n<p>딥러닝은 loss가 최소화되는 w, b를 찾는 거 였다.<br>\nCNN에서는 그 filter인 g(𝑡 - 𝜏)를 찾는 게 목적이다.</p>\n<p>𝑓 ( 𝜏 ), 𝑔 (𝑡 - 𝜏) : numpy<br>\n이미지 : 행렬(numpy)</p>\n<p>필터 정의와 stride 등에 대한 정의가 요구된다.</p>\n<p>d</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#6%EC%9D%BC%EC%B0%A8\">6일차</a></p>\n<ul>\n<li>\n<p><a href=\"#kaggle-diabetes-%EC%9D%B4%EC%96%B4%EC%84%9C\">kaggle diabetes 이어서</a></p>\n<ul>\n<li><a href=\"#%EB%8D%B0%EC%9D%B4%ED%84%B0-%ED%91%9C%EC%A4%80%ED%99%94\">데이터 표준화</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#wine-project\">Wine Project</a></p>\n<ul>\n<li><a href=\"#%EC%98%88%EC%A0%9C-1\">예제 1</a></li>\n<li><a href=\"#%EC%98%88%EC%A0%9C-2\">예제 2</a></li>\n<li><a href=\"#%EC%98%88%EC%A0%9C-3\">예제 3</a></li>\n<li><a href=\"#%EC%98%88%EC%A0%9C-4\">예제 4</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#cnn\">CNN</a></p>\n<ul>\n<li><a href=\"#convolution\">Convolution</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"AI 이노베이션 스퀘어 3기 심화 시각반 6일차 후기"}}},"pageContext":{"slug":"/ai-이노베이션-스퀘어-시각-심화-6일차/"}},
    "staticQueryHashes": ["3159585216"]}