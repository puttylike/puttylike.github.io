{"componentChunkName":"component---src-templates-blog-post-js","path":"/파이썬-크롤링-등-기초/","result":{"data":{"markdownRemark":{"html":"<p>3년 만에 하는 크롤링이다. 개인 프로젝트 하려면 결국 데이터가 있어야 하니까, 그래서... 파이썬 크롤링을 다시 찾게 되었다. 마침 스파르타 코딩에서 추석 기념으로 관련 강의를 조금 수강할 기회가 있어서 신청했다. ㅎㅎ</p>\n<p>파이썬 3.x 버전대 기준으로 작성되었다.</p>\n<hr>\n<h2 id=\"1일차---웹스크래핑-요약\" style=\"position:relative;\">1일차 - 웹스크래핑 요약<a href=\"#1%EC%9D%BC%EC%B0%A8---%EC%9B%B9%EC%8A%A4%ED%81%AC%EB%9E%98%ED%95%91-%EC%9A%94%EC%95%BD\" aria-label=\"1일차   웹스크래핑 요약 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<ul>\n<li>pycharm : 문서 작업에 용이하다.</li>\n</ul>\n<p>cf. dload 패키지 : url 넣으면 이미지 다운받게 하는 패키지</p>\n<pre><code class=\"language-python\">import dload\ndload.save(\"https://spartacodingclub.kr/static/css/images/ogimage.png\")\n</code></pre>\n<p>(1) 크롬 버전을 확인 : chrome > 설정 > chrome 정보  </p>\n<p>(2) 크롬웹드라이버 설치<br>\n<a href=\"https://chromedriver.storage.googleapis.com/index.html?path=85.0.4183.87/\">https://chromedriver.storage.googleapis.com/index.html?path=85.0.4183.87/</a><br>\n(chromedriver_win32.zip 선택 > chromedriver.exe 다운로드)  </p>\n<p>(2) selenium 패키지 설치 : 브라우저 자동 제어</p>\n<ul>\n<li>크롬 85.x 버전으로 설치한다.</li>\n<li>셀레니움 기본 코드  </li>\n</ul>\n<pre><code class=\"language-python\">from selenium import webdriver\ndriver = webdriver.Chrome('chromedriver')\ndriver.get(\"http://www.naver.com\")\n</code></pre>\n<p>(3) BeautifulSoup 라이브러리 설치 : 브라우저가 보고 있는 것 중에서 내가 원하는 것을 솎아내는 작업<br>\n=> 이를 위해 bs4 패키지를 설치한다.</p>\n<ul>\n<li>BS4 기본 코드  </li>\n</ul>\n<pre><code class=\"language-python\">from bs4 import BeautifulSoup\nfrom selenium import webdriver\nimport time\n\ndriver = webdriver.Chrome('chromedriver') # 웹드라이버 파일의 경로\ndriver.get(\"https://search.daum.net/search?w=img&#x26;nil_search=btn&#x26;DA=NTB&#x26;enc=utf8&#x26;q=%EC%95%84%EC%9D%B4%EC%9C%A0\")\ntime.sleep(5) # 5초 동안 페이지 로딩 기다리기\n\nreq = driver.page_source\n# HTML을 BeautifulSoup이라는 라이브러리를 활용해 검색하기 용이한 상태로 만듦  \n# soup이라는 변수에 \"파싱 용이해진 html\"이 담긴 상태가 됨  \n# 이제 코딩을 통해 필요한 부분을 추출하면 된다.  \nsoup = BeautifulSoup(req, 'html.parser')\ndriver.quit() # 끝나면 닫아주기\n</code></pre>\n<p>(4) 이미지 다운로드 예제</p>\n<pre><code class=\"language-python\">from bs4 import BeautifulSoup\nfrom selenium import webdriver\nimport dload\nimport time\n\ndriver = webdriver.Chrome('chromedriver') # 웹드라이버 파일의 경로\ndriver.get(\"https://search.daum.net/search?w=img&#x26;nil_search=btn&#x26;DA=NTB&#x26;enc=utf8&#x26;q=%EC%88%98%EC%A7%80\")\ntime.sleep(5) # 5초 동안 페이지 로딩 기다리기\n\nreq = driver.page_source\n# HTML을 BeautifulSoup이라는 라이브러리를 활용해 검색하기 용이한 상태로 만듦\n# soup이라는 변수에 \"파싱 용이해진 html\"이 담긴 상태가 됨\n# 이제 코딩을 통해 필요한 부분을 추출하면 된다.\nsoup = BeautifulSoup(req, 'html.parser')\n\n###################################\n# 이제 여기에 코딩을 하면 됩니다!\n# print(soup)\n# 검사 > copy > copy_selector\n# #imgList > div:nth-child(1) > a > img\n# thumbnails = soup.select(\"#imgList > div:nth-child(1) > a > img\")['src']\n# print(thumbnails) # 이래서 src로 주소만 갖고 오게 위에서 수정\n# [&#x3C;img alt=\"미쓰에이 수지 프로필\" class=\"thumb_img\" data-size=\"178x200\" data-src=\"https://search4.kakaocdn.net/argon/0x200_85_hr/8yJGBmOuV4o\" onerror=\"SF.errorImage(this)\" src=\"https://search4.kakaocdn.net/argon/0x200_85_hr/8yJGBmOuV4o\" style=\"width:181px;height:200px;margin-left:-1px\"/>]\n##################################\n\n# 여러 개의 이미지 가져오기\nthumbnails = soup.select(\"#imgList > div > a > img\")\n\ni = 1\nfor thumbnail in thumbnails:\n    img = thumbnail[\"src\"]\n    # print(src)\n    dload.save(img,f'imgs_homework/{i}.jpg')\n    # dload.save(img, 'img/1.jpg')\n    i += 1\n\n\ndriver.quit() # 끝나면 닫아주기\n</code></pre>\n<hr>\n<h2 id=\"2일차---웹스크래핑-결과물-메일로-보내기\" style=\"position:relative;\">2일차 - 웹스크래핑 결과물 메일로 보내기<a href=\"#2%EC%9D%BC%EC%B0%A8---%EC%9B%B9%EC%8A%A4%ED%81%AC%EB%9E%98%ED%95%91-%EA%B2%B0%EA%B3%BC%EB%AC%BC-%EB%A9%94%EC%9D%BC%EB%A1%9C-%EB%B3%B4%EB%82%B4%EA%B8%B0\" aria-label=\"2일차   웹스크래핑 결과물 메일로 보내기 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>(1) openpypl 패키지 설치 : 엑셀 저장하기 관련</p>\n<ul>\n<li>엑셀 저장 기본 코드</li>\n</ul>\n<pre><code class=\"language-python\">from openpyxl import Workbook\nwb = Workbook()\nws1 = wb.active\nws1.title = \"articles\" # sheet명\nws1.append([\"제목\", \"링크\", \"신문사\"])\n\nfor article in articles:\n    title = article.select_one('dl > dt > a').text # 기사제목\n    url = article.select_one('dl > dt > a')['href'] # url\n    # 언론사명 copy_selector : #sp_nws1 > dl > dd.txt_inline > span._sp_each_source\n    comp = article.select_one('span._sp_each_source').text.split(' ')[0].replace('언론사','')\n    # print(title, url, comp)\n    ws1.append([title, url, comp])\n\ndriver.quit()\nwb.save(filename='articles.xlsx') # 저장할파일명\n</code></pre>\n<p>(2) smtplib 패키지 설치 : 메일 서버 접속 패키지이다.<br>\n보내는 사람 주소는 gmail이어야 한다.  </p>\n<ul>\n<li>파일 첨부해서 이메일 보내기 기본 코드</li>\n</ul>\n<pre><code class=\"language-python\"># 메일 서버 접속 패키지 smtplib\n# 보내는 사람 이메일 주소를 gmail 사용해야 함\n\nimport smtplib\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.base import MIMEBase\nfrom email.mime.text import MIMEText\nfrom email import encoders\n\n\n# 보내는 사람 정보\nme = \"    @gmail.com\" # gmail만\nmy_password = \"          \"\n\n# 로그인하기\ns = smtplib.SMTP_SSL('smtp.gmail.com')\ns.login(me, my_password)\n\n# 받는 사람 정보\nyou = \"      @naver.com\"  # 아무_도메인\n\n# 메일 기본 정보 설정\nmsg = MIMEMultipart('alternative')\nmsg['Subject'] = \"기사 리스트\" # 제목\nmsg['From'] = me\nmsg['To'] = you\n\n# 메일 내용 쓰기\ncontent = \"크롤링 결과물 입니다.\" # 메일 내용\npart2 = MIMEText(content, 'plain')\nmsg.attach(part2)\n\n# 파일 첨부 하기\n# 여러 파일을 첨부할 때에는 똑같은 코드를 반복하여 각각 msg.attach()\npart = MIMEBase('application', \"octet-stream\")\nwith open(\"   .xlsx\", 'rb') as file:\n    part.set_payload(file.read())\nencoders.encode_base64(part)\npart.add_header('Content-Disposition', \"attachment\", filename=\"   .xlsx\") # 보낼 파일명\nmsg.attach(part)\n\n# 메일 보내고 서버 끄기\ns.sendmail(me, you, msg.as_string())\n\ns.quit()\n</code></pre>\n<p>(3) 참고 사항 - 에러 발생 관련</p>\n<ul>\n<li>계정 정보 오류\nsmtplib.SMTPAuthenticationError: (535, b'5.7.8 Username and Password not accepted. Learn more at\\n5.7.8  <a href=\"https://support.google.com/mail/?p=BadCredentials\">https://support.google.com/mail/?p=BadCredentials</a> h9sm3842285pfc.28 - gsmtp')</li>\n<li>보안 수준이 낮은 앱의 액세스: 허용 변경 필요\nsmtplib.SMTPAuthenticationError: (535, b'5.7.8 Username and Password not accepted. Learn more at\\n5.7.8  <a href=\"https://support.google.com/mail/?p=BadCredentials\">https://support.google.com/mail/?p=BadCredentials</a> r3sm4185855pfh.88 - gsmtp')\n=> <a href=\"https://myaccount.google.com/lesssecureapps\">https://myaccount.google.com/lesssecureapps</a></li>\n<li>2-Step-Verification이 켜져있는 경우\nsmtplib.SMTPAuthenticationError: (534, b'5.7.9 Application-specific password required. Learn more at\\n5.7.9  <a href=\"https://support.google.com/mail/?p=InvalidSecondFactor\">https://support.google.com/mail/?p=InvalidSecondFactor</a> n7sm4135021pfq.114 - gsmtp')</li>\n</ul>\n<p>(4) 최종 코드</p>\n<pre><code class=\"language-python\"># -*- conding: utf-8 -*-\n# SyntaxError: Non-UTF-8 code starting with '\\xea'\n\n\nfrom bs4 import BeautifulSoup\nfrom selenium import webdriver\nfrom openpyxl import Workbook\n\ndriver = webdriver.Chrome('chromedriver')\n\nurl = \"https://search.naver.com/search.naver?where=news&#x26;sm=tab_jum&#x26;query=추석\"\n\ndriver.get(url)\nreq = driver.page_source\nsoup = BeautifulSoup(req, 'html.parser')\n\n#####################\n# 여기에 코드 적기!\n\n# 첫번째기사제목 : #sp_nws1 > dl > dt > a\n# 기사제목에서 검사 > copy > copy_selector\n# articles  = soup.select_one('#sp_nws1 > dl > dt > a')\n# print(articles)\n# print(articles.text) # text만 가져오기\n\n# 두번째기사제목 : #sp_nws6 > dl > dt > a\n# => 규칙이 없다\n# => &#x3C;li id=\"sp_nws   이런 식이라 거기 위 쪽의 &#x3C;ul class=\"type01\"> 에서 copy_selector\n# #main_pack > div.news.mynews.section._prs_nws > ul\n\n# ul 내의 li들 가져오기\n# articles  = soup.select('div.news.mynews.section._prs_nws > ul > li')\n# print(articles)\n# 리스트 형태네\n# for article in articles:\n#     print(article)\n\n# li 안에 dl 안에 dt 안에 a를 해보자\n#######################################################################\n\narticles = soup.select('div.news.mynews.section._prs_nws > ul > li')\n\n# 엑셀에 저장하기 : openpyxl 패키지\n# from openpyxl import Workbook\nwb = Workbook()\nws1 = wb.active\nws1.title = \"articles\" # sheet명\nws1.append([\"제목\", \"링크\", \"신문사\"])\n\nfor article in articles:\n    title = article.select_one('dl > dt > a').text # 기사제목\n    url = article.select_one('dl > dt > a')['href'] # url\n    # 언론사명 copy_selector : #sp_nws1 > dl > dd.txt_inline > span._sp_each_source\n    comp = article.select_one('span._sp_each_source').text.split(' ')[0].replace('언론사','')\n    # print(title, url, comp)\n    ws1.append([title, url, comp])\n\n\ndriver.quit()\nwb.save(filename='articles.xlsx') # 파일명\n\n# 메일 서버 접속 패키지 smtplib\n# 보내는 사람 이메일 주소를 gmail 사용해야 함\n\nimport smtplib\nfrom email.mime.multipart import MIMEMultipart\nfrom email.mime.base import MIMEBase\nfrom email.mime.text import MIMEText\nfrom email import encoders\n\n\n# 보내는 사람 정보\nme = \"생략@gmail.com\" (어쨌든 gmail)\nmy_password = \"  \" (비밀번호 입력)\n\n# 로그인하기\ns = smtplib.SMTP_SSL('smtp.gmail.com')\ns.login(me, my_password)\n\n# 받는 사람 정보\n# 아무_도메인이든 상관없다\n# 여러 사람에게 보내려면 이렇게 반복문\nemail_list = [\"    @naver.com\",\"   @naver.com\"]\n\nfor you in email_list:\n    # 메일 기본 정보 설정\n    msg = MIMEMultipart('alternative')\n    msg['Subject'] = \"       \" # 제목\n    msg['From'] = me\n    msg['To'] = you\n\n    # 메일 내용 쓰기\n    content = \"           \" # 메일 내용\n    part2 = MIMEText(content, 'plain')\n    msg.attach(part2)\n\n    # 파일 첨부 하기\n    # 여러 파일을 첨부할 때에는 똑같은 코드를 반복하여 각각 msg.attach()\n    part = MIMEBase('application', \"octet-stream\")\n    with open(\"    .xlsx\", 'rb') as file: # 로컬에 있는 파일명\n        part.set_payload(file.read())\n    encoders.encode_base64(part)\n    part.add_header('Content-Disposition', \"attachment\", filename=\"   .xlsx\") # 실제로 보낼 파일명\n    msg.attach(part)\n\n    # 메일 보내고 서버 끄기\n    s.sendmail(me, you, msg.as_string())\n\ns.quit()\n</code></pre>\n<hr>\n<h2 id=\"3일차---카톡-대화-전처리하여-워드클라우드-만들기\" style=\"position:relative;\">3일차 - 카톡 대화 전처리하여 워드클라우드 만들기<a href=\"#3%EC%9D%BC%EC%B0%A8---%EC%B9%B4%ED%86%A1-%EB%8C%80%ED%99%94-%EC%A0%84%EC%B2%98%EB%A6%AC%ED%95%98%EC%97%AC-%EC%9B%8C%EB%93%9C%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"3일차   카톡 대화 전처리하여 워드클라우드 만들기 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h2>\n<p>(1) with 구문</p>\n<pre><code class=\"language-python\">with open(\"text.txt\",\"w\",encoding+utf-8) as f: # r 읽기모드, w 쓰기모드\n   f.write(\"각 줄마다 번호를 적은 파일입니다.\\n\") # 쓰기모드는 덮어씌우니 주의\n   for i in [1,2,3,4,5]:\n       f.write(f\"이것은 {i}번째 줄입니다.\\n\")\nf.close()\n</code></pre>\n<p>(2) 카톡 대화 데이터 전처리 작업 = 노가다</p>\n<pre><code class=\"language-python\">text = ''\nwith open(\"kakaotalk.txt\", \"r\", encoding=\"utf-8\") as f:\n    lines = f.readlines()\n    for line in lines[5:]: # 처음부터 안 읽고\n        if '] [' in line: # 사람들 대화 특징만 보고 => ] [\n            text += line.split('] ')[2].replace('저도','').replace('저두','').replace('저는','').replace('ㅋ','').replace('ㅠ','').replace('이모티콘\\n','').replace('사진\\n','')\n\nprint(text)\n</code></pre>\n<p>(3) 워드클라우드를 위한 폰트 선별 작업  </p>\n<pre><code class=\"language-python\">import matplotlib.font_manager as fm\n\n# 이용 가능한 폰트 중 '고딕'만 선별\nfor font in fm.fontManager.ttflist:\n    if 'Gothic' in font.name:\n        print(font.name, font.fname)\n\nfont_path = 'C:/WINDOWS/Fonts/malgun.ttf' # 윈도우는 / 로 경로를 해 줘야함\n</code></pre>\n<p>(4) wordcloud 패키지 설치 : 워드클라우드용</p>\n<ul>\n<li>기본 코드</li>\n</ul>\n<pre><code class=\"language-python\">from wordcloud import WordCloud\n\nwc = WordCloud(font_path=font_path, background_color=\"white\", width=600, height=400)\nwc.generate(text)\nwc.to_file(\"result.png\")\n</code></pre>\n<ul>\n<li>마스킹된 워드클라우드 만들기</li>\n</ul>\n<pre><code class=\"language-python\">from PIL import Image\nimport numpy as np\n\nmask = np.array(Image.open('cloud.png')) # 마스킹할 이미지 파일\nwc = WordCloud(font_path=font_path, background_color=\"white\", mask=mask)\nwc.generate(text)\nwc.to_file(\"result_masked.png\")\n</code></pre>\n<p>(5) 최종 예시 코드</p>\n<pre><code class=\"language-python\">text = ''\n# r 읽기모드\nwith open(\"kakaotalk.txt\", \"r\", encoding=\"utf-8\") as f:\n    lines = f.readlines()\n    for line in lines[5:]: # 처음부터 안 읽고\n        if '] [' in line: # 사람들 대화 특징만 보고 => ] [\n            text += line.split('] ')[2].replace('저도','').replace('저두','').replace('저는','').replace('ㅋ','').replace('ㅠ','').replace('이모티콘\\n','').replace('사진\\n','')\n\nprint(text)\n\n################################### 폰트 찾기용\nimport matplotlib.font_manager as fm\n\n# 이용 가능한 폰트 중 '고딕'만 선별\nfor font in fm.fontManager.ttflist:\n    if 'Gothic' in font.name:\n        print(font.name, font.fname)\n\nfont_path = 'C:/WINDOWS/Fonts/malgun.ttf' # 윈도우는 / 로 경로를 해 줘야함\n\n############################################\n# 워드클라우드 패키지 설치 wordcloud\n\nfrom wordcloud import WordCloud\n\nwc = WordCloud(font_path=font_path, background_color=\"white\", width=600, height=400)\nwc.generate(text)\nwc.to_file(\"result.png\")\n\n# 마스킹된 워드클라우드 만들기\n\nfrom PIL import Image\nimport numpy as np\n\nmask = np.array(Image.open('cloud.png')) # 마스킹할 이미지 파일\nwc = WordCloud(font_path=font_path, background_color=\"white\", mask=mask)\nwc.generate(text)\nwc.to_file(\"result_masked.png\")\n</code></pre>","tableOfContents":"<ul>\n<li><a href=\"/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%ED%81%AC%EB%A1%A4%EB%A7%81-%EB%93%B1-%EA%B8%B0%EC%B4%88/#1%EC%9D%BC%EC%B0%A8---%EC%9B%B9%EC%8A%A4%ED%81%AC%EB%9E%98%ED%95%91-%EC%9A%94%EC%95%BD\">1일차 - 웹스크래핑 요약</a></li>\n<li><a href=\"/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%ED%81%AC%EB%A1%A4%EB%A7%81-%EB%93%B1-%EA%B8%B0%EC%B4%88/#2%EC%9D%BC%EC%B0%A8---%EC%9B%B9%EC%8A%A4%ED%81%AC%EB%9E%98%ED%95%91-%EA%B2%B0%EA%B3%BC%EB%AC%BC-%EB%A9%94%EC%9D%BC%EB%A1%9C-%EB%B3%B4%EB%82%B4%EA%B8%B0\">2일차 - 웹스크래핑 결과물 메일로 보내기</a></li>\n<li><a href=\"/%ED%8C%8C%EC%9D%B4%EC%8D%AC-%ED%81%AC%EB%A1%A4%EB%A7%81-%EB%93%B1-%EA%B8%B0%EC%B4%88/#3%EC%9D%BC%EC%B0%A8---%EC%B9%B4%ED%86%A1-%EB%8C%80%ED%99%94-%EC%A0%84%EC%B2%98%EB%A6%AC%ED%95%98%EC%97%AC-%EC%9B%8C%EB%93%9C%ED%81%B4%EB%9D%BC%EC%9A%B0%EB%93%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\">3일차 - 카톡 대화 전처리하여 워드클라우드 만들기</a></li>\n</ul>","frontmatter":{"title":"파이썬 웹스크래핑 (크롤링) 기초 등 정리"}}},"pageContext":{"slug":"/파이썬-크롤링-등-기초/"}},"staticQueryHashes":["3159585216"]}