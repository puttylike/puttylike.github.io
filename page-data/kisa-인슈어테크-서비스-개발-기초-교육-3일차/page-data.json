{"componentChunkName":"component---src-templates-blog-post-js","path":"/kisa-인슈어테크-서비스-개발-기초-교육-3일차/","result":{"data":{"markdownRemark":{"html":"<p>새로운 ppt를 또 받았다.</p>\n<hr>\n<h4 id=\"해커톤\" style=\"position:relative;\">해커톤<a href=\"#%ED%95%B4%EC%BB%A4%ED%86%A4\" aria-label=\"해커톤 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p><a href=\"www.onoffmix.com/event/234792\">우리은행 온택트 해커톤</a>... 을 추천하셨다.</p>\n<p>cf. app by React</p>\n<p>AI 같은 건 이런 솔루션을 써도 될 듯 하다.<br>\ncf. <a href=\"https://speech-to-text-demo.ng.bluemix.net/\">IBM Bluemix STT</a></p>\n<hr>\n<h4 id=\"3일차\" style=\"position:relative;\">3일차<a href=\"#3%EC%9D%BC%EC%B0%A8\" aria-label=\"3일차 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ul>\n<li>React Developer Tools</li>\n</ul>\n<p>크롬에 <a href=\"https://chrome.google.com/webstore/detail/react-developer-tools/fmkadmapgofadopljbjfkapdkoienihi?hl=ko\">React Developer Tools</a> 확장 프로그램을 추가한다.</p>\n<p>Component 안에 state 값을 확인할 수 있다.</p>\n<ul>\n<li>Input tag - onChange</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* Hello.js */</span>\r\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>useState<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Hello</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">let</span> myName <span class=\"token operator\">=</span> <span class=\"token string\">\"hello choi\"</span>\r\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>myNameWithState<span class=\"token punctuation\">,</span> setmyNameWithState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'choi222'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>news<span class=\"token punctuation\">,</span> setNews<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">nameChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\">// myName = \"react-native\"</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"이름이 바뀝니다.\"</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token comment\">// myNameWithState = \"choi333\" // 효과 없음</span>\r\n        <span class=\"token function\">setmyNameWithState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'choi333'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getNewApi</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://newsapi.org/v2/everything?q=tesla&amp;from=2021-03-13&amp;sortBy=publishedAt&amp;apiKey=78bc6ddd8cdb48ceac76f5f9b9dfc4c5'</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token comment\">// handle success</span>\r\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n          <span class=\"token function\">setNews</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>articles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n          <span class=\"token comment\">// 이거 아님</span>\r\n          <span class=\"token comment\">// console.log(news);</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token comment\">// handle error</span>\r\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token comment\">// always executed</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleTextChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"change!!!\"</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token comment\">// 입력된 값 확인</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>color<span class=\"token operator\">:</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Hello world <span class=\"token keyword\">in</span> component<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>myNameWithState<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>getNewApi<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>이름을 변경합니다<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>br<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleTextChange<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span>\r\n            <span class=\"token punctuation\">{</span>news<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\r\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\r\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Hello<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>console 창을 통해 e.target.value 에 input 값이 할당되는 점을 확인할 수 있다.\r\ninput에 입력한 값으로 위에 텍스트가 바뀌게 코드를 수정해 보자.</p>\n<p>e.target.value로 받아오는 거 보다는, 값을 나눠서 받아와서 세팅하도록 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleTextChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token comment\">// console.log(\"change!!!\")</span>\r\n    <span class=\"token comment\">// // 입력된 값 확인</span>\r\n    <span class=\"token comment\">// console.log(e.target.value)</span>\r\n    <span class=\"token comment\">// // 값 세팅</span>\r\n    <span class=\"token comment\">// setmyNameWithState(e.target.value)</span>\r\n\r\n    <span class=\"token comment\">// 기존 구조 나눠서 값 세팅</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">setmyNameWithState</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token punctuation\">}</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>전체 코드는 다음과 같다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* Hello.js */</span>\r\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>useState<span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">Hello</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">let</span> myName <span class=\"token operator\">=</span> <span class=\"token string\">\"hello choi\"</span>\r\n    <span class=\"token keyword\">let</span> <span class=\"token punctuation\">[</span>myNameWithState<span class=\"token punctuation\">,</span> setmyNameWithState<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'choi222'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>news<span class=\"token punctuation\">,</span> setNews<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">nameChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\">// myName = \"react-native\"</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"이름이 바뀝니다.\"</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token comment\">// myNameWithState = \"choi333\" // 효과 없음</span>\r\n        <span class=\"token function\">setmyNameWithState</span><span class=\"token punctuation\">(</span><span class=\"token string\">'choi333'</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">getNewApi</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://newsapi.org/v2/everything?q=tesla&amp;from=2021-03-13&amp;sortBy=publishedAt&amp;apiKey=78bc6ddd8cdb48ceac76f5f9b9dfc4c5'</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token comment\">// handle success</span>\r\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n          <span class=\"token function\">setNews</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>articles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\n          <span class=\"token comment\">// 이거 아님</span>\r\n          <span class=\"token comment\">// console.log(news);</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token comment\">// handle error</span>\r\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token comment\">// always executed</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>   \r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">handleTextChange</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token comment\">// console.log(\"change!!!\")</span>\r\n        <span class=\"token comment\">// // 입력된 값 확인</span>\r\n        <span class=\"token comment\">// console.log(e.target.value)</span>\r\n        <span class=\"token comment\">// // 값 세팅</span>\r\n        <span class=\"token comment\">// setmyNameWithState(e.target.value)</span>\r\n\r\n        <span class=\"token comment\">// 기존 구조 나눠서 값 세팅</span>\r\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">,</span>name<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\">setmyNameWithState</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>color<span class=\"token operator\">:</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Hello world <span class=\"token keyword\">in</span> component<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>myNameWithState<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>getNewApi<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>이름을 변경합니다<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>br<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>handleTextChange<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span>\r\n            <span class=\"token punctuation\">{</span>news<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\r\n                console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span>\r\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>\r\n\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> Hello<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<hr>\n<ul>\n<li>컴포넌트 디자인</li>\n</ul>\n<p>디자인을 React native에서는 SCSS로 표현하는데,<br>\nreact라 CSS로 표현한다.</p>\n<p>초기 웹사이트에 비하면, 서비스 발전에 따라 디자인 쪽이 발전했다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\">            <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>color<span class=\"token operator\">:</span><span class=\"token string\">'red'</span><span class=\"token punctuation\">,</span> fontsize<span class=\"token operator\">:</span><span class=\"token string\">'30px'</span><span class=\"token punctuation\">,</span>fontWeight<span class=\"token operator\">:</span><span class=\"token string\">'bold'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>Hello world <span class=\"token keyword\">in</span> component<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>이렇게 .js 파일에 직접 추가해도 된다만,\r\n일관된 관리를 위해 별도 파일로 관리하기도 한다.</p>\n<p>하지만 컴포넌트 단위로 세분화 되기 때문에 Style-component를 사용한다.</p>\n<p>src/component 경로에 StyledComponentTest.js 파일을 만든다.</p>\n<p>패키지를 설치한다.</p>\n<p>$ npm install styled-components\r\n<a href=\"https://styled-components.com/\">참고</a></p>\n<ul>\n<li>기본 템플릿</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* StyledComponentTest.js */</span>\r\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">StyledComponentTest</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">,</span> handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> StyledComponentTest<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>App.js에 Router 추가하고, StyledComponentTest를 수정한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* App.js */</span>\r\n    <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/styled\"</span> component<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>StyledComponentTest<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>디자인 요소를 다음과 같이 추가할 수 있다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* StyledComponentTest.js */</span>\r\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> Title <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n    font-size : 50px;\r\n</span><span class=\"token template-punctuation string\">`</span></span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">StyledComponentTest</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>number<span class=\"token punctuation\">,</span> handleClick<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>Title<span class=\"token operator\">></span><span class=\"token constant\">HELLO</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Title<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> StyledComponentTest<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>참고 - CSS Cheat Sheet</li>\n</ul>\n<p>flex는 요새 쓰는 요소 정렬, 배치 방법이다. 반응형 앱을 만들 때 많이 쓴다.</p>\n<ul>\n<li><a href=\"https://yoksel.github.io/flex-cheatsheet/\">https://yoksel.github.io/flex-cheatsheet/</a></li>\n<li><a href=\"https://htmlcheatsheet.com/css/\">https://htmlcheatsheet.com/css/</a></li>\n</ul>\n<hr>\n<h4 id=\"심화-실습\" style=\"position:relative;\">심화 실습<a href=\"#%EC%8B%AC%ED%99%94-%EC%8B%A4%EC%8A%B5\" aria-label=\"심화 실습 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ul>\n<li>요구 사항</li>\n</ul>\n<ul>\n<li>사용자의 검색어를 받아 뉴스를 검색</li>\n<li>받아온 데이터의 다양한 데이터 표기<br>\ntitle /description / author</li>\n<li>버튼을 클릭하면 기사의 페이지로 이동</li>\n</ul>\n<p>src 밑에 pages 폴더 추가한다.  NewsSearch.js 를 생성한다.</p>\n<p>기본적인 페이지 제작을 위해 참고할 만한 사이트를 활용한다.<br>\ncf. <a href=\"https://devhints.io/react\">https://devhints.io/react</a></p>\n<p>Hooks (New) - state hook 을 활용했다.</p>\n<ul>\n<li>기본 템플릿</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">NewsSearch</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> NewsSearch<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>component에 Header.js를 생성하고, NewsSearch에서 Header를 불러 온다.</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-text line-numbers\"><code class=\"language-text\">/* Header.js */\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>여기서는 redux를 쓰지 않으니, 공유할 것들은 NewsSearch에서 정의해서 할당했다.<br>\nNewsSearch의 changeText / clickBtn -> SearchTool = {changeText,clickBtn}로 넘어간다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/*SearchToo.js */</span>\r\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\r\n\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">SearchTool</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>changeText<span class=\"token punctuation\">,</span>clickBtn<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>Input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> value<span class=\"token operator\">=</span><span class=\"token string\">\"내용을 입력하세요\"</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>changeText<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Input<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>Button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>clickBtn<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>검색<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Button<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> SearchTool<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>input에 검색어를 입력해 title/author/description이 조회되게 해 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* SearchToo.js */</span>\r\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">SearchTool</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>changeText<span class=\"token punctuation\">,</span> clickBtn<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>input type<span class=\"token operator\">=</span><span class=\"token string\">\"text\"</span> onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>changeText<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>input<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>button onClick<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>clickBtn<span class=\"token punctuation\">}</span><span class=\"token operator\">></span>검색<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>button<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> SearchTool<span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">/* NewsSearch.js*/</span>\r\n\r\n<span class=\"token keyword\">import</span> React<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> useState <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> Header <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/Header'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> SearchTool <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/SearchTool'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> SearchResult <span class=\"token keyword\">from</span> <span class=\"token string\">'../component/SearchResult'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> axios <span class=\"token keyword\">from</span> <span class=\"token string\">'axios'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token comment\">// LOGIC</span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">NewsSearch</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>searchText<span class=\"token punctuation\">,</span> setSearchText<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">changeText</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">e</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span>value<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>target<span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\">setSearchText</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n    <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>news<span class=\"token punctuation\">,</span> setNews<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">clickBtn</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>searchText<span class=\"token punctuation\">)</span>\r\n        axios<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'https://newsapi.org/v2/everything?q='</span><span class=\"token operator\">+</span>searchText<span class=\"token operator\">+</span><span class=\"token string\">'&amp;from=2021-04-12&amp;sortBy=publishedAt&amp;apiKey=b28608db4f994f5ebf497052cc43e7c5'</span><span class=\"token punctuation\">)</span>\r\n\r\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">response</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token comment\">// handle success</span>\r\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>          \r\n          <span class=\"token function\">setNews</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">.</span>articles<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// title, author, description</span>\r\n\r\n          <span class=\"token comment\">// 이거 아님</span>\r\n          <span class=\"token comment\">// console.log(news);</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">.</span><span class=\"token function\">catch</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token comment\">// handle error</span>\r\n          console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\r\n          <span class=\"token comment\">// always executed</span>\r\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n\r\n\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>Header title<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token string\">'뉴스검색'</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Header<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>SearchTool changeText<span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>changeText<span class=\"token punctuation\">}</span> clickBtn <span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>clickBtn<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SearchTool<span class=\"token operator\">></span>\r\n            <span class=\"token punctuation\">{</span>news<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">n</span><span class=\"token punctuation\">)</span><span class=\"token operator\">=></span><span class=\"token punctuation\">{</span>\r\n                <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n                        <span class=\"token operator\">&lt;</span>div style<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>background<span class=\"token operator\">:</span><span class=\"token string\">'yellow'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\r\n                            <span class=\"token operator\">&lt;</span>h3<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h3<span class=\"token operator\">></span>\r\n                            <span class=\"token operator\">&lt;</span>h4<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">.</span>author<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>h4<span class=\"token operator\">></span>\r\n                            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>n<span class=\"token punctuation\">.</span>description<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\r\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\r\n                        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n                    <span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span>         \r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> NewsSearch<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>postman을 보면 q 옆에는 키 값이 들어가는 것을 알 수 있다.<br>\n위 axiso.get() 대신 아래 사이트의 axios api를 참고해 수정한다.</p>\n<ul>\n<li><a href=\"https://www.npmjs.com/package/axios\">참고</a>할 소스</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">// Send a POST request</span>\r\n<span class=\"token function\">axios</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\r\n  method<span class=\"token operator\">:</span> <span class=\"token string\">'post'</span><span class=\"token punctuation\">,</span>\r\n  url<span class=\"token operator\">:</span> <span class=\"token string\">'/user/12345'</span><span class=\"token punctuation\">,</span>\r\n  data<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\r\n    firstName<span class=\"token operator\">:</span> <span class=\"token string\">'Fred'</span><span class=\"token punctuation\">,</span>\r\n    lastName<span class=\"token operator\">:</span> <span class=\"token string\">'Flintstone'</span>\r\n  <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>수정 전/후</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* NewsSearch.js */</span>\r\n<span class=\"token comment\">//axios.get('https://newsapi.org/v2/everything?q='+searchText+'&amp;from=2021-04-12&amp;sortBy=publishedAt&amp;apiKey=b28608db4f994f5ebf497052cc43e7c5')</span>\r\n\r\n<span class=\"token keyword\">const</span> option <span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>\r\n    method<span class=\"token operator\">:</span><span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span>\r\n    url<span class=\"token operator\">:</span><span class=\"token string\">'https://newsapi.org/v2/everything'</span><span class=\"token punctuation\">,</span>\r\n    params<span class=\"token operator\">:</span><span class=\"token punctuation\">{</span>\r\n        <span class=\"token string\">'q'</span><span class=\"token operator\">:</span>searchText<span class=\"token punctuation\">,</span>\r\n        <span class=\"token string\">'from'</span><span class=\"token operator\">:</span><span class=\"token string\">'2021-04-13'</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token string\">'sortBy'</span><span class=\"token operator\">:</span><span class=\"token string\">'published'</span><span class=\"token punctuation\">,</span>\r\n        <span class=\"token string\">'apiKey'</span><span class=\"token operator\">:</span><span class=\"token string\">'b28608db4f994f5ebf497052cc43e7c5'</span>\r\n    <span class=\"token punctuation\">}</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token comment\">// axios api 요청 만들기</span>\r\n<span class=\"token function\">axios</span><span class=\"token punctuation\">(</span>option<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>api로 받아온 각 기사들을 map을 통해 화면에 보여주는 부분을 작성한다.</p>\n<p>각각의 블록에 대한 style을 지정하기도 하지만,<br>\nSearchResultBlock 처럼 Block 단위로 생성하여 공통적으로 관리하기도 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* SearchResult.js */</span>\r\n<span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">import</span> styled <span class=\"token keyword\">from</span> <span class=\"token string\">'styled-components'</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">const</span> SearchResultBlock <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>div<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n    padding : 5px;\r\n    bolder : 1px solid #dfdfdf;\r\n    background:yellow;\r\n\r\n</span><span class=\"token template-punctuation string\">`</span></span>\r\n\r\n<span class=\"token keyword\">const</span> ArticleTitle <span class=\"token operator\">=</span> styled<span class=\"token punctuation\">.</span>p<span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\r\n    font-weight : bold;\r\n</span><span class=\"token template-punctuation string\">`</span></span>\r\n\r\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">SearchResult</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">,</span> description<span class=\"token punctuation\">,</span> author<span class=\"token punctuation\">,</span> url<span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>SearchResultBlock<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>url<span class=\"token punctuation\">}</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>ArticleTitle<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>title<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ArticleTitle<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>description<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\r\n            <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token punctuation\">{</span>author<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>SearchResultBlock<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span>br<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>br<span class=\"token operator\">></span>\r\n        <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span><span class=\"token operator\">></span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> SearchResult<span class=\"token punctuation\">;</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>개발에 집중하고 싶다면 react 디자인 템플릿을 사용하자.</p>\n<p>[참고]</p>\n<ul>\n<li><a href=\"https://material-ui.com/\">https://material-ui.com/</a></li>\n<li><a href=\"https://themeforest.net/search/react%20app\">https://themeforest.net/search/react%20app</a></li>\n</ul>\n<hr>\n<h3 id=\"db손해보험-api-소개\" style=\"position:relative;\">DB손해보험 API 소개<a href=\"#db%EC%86%90%ED%95%B4%EB%B3%B4%ED%97%98-api-%EC%86%8C%EA%B0%9C\" aria-label=\"db손해보험 api 소개 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>DB손해보험오픈API.zip 파일을 다운로드 하였다.<br>\nKISA 내에서도 특정 wifi 로만 테스트가 가능하다.</p>\n<p>아래 경로의 jmeter.bat 파일을 실행하면 apache jmeter가 실행된다.</p>\n<ul>\n<li>DB손해보험오픈API\\Jmeter\\KISA\\KISA\\apache-jmeter-5.1.1\\bin</li>\n</ul>\n<p>apache jMeter는 postman과 유사한 프로그램이다.</p>\n<p>테스트 하기 좋게 어느 정도 프로그래밍이 되어 있다.</p>\n<ul>\n<li>open을 클릭해 backups 위치에 있는 해외여행자보험-000048.jmx 를 선택한다.</li>\n</ul>\n<p>인증 방식에서는 Oauth 방식을 활용한다.</p>\n<p>벅스 사이트 로그인을 예로 들면, 직접 벅스 id를 쓸 수도 있지만,\r\nfacebook이 인증을 할 수도 있다.<br>\n: 자원 소유자의 본인 인증 => 인증되면, client에 요청해 accessToken을 발급 => 자원서버 => 자원 소유자</p>\n<p>User Defined Variables 를 수정하고,\r\n이용기관 접큰키를 선택하고 Ctrl + T 한 뒤 start를 누르면<br>\n키 값을 받을 수 있다. (Access Token)<br>\n= 이를 로그인으로 보면 된다.</p>\n<p>같은 거를 Postman으로도 요청해 본다.<br>\n: Post를 쓰며, Request Header 값을 그대로 Header에 입력하면 된다.</p>\n<p>그럼에도 jMeter를 쓰는 이유는, 보험료 산출 로직이 그 안에 있어서다.</p>\n<p>[단체]API마스터증권 ~ 에 회사에서 받은 마스터증권을 넣고 저장한 뒤,<br>\nCtrl + T 와 Start를 차례로 하면 Response를 받을 수 있다.</p>\n<p>cf. 1. 설계/보험료 산출은 민번, 증번만 정확하면 ok</p>\n<p>이번 개발 과정에서는 5~7을 실습해 볼 예정이다.</p>\n<p>cf. 인증키는 90일 까지 유효하지만, api랑 refresh를 통해 인증키 갱신 프로그램을 호출하면,\r\n다른 값들로 사용이 가능하긴 하다.</p>\n<hr>\n<h4 id=\"db손해보험-api-예제---미완\" style=\"position:relative;\">DB손해보험 API 예제 - (미완)<a href=\"#db%EC%86%90%ED%95%B4%EB%B3%B4%ED%97%98-api-%EC%98%88%EC%A0%9C---%EB%AF%B8%EC%99%84\" aria-label=\"db손해보험 api 예제   미완 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>pages에 AuthTest.js를 추가해 토큰조회 테스트를 진행한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-js line-numbers\"><code class=\"language-js\"><span class=\"token comment\">/* AuthTest.js */</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>ㅇ</p>","tableOfContents":"<ul>\n<li>\n<ul>\n<li><a href=\"#%ED%95%B4%EC%BB%A4%ED%86%A4\">해커톤</a></li>\n<li><a href=\"#3%EC%9D%BC%EC%B0%A8\">3일차</a></li>\n<li><a href=\"#%EC%8B%AC%ED%99%94-%EC%8B%A4%EC%8A%B5\">심화 실습</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#db%EC%86%90%ED%95%B4%EB%B3%B4%ED%97%98-api-%EC%86%8C%EA%B0%9C\">DB손해보험 API 소개</a></p>\n<ul>\n<li><a href=\"#db%EC%86%90%ED%95%B4%EB%B3%B4%ED%97%98-api-%EC%98%88%EC%A0%9C---%EB%AF%B8%EC%99%84\">DB손해보험 API 예제 - (미완)</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"KISA 교육 후기 - 인슈어테크 서비스 개발 기초 교육 과정 3일차"}}},"pageContext":{"slug":"/kisa-인슈어테크-서비스-개발-기초-교육-3일차/"}},"staticQueryHashes":["3159585216"]}