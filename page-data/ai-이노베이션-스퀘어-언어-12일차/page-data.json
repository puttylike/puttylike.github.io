{"componentChunkName":"component---src-templates-blog-post-js","path":"/ai-이노베이션-스퀘어-언어-12일차/","result":{"data":{"markdownRemark":{"html":"<p>전이학습에 입문했다. 다음주부터는 tf를 이용한 NLP를 배운다.</p>\n<hr>\n<h3 id=\"12일차\" style=\"position:relative;\">12일차<a href=\"#12%EC%9D%BC%EC%B0%A8\" aria-label=\"12일차 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>02_neural_network_classification.ipynb 를 연다.</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">model_15<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Model: \"sequential_14\"</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># Layer (type)                 Output Shape              Param #   </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># flatten_3 (Flatten)          (None, 784)               0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense_37 (Dense)             (None, 4)                 3140      </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense_38 (Dense)             (None, 4)                 20        </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense_39 (Dense)             (None, 10)                50        </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># Total params: 3,210</span>\r\n<span class=\"token comment\"># Trainable params: 3,210</span>\r\n<span class=\"token comment\"># Non-trainable params: 0</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n\r\nmodel_15<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>model_15<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># ([&lt;keras.layers.core.Flatten at 0x2d215521790>,</span>\r\n<span class=\"token comment\">#   &lt;keras.layers.core.Dense at 0x2d2155bc070>,</span>\r\n<span class=\"token comment\">#   &lt;keras.layers.core.Dense at 0x2d2155aebb0>,</span>\r\n<span class=\"token comment\">#   &lt;keras.layers.core.Dense at 0x2d2155ae340>],</span>\r\n<span class=\"token comment\">#  list)</span>\r\n\r\nmodel_15<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>\r\n\r\n<span class=\"token comment\"># &lt;keras.layers.core.Dense at 0x2d2155bc070></span>\r\n\r\nweights<span class=\"token punctuation\">,</span> biases <span class=\"token operator\">=</span> model_15<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get_weights<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nweights<span class=\"token punctuation\">,</span> weights<span class=\"token punctuation\">.</span>shape\r\n\r\n<span class=\"token comment\"># (array([[ 0.7150266 , -0.06077086, -0.9976308 , -1.0484312 ],</span>\r\n<span class=\"token comment\">#         [ 0.27732116, -0.47155362, -0.5291646 ,  0.02329238],</span>\r\n<span class=\"token comment\">#         [ 0.7752429 ,  0.54027545, -1.1288568 , -0.74261546],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [-0.39453447,  0.47628677, -0.22641525,  0.25505912],</span>\r\n<span class=\"token comment\">#         [-0.40515828,  0.61810106,  0.23928423, -0.5038759 ],</span>\r\n<span class=\"token comment\">#         [ 0.23884551,  0.11606929, -0.12131333,  0.04352404]],</span>\r\n<span class=\"token comment\">#        dtype=float32),</span>\r\n<span class=\"token comment\">#  (784, 4))</span>\r\n\r\nbiases<span class=\"token punctuation\">,</span> biases<span class=\"token punctuation\">.</span>shape\r\n\r\n<span class=\"token comment\"># (array([ 2.4486070e-02, -6.1512832e-04, -2.7230212e-01,  8.1124848e-01],</span>\r\n<span class=\"token comment\">#        dtype=float32),</span>\r\n<span class=\"token comment\">#  (4,))</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">weights<span class=\"token punctuation\">,</span> biases <span class=\"token operator\">=</span> model_15<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>get_weights<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\nweights<span class=\"token punctuation\">,</span> weights<span class=\"token punctuation\">.</span>shape\r\n\r\n<span class=\"token comment\"># (array([[ 1.0736768 , -0.19358198,  0.5072533 , -0.35606688],</span>\r\n<span class=\"token comment\">#         [ 0.34898186,  1.134145  ,  0.84305024,  0.5526559 ],</span>\r\n<span class=\"token comment\">#         [ 0.09337563,  0.46247587, -0.69962776,  0.58674866],</span>\r\n<span class=\"token comment\">#         [-0.32451472, -0.21780188,  0.5666561 ,  1.275238  ]],</span>\r\n<span class=\"token comment\">#        dtype=float32),</span>\r\n<span class=\"token comment\">#  (4, 4))</span>\r\n\r\nbiases<span class=\"token punctuation\">,</span> biases<span class=\"token punctuation\">.</span>shape\r\n\r\n<span class=\"token comment\"># (array([-0.650878  , -0.28385457,  0.28233323, -0.3790987 ], dtype=float32),</span>\r\n<span class=\"token comment\">#  (4,))</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<hr>\n<h3 id=\"cnn\" style=\"position:relative;\">CNN<a href=\"#cnn\" aria-label=\"cnn permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<ul>\n<li>03_CNN.ipynb</li>\n</ul>\n<p>강사님께 파일 링크를 제공받았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">\r\n<span class=\"token keyword\">import</span> zipfile\r\n\r\n!wget https<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>storage<span class=\"token punctuation\">.</span>googleapis<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>ztm_tf_course<span class=\"token operator\">/</span>food_vision<span class=\"token operator\">/</span>pizza_steak<span class=\"token punctuation\">.</span><span class=\"token builtin\">zip</span>\r\n\r\nzip_ref <span class=\"token operator\">=</span> zipfile<span class=\"token punctuation\">.</span>ZipFile<span class=\"token punctuation\">(</span><span class=\"token string\">\"pizza_steak.zip\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\r\nzip_ref<span class=\"token punctuation\">.</span>extractall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nzip_ref<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>데이터 분석을 하든 머신러닝을 하든 아주 중요한 첫 단계는 데이터와 하나가 되는 것,<br>\n즉, 데이터를 살펴보고 알아보는 것 => 시각화 이용할 수도 있고, 간단한 통계량을 활용할 수도 있습니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> os\r\n\r\n<span class=\"token keyword\">for</span> dirpath<span class=\"token punctuation\">,</span> dirnames<span class=\"token punctuation\">,</span> filenames <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span><span class=\"token string\">\"pizza_steak\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>dirpath<span class=\"token punctuation\">}</span></span><span class=\"token string\">에는 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>dirnames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">개의 디렉토리와 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>filenames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">개의 파일이 존재합니다.\"</span></span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># pizza_steak에는 2개의 디렉토리와 1개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># pizza_steak\\test에는 2개의 디렉토리와 1개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># pizza_steak\\test\\pizza에는 0개의 디렉토리와 250개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># pizza_steak\\test\\steak에는 0개의 디렉토리와 250개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># pizza_steak\\train에는 2개의 디렉토리와 1개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># pizza_steak\\train\\pizza에는 0개의 디렉토리와 750개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># pizza_steak\\train\\steak에는 0개의 디렉토리와 750개의 파일이 존재합니다.   </span>\r\n\r\nnum_steak_images_train <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span><span class=\"token string\">\"pizza_steak/train/steak\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\nnum_steak_images_train\r\n<span class=\"token comment\"># 750</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>pyplot <span class=\"token keyword\">as</span> plt\r\n<span class=\"token keyword\">import</span> matplotlib<span class=\"token punctuation\">.</span>image <span class=\"token keyword\">as</span> mpimg\r\n<span class=\"token keyword\">import</span> random\r\n\r\n<span class=\"token keyword\">def</span> <span class=\"token function\">view_random_image</span><span class=\"token punctuation\">(</span>target_dir<span class=\"token punctuation\">,</span> target_class<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    target_folder <span class=\"token operator\">=</span> target_dir <span class=\"token operator\">+</span> target_class\r\n    random_image <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>sample<span class=\"token punctuation\">(</span>os<span class=\"token punctuation\">.</span>listdir<span class=\"token punctuation\">(</span>target_folder<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n\r\n    img <span class=\"token operator\">=</span> mpimg<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span>target_folder <span class=\"token operator\">+</span> <span class=\"token string\">\"/\"</span> <span class=\"token operator\">+</span> random_image<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n    plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\r\n    plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span>target_class<span class=\"token punctuation\">)</span>\r\n    plt<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span><span class=\"token string\">\"off\"</span><span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Image shape: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>img<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\n\r\n    <span class=\"token keyword\">return</span> img\r\n\r\nimg <span class=\"token operator\">=</span> view_random_image<span class=\"token punctuation\">(</span>target_dir <span class=\"token operator\">=</span> <span class=\"token string\">\"pizza_steak/train/\"</span><span class=\"token punctuation\">,</span> target_class <span class=\"token operator\">=</span> <span class=\"token string\">\"steak\"</span><span class=\"token punctuation\">)</span>   \r\nimg <span class=\"token operator\">=</span> view_random_image<span class=\"token punctuation\">(</span>target_dir <span class=\"token operator\">=</span> <span class=\"token string\">\"pizza_steak/train/\"</span><span class=\"token punctuation\">,</span> target_class <span class=\"token operator\">=</span> <span class=\"token string\">\"pizza\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> 이미지를 확인해 보자. 피자/스테이크라고 말하기 애매한 이미지도 보인다. 이미지 크기도 조금씩 다르다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">img\r\n\r\n<span class=\"token comment\"># array([[[ 21,  29,  16],</span>\r\n<span class=\"token comment\">#         [ 22,  30,  17],</span>\r\n<span class=\"token comment\">#         [ 21,  29,  16],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [235, 231, 186],</span>\r\n<span class=\"token comment\">#         [234, 225, 182],</span>\r\n<span class=\"token comment\">#         [233, 225, 179]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[ 21,  29,  16],</span>\r\n<span class=\"token comment\">#         [ 23,  31,  18],</span>\r\n<span class=\"token comment\">#         [ 21,  29,  16],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [237, 230, 186],</span>\r\n<span class=\"token comment\">#         [232, 224, 178],</span>\r\n<span class=\"token comment\">#         [230, 222, 175]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[ 18,  28,  17],</span>\r\n<span class=\"token comment\">#         [ 19,  29,  18],</span>\r\n<span class=\"token comment\">#         [ 17,  27,  16],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [234, 228, 180],</span>\r\n<span class=\"token comment\">#         [230, 222, 173],</span>\r\n<span class=\"token comment\">#         [229, 219, 170]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        ...,</span>\r\n<span class=\"token comment\"># show more (open the raw output data in a text editor) ...</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [ 16,  19,  10],</span>\r\n<span class=\"token comment\">#         [ 12,  18,   8],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [162, 179, 186],</span>\r\n<span class=\"token comment\">#         [160, 177, 184],</span>\r\n<span class=\"token comment\">#         [159, 178, 184]]], dtype=uint8)</span>\r\n\r\nimg<span class=\"token punctuation\">.</span>shape <span class=\"token comment\"># rutnrm의 형태는 (width, height, color channel = RGB)</span>\r\n<span class=\"token comment\"># (512, 382, 3)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/RGB_color_model\">https://en.wikipedia.org/wiki/RGB_color_model</a></li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">img <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">.</span> <span class=\"token comment\"># 값을 0 ~ 1 사이로 scaling => normalization</span>\r\n\r\n<span class=\"token comment\"># array([[[0.08235294, 0.11372549, 0.0627451 ],</span>\r\n<span class=\"token comment\">#         [0.08627451, 0.11764706, 0.06666667],</span>\r\n<span class=\"token comment\">#         [0.08235294, 0.11372549, 0.0627451 ],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [0.92156863, 0.90588235, 0.72941176],</span>\r\n<span class=\"token comment\">#         [0.91764706, 0.88235294, 0.71372549],</span>\r\n<span class=\"token comment\">#         [0.91372549, 0.88235294, 0.70196078]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[0.08235294, 0.11372549, 0.0627451 ],</span>\r\n<span class=\"token comment\">#         [0.09019608, 0.12156863, 0.07058824],</span>\r\n<span class=\"token comment\">#         [0.08235294, 0.11372549, 0.0627451 ],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [0.92941176, 0.90196078, 0.72941176],</span>\r\n<span class=\"token comment\">#         [0.90980392, 0.87843137, 0.69803922],</span>\r\n<span class=\"token comment\">#         [0.90196078, 0.87058824, 0.68627451]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        [[0.07058824, 0.10980392, 0.06666667],</span>\r\n<span class=\"token comment\">#         [0.0745098 , 0.11372549, 0.07058824],</span>\r\n<span class=\"token comment\">#         [0.06666667, 0.10588235, 0.0627451 ],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [0.91764706, 0.89411765, 0.70588235],</span>\r\n<span class=\"token comment\">#         [0.90196078, 0.87058824, 0.67843137],</span>\r\n<span class=\"token comment\">#         [0.89803922, 0.85882353, 0.66666667]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#        ...,</span>\r\n<span class=\"token comment\"># show more (open the raw output data in a text editor) ...</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [0.0627451 , 0.0745098 , 0.03921569],</span>\r\n<span class=\"token comment\">#         [0.04705882, 0.07058824, 0.03137255],</span>\r\n<span class=\"token comment\">#         ...,</span>\r\n<span class=\"token comment\">#         [0.63529412, 0.70196078, 0.72941176],</span>\r\n<span class=\"token comment\">#         [0.62745098, 0.69411765, 0.72156863],</span>\r\n<span class=\"token comment\">#         [0.62352941, 0.69803922, 0.72156863]]])</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> 학습을 위해 이미지 전처리를 하고 학습해 보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> tensorflow <span class=\"token keyword\">as</span> tf\r\n<span class=\"token keyword\">from</span> tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>preprocessing<span class=\"token punctuation\">.</span>image <span class=\"token keyword\">import</span> ImageDataGenerator\r\ntf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>set_seed<span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\r\n\r\ntrain_datagenerator <span class=\"token operator\">=</span> ImageDataGenerator<span class=\"token punctuation\">(</span>rescale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\r\nvalid_datagenerator <span class=\"token operator\">=</span> ImageDataGenerator<span class=\"token punctuation\">(</span>rescale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\r\n\r\ntrain_dir <span class=\"token operator\">=</span> <span class=\"token string\">\"pizza_steak/train/\"</span>\r\ntest_dir <span class=\"token operator\">=</span> <span class=\"token string\">\"pizza_steak/test/\"</span>\r\n\r\ntrain_data <span class=\"token operator\">=</span> train_datagenerator<span class=\"token punctuation\">.</span>flow_from_directory<span class=\"token punctuation\">(</span>\r\n                train_dir<span class=\"token punctuation\">,</span>\r\n                batch_size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 한 번에 처리할 이미지의 갯수르 지정</span>\r\n                target_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 이미지의 크기를 224, 224로 조정 (resize)</span>\r\n                class_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 우리가 처리할 방법</span>\r\n                seed <span class=\"token operator\">=</span> <span class=\"token number\">42</span>\r\n<span class=\"token punctuation\">)</span>\r\nvalid_data <span class=\"token operator\">=</span> valid_datagenerator<span class=\"token punctuation\">.</span>flow_from_directory<span class=\"token punctuation\">(</span>\r\n                test_dir<span class=\"token punctuation\">,</span>\r\n                batch_size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 한 번에 처리할 이미지의 갯수르 지정</span>\r\n                target_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 이미지의 크기를 224, 224로 조정 (resize)</span>\r\n                class_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 우리가 처리할 방법</span>\r\n                seed <span class=\"token operator\">=</span> <span class=\"token number\">42</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\nmodel_1 <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>models<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Conv2D<span class=\"token punctuation\">(</span>\r\n        filters <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\r\n        kernel_size <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># (3, 3)</span>\r\n        activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">,</span>\r\n        input_shape <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>MaxPool2D<span class=\"token punctuation\">(</span>\r\n        pool_size <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># (2, 2)</span>\r\n        padding <span class=\"token operator\">=</span> <span class=\"token string\">\"valid\"</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>MaxPool2D<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"sigmoid\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\nmodel_1<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>\r\n    loss <span class=\"token operator\">=</span> <span class=\"token string\">\"binary_crossentropy\"</span><span class=\"token punctuation\">,</span>\r\n    optimizer <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>optimizers<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"accuracy\"</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\nhistory_1 <span class=\"token operator\">=</span> model_1<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>\r\n    train_data<span class=\"token punctuation\">,</span>\r\n    epochs <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\r\n    validation_data <span class=\"token operator\">=</span> valid_data\r\n<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Found 1500 images belonging to 2 classes.</span>\r\n<span class=\"token comment\"># Found 500 images belonging to 2 classes.</span>\r\n<span class=\"token comment\"># Epoch 1/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 76s 2s/step - loss: 0.5611 - accuracy: 0.7013 - val_loss: 0.4231 - val_accuracy: 0.8160</span>\r\n<span class=\"token comment\"># Epoch 2/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 68s 1s/step - loss: 0.4222 - accuracy: 0.8180 - val_loss: 0.3404 - val_accuracy: 0.8580</span>\r\n<span class=\"token comment\"># Epoch 3/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 69s 1s/step - loss: 0.3916 - accuracy: 0.8320 - val_loss: 0.3208 - val_accuracy: 0.8520</span>\r\n<span class=\"token comment\"># Epoch 4/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 70s 1s/step - loss: 0.3464 - accuracy: 0.8500 - val_loss: 0.2899 - val_accuracy: 0.8800</span>\r\n<span class=\"token comment\"># Epoch 5/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 66s 1s/step - loss: 0.3091 - accuracy: 0.8767 - val_loss: 0.3040 - val_accuracy: 0.8660</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">model_1<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Model: \"sequential\"</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># Layer (type)                 Output Shape              Param #   </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># conv2d_4 (Conv2D)            (None, 222, 222, 10)      280       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># conv2d_5 (Conv2D)            (None, 220, 220, 10)      910       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># max_pooling2d_2 (MaxPooling2 (None, 110, 110, 10)      0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># conv2d_6 (Conv2D)            (None, 108, 108, 10)      910       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># conv2d_7 (Conv2D)            (None, 106, 106, 10)      910       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># max_pooling2d_3 (MaxPooling2 (None, 53, 53, 10)        0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># flatten (Flatten)            (None, 28090)             0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense (Dense)                (None, 1)                 28091     </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># Total params: 31,101</span>\r\n<span class=\"token comment\"># Trainable params: 31,101</span>\r\n<span class=\"token comment\"># Non-trainable params: 0</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>어제 만든 model_15를 참고해 model_2를 만든다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">tf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>set_seed<span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 1. 모델을 create</span>\r\nmodel_2 <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Flatten<span class=\"token punctuation\">(</span>input_shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>activations<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>activations<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>activations<span class=\"token punctuation\">.</span>sigmoid<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 2. 모델을 compile</span>\r\nmodel_2<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>\r\n    loss <span class=\"token operator\">=</span> <span class=\"token string\">\"binary_crossentropy\"</span><span class=\"token punctuation\">,</span>\r\n    optimizer <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>optimizers<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"accuracy\"</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 3. 모델을 fit</span>\r\nhistory_model_2 <span class=\"token operator\">=</span> model_2<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>train_data<span class=\"token punctuation\">,</span> epochs <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> validation_data <span class=\"token operator\">=</span> valid_data<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Epoch 1/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 17s 332ms/step - loss: 1.4543 - accuracy: 0.5027 - val_loss: 0.6932 - val_accuracy: 0.5000</span>\r\n<span class=\"token comment\"># Epoch 2/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 15s 312ms/step - loss: 0.6932 - accuracy: 0.5000 - val_loss: 0.6932 - val_accuracy: 0.5000</span>\r\n<span class=\"token comment\"># Epoch 3/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 17s 371ms/step - loss: 0.6932 - accuracy: 0.5000 - val_loss: 0.6932 - val_accuracy: 0.5000</span>\r\n<span class=\"token comment\"># Epoch 4/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 14s 308ms/step - loss: 0.6932 - accuracy: 0.5000 - val_loss: 0.6932 - val_accuracy: 0.5000</span>\r\n<span class=\"token comment\"># Epoch 5/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 15s 311ms/step - loss: 0.6932 - accuracy: 0.5000 - val_loss: 0.6932 - val_accuracy: 0.5000</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">model_2<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Model: \"sequential_3\"</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># Layer (type)                 Output Shape              Param #   </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># flatten_3 (Flatten)          (None, 150528)            0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense_7 (Dense)              (None, 4)                 602116    </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense_8 (Dense)              (None, 4)                 20        </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense_9 (Dense)              (None, 1)                 5         </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># Total params: 602,141</span>\r\n<span class=\"token comment\"># Trainable params: 602,141</span>\r\n<span class=\"token comment\"># Non-trainable params: 0</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>summary에서 parameter들은 데이터에서 모델이 학습할 수 있는 패턴들로 간주할 수 있다.<br>\n직관적으로 생각한다면 parameter 갯수가 많으면 많을수록 더 좋지 않을까 합니다.<br>\nmodel_2에서는 dense 층을 많이 사용했고, 이 층을 이루는 parameter들은 서로 연결되어 있고,<br>\n학습해야 할 패턴들이 많아진다.<br>\nmodel_1에서 사용한 CNN (Convolutional Neural Network)는 이미지에서 가장 중요한 패턴을 찾으려고 노력합니다.<br>\n그래서 parameter가 갯수가 적더라도, 이미지에서 서로 다른 feature (특징)들을 구분하는데 도움이 됩니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\"># 성능을 높이기 위해서 Layer를 추가하고, 각 레이어의 뉴런을 늘려본다.</span>\r\ntf<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>set_seed<span class=\"token punctuation\">(</span><span class=\"token number\">42</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 1. 모델을 create</span>\r\nmodel_3 <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Flatten<span class=\"token punctuation\">(</span>input_shape<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>activations<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>activations<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>activations<span class=\"token punctuation\">.</span>relu<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> activation<span class=\"token operator\">=</span>tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>activations<span class=\"token punctuation\">.</span>sigmoid<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 2. 모델을 compile</span>\r\nmodel_3<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>\r\n    loss <span class=\"token operator\">=</span> <span class=\"token string\">\"binary_crossentropy\"</span><span class=\"token punctuation\">,</span>\r\n    optimizer <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>optimizers<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"accuracy\"</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 3. 모델을 fit</span>\r\nhistory_model_3 <span class=\"token operator\">=</span> model_3<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>train_data<span class=\"token punctuation\">,</span> epochs <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span> validation_data <span class=\"token operator\">=</span> valid_data<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Epoch 1/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 18s 365ms/step - loss: 3.8343 - accuracy: 0.6087 - val_loss: 0.5905 - val_accuracy: 0.7380</span>\r\n<span class=\"token comment\"># Epoch 2/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 18s 385ms/step - loss: 0.7791 - accuracy: 0.7040 - val_loss: 0.4837 - val_accuracy: 0.7960</span>\r\n<span class=\"token comment\"># Epoch 3/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 18s 378ms/step - loss: 0.6030 - accuracy: 0.7333 - val_loss: 0.4976 - val_accuracy: 0.7660</span>\r\n<span class=\"token comment\"># Epoch 4/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 18s 391ms/step - loss: 0.5303 - accuracy: 0.7587 - val_loss: 0.6026 - val_accuracy: 0.7260</span>\r\n<span class=\"token comment\"># Epoch 5/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 16s 340ms/step - loss: 0.4746 - accuracy: 0.7813 - val_loss: 0.5549 - val_accuracy: 0.7540</span>\r\n\r\nmodel_3<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Model: \"sequential_4\"</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># Layer (type)                 Output Shape              Param #   </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># flatten_4 (Flatten)          (None, 150528)            0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense_10 (Dense)             (None, 100)               15052900  </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense_11 (Dense)             (None, 100)               10100     </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense_12 (Dense)             (None, 100)               10100     </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense_13 (Dense)             (None, 1)                 101       </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># Total params: 15,073,201</span>\r\n<span class=\"token comment\"># Trainable params: 15,073,201</span>\r\n<span class=\"token comment\"># Non-trainable params: 0</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> 여전히 model_1보다 성능이 낮다. CNN이 적은 파라미터 수로 좋은 성능은 보여 이미지에서는 강력하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nplt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\nsteak_img <span class=\"token operator\">=</span> view_random_image<span class=\"token punctuation\">(</span><span class=\"token string\">\"pizza_steak/train/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"steak\"</span><span class=\"token punctuation\">)</span>\r\nplt<span class=\"token punctuation\">.</span>subplot<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\r\npizza_img <span class=\"token operator\">=</span> view_random_image<span class=\"token punctuation\">(</span><span class=\"token string\">\"pizza_steak/train/\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pizza\"</span><span class=\"token punctuation\">)</span>\r\n\r\ntrain_dir <span class=\"token operator\">=</span> <span class=\"token string\">\"pizza_steak/train/\"</span>\r\ntest_dir <span class=\"token operator\">=</span> <span class=\"token string\">\"pizza_steak/test/\"</span>\r\n\r\n<span class=\"token keyword\">from</span> tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>preprocessing<span class=\"token punctuation\">.</span>image <span class=\"token keyword\">import</span> ImageDataGenerator\r\n\r\ntrain_datagenerator <span class=\"token operator\">=</span> ImageDataGenerator<span class=\"token punctuation\">(</span>rescale<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\r\ntest_datagenerator <span class=\"token operator\">=</span> ImageDataGenerator<span class=\"token punctuation\">(</span>rescale<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">)</span>\r\n\r\ntrain_data <span class=\"token operator\">=</span> train_datagenerator<span class=\"token punctuation\">.</span>flow_from_directory<span class=\"token punctuation\">(</span>\r\n    directory <span class=\"token operator\">=</span> train_dir<span class=\"token punctuation\">,</span>\r\n    target_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    class_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">,</span>\r\n    batch_size <span class=\"token operator\">=</span> <span class=\"token number\">32</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\ntest_data <span class=\"token operator\">=</span> test_datagenerator<span class=\"token punctuation\">.</span>flow_from_directory<span class=\"token punctuation\">(</span>\r\n    directory <span class=\"token operator\">=</span> test_dir<span class=\"token punctuation\">,</span>\r\n    target_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    class_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">,</span>\r\n    batch_size <span class=\"token operator\">=</span> <span class=\"token number\">32</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Found 1500 images belonging to 2 classes.</span>\r\n<span class=\"token comment\"># Found 500 images belonging to 2 classes.</span>\r\n\r\nimages<span class=\"token punctuation\">,</span> labels <span class=\"token operator\">=</span> train_data<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>labels<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># (32, 32)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li><a href=\"https://twitter.com/ylecun/status/989610208497360896?s=20\">https://twitter.com/ylecun/status/989610208497360896?s=20</a></li>\n</ul>\n<p>=> model_1으로 간결한 model_4를 만든다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">model_4 <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>models<span class=\"token punctuation\">.</span>Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Conv2D<span class=\"token punctuation\">(</span>\r\n        filters <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\r\n        kernel_size <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># (3, 3)</span>\r\n        strides <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n        padding <span class=\"token operator\">=</span> <span class=\"token string\">\"valid\"</span><span class=\"token punctuation\">,</span>\r\n        activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">,</span>\r\n        input_shape <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers<span class=\"token punctuation\">.</span>Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"sigmoid\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\nmodel_4<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>\r\n    loss <span class=\"token operator\">=</span> <span class=\"token string\">\"binary_crossentropy\"</span><span class=\"token punctuation\">,</span>\r\n    optimizer <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>optimizers<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"accuracy\"</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\nhistory_4 <span class=\"token operator\">=</span> model_4<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>\r\n    train_data<span class=\"token punctuation\">,</span>\r\n    epochs <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\r\n    validation_data <span class=\"token operator\">=</span> valid_data\r\n<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> pooling이 없어 시간이 오래 걸린다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> pandas <span class=\"token keyword\">as</span> pd\r\npd<span class=\"token punctuation\">.</span>DataFrame<span class=\"token punctuation\">(</span>history_4<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>figsize <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>overfitting이 된 상태!!!<br>\nvalidation loss가 증가하기 시작하면, 학습 데이터를 overfitting이 되어가고 있다<br>\n즉, 너무나도 학습 데이터의 패턴을 잘 학습하기는 했다, 그런데 잘 모르는 데이터에 대해서 대응 잘 못 한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">plot_loss_curves</span><span class=\"token punctuation\">(</span>history<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    loss <span class=\"token operator\">=</span> history<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">[</span><span class=\"token string\">\"loss\"</span><span class=\"token punctuation\">]</span>\r\n    val_loss <span class=\"token operator\">=</span> history<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">[</span><span class=\"token string\">\"val_loss\"</span><span class=\"token punctuation\">]</span>\r\n\r\n    accuracy <span class=\"token operator\">=</span> history<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">[</span><span class=\"token string\">\"accuracy\"</span><span class=\"token punctuation\">]</span>\r\n    val_accuracy <span class=\"token operator\">=</span> history<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">[</span><span class=\"token string\">\"val_accuracy\"</span><span class=\"token punctuation\">]</span>\r\n\r\n    epochs <span class=\"token operator\">=</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>history<span class=\"token punctuation\">.</span>history<span class=\"token punctuation\">[</span><span class=\"token string\">\"loss\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n    plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>epochs<span class=\"token punctuation\">,</span> loss<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"traning_loss\"</span><span class=\"token punctuation\">)</span>\r\n    plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>epochs<span class=\"token punctuation\">,</span> val_loss<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"val_loss\"</span><span class=\"token punctuation\">)</span>\r\n    plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Loss\"</span><span class=\"token punctuation\">)</span>\r\n    plt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"Epochs\"</span><span class=\"token punctuation\">)</span>\r\n    plt<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n    plt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n    plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>epochs<span class=\"token punctuation\">,</span> accuracy<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"traning_accuracy\"</span><span class=\"token punctuation\">)</span>\r\n    plt<span class=\"token punctuation\">.</span>plot<span class=\"token punctuation\">(</span>epochs<span class=\"token punctuation\">,</span> val_accuracy<span class=\"token punctuation\">,</span> label<span class=\"token operator\">=</span><span class=\"token string\">\"val_val_accuracy\"</span><span class=\"token punctuation\">)</span>\r\n    plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Accuracy\"</span><span class=\"token punctuation\">)</span>\r\n    plt<span class=\"token punctuation\">.</span>xlabel<span class=\"token punctuation\">(</span><span class=\"token string\">\"Epochs\"</span><span class=\"token punctuation\">)</span>\r\n    plt<span class=\"token punctuation\">.</span>legend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\nplot_loss_curves<span class=\"token punctuation\">(</span>history_4<span class=\"token punctuation\">)</span>    \r\n\r\nmodel_4<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Model: \"sequential_6\"</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># Layer (type)                 Output Shape              Param #   </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># conv2d_11 (Conv2D)           (None, 222, 222, 10)      280       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># conv2d_12 (Conv2D)           (None, 220, 220, 10)      910       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># conv2d_13 (Conv2D)           (None, 218, 218, 10)      910       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># flatten_6 (Flatten)          (None, 475240)            0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense_15 (Dense)             (None, 1)                 475241    </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># Total params: 477,341</span>\r\n<span class=\"token comment\"># Trainable params: 477,341</span>\r\n<span class=\"token comment\"># Non-trainable params: 0</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> train, valid data에 대한 Loss graph, Accuracy graph 1개씩 나온다. overffiting이다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">model_5 <span class=\"token operator\">=</span> Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    Conv2D<span class=\"token punctuation\">(</span>\r\n        filters <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\r\n        kernel_size <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\r\n        strides <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n        padding <span class=\"token operator\">=</span> <span class=\"token string\">\"valid\"</span><span class=\"token punctuation\">,</span>\r\n        activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">,</span>\r\n        input_shape <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span>pool_size<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"sigmoid\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\nmodel_5<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>\r\n    loss <span class=\"token operator\">=</span> <span class=\"token string\">\"binary_crossentropy\"</span><span class=\"token punctuation\">,</span>\r\n    optimizer <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>optimizers<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"accuracy\"</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\nhistory_5 <span class=\"token operator\">=</span> model_5<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>\r\n    train_data<span class=\"token punctuation\">,</span>\r\n    epochs <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\r\n    validation_data <span class=\"token operator\">=</span> test_data\r\n<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Epoch 1/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 33s 677ms/step - loss: 0.5938 - accuracy: 0.6640 - val_loss: 0.5005 - val_accuracy: 0.7620</span>\r\n<span class=\"token comment\"># Epoch 2/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 28s 597ms/step - loss: 0.5049 - accuracy: 0.7620 - val_loss: 0.4542 - val_accuracy: 0.7840</span>\r\n<span class=\"token comment\"># Epoch 3/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 27s 576ms/step - loss: 0.4420 - accuracy: 0.8113 - val_loss: 0.3660 - val_accuracy: 0.8320</span>\r\n<span class=\"token comment\"># Epoch 4/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 27s 571ms/step - loss: 0.4111 - accuracy: 0.8240 - val_loss: 0.3386 - val_accuracy: 0.8420</span>\r\n<span class=\"token comment\"># Epoch 5/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 30s 635ms/step - loss: 0.3946 - accuracy: 0.8360 - val_loss: 0.3403 - val_accuracy: 0.8520</span>\r\n\r\nmodel_5<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># Model: \"sequential_10\"</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># Layer (type)                 Output Shape              Param #   </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># conv2d_23 (Conv2D)           (None, 222, 222, 10)      280       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># max_pooling2d_10 (MaxPooling (None, 111, 111, 10)      0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># conv2d_24 (Conv2D)           (None, 109, 109, 10)      910       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># max_pooling2d_11 (MaxPooling (None, 54, 54, 10)        0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># conv2d_25 (Conv2D)           (None, 52, 52, 10)        910       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># max_pooling2d_12 (MaxPooling (None, 26, 26, 10)        0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># flatten_10 (Flatten)         (None, 6760)              0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense_19 (Dense)             (None, 1)                 6761      </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># Total params: 8,861</span>\r\n<span class=\"token comment\"># Trainable params: 8,861</span>\r\n<span class=\"token comment\"># Non-trainable params: 0</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>= accuracy가 그렇게 줄어들지 않았다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">plot_loss_curves<span class=\"token punctuation\">(</span>history_5<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span></span></pre></div>\n<p>=> train, valid의 graph가 model_4보다 비슷한 양상을 보인다.</p>\n<p>Convolutional Neural Network 의 특징 => 가능한 이미지에서 중요한 특징, 즉 패턴을 찾겠다!!!<br>\nMaxPooling2D의 특징 => 가장 중요한 패턴 찾았어? 그럼 나는 쓸모없는 것 제거해 줄게!<br>\npool_size가 (2, 2) => 2행 2열짜리, 즉, 한 번에 4개 데이터를 가지고 1개만 선택<br>\npool_size가 (5, 5) => 5행 5열짜리, 즉, 한 번에 25개 데이터를 가지고 1개만 선택</p>\n<hr>\n<h4 id=\"data-augmentation\" style=\"position:relative;\">data Augmentation<a href=\"#data-augmentation\" aria-label=\"data augmentation permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<p>Data Augmentation : overfitting을 방지하는 기법<br>\n학습 데이터를 변형하는 과정 => 데이터의 다양성을 더 추가하여 더 많은 패턴을 익히도록 하는 것!</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">train_datagenerator_augmented <span class=\"token operator\">=</span>  ImageDataGenerator<span class=\"token punctuation\">(</span>\r\n    rescale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span>\r\n    rotation_range <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\r\n    shear_range <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\r\n    zoom_range <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\r\n    width_shift_range <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\r\n    height_shift_range <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\r\n    horizontal_flip <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\ntrain_datagenerator <span class=\"token operator\">=</span> ImageDataGenerator<span class=\"token punctuation\">(</span>rescale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\r\nvalid_datagenerator <span class=\"token operator\">=</span> ImageDataGenerator<span class=\"token punctuation\">(</span>rescale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\r\n\r\ntrain_dir <span class=\"token operator\">=</span> <span class=\"token string\">\"pizza_steak/train/\"</span>\r\ntest_dir <span class=\"token operator\">=</span> <span class=\"token string\">\"pizza_steak/test/\"</span>\r\n\r\ntrain_data_augmented <span class=\"token operator\">=</span> train_datagenerator_augmented<span class=\"token punctuation\">.</span>flow_from_directory<span class=\"token punctuation\">(</span>\r\n    train_dir<span class=\"token punctuation\">,</span>\r\n    batch_size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># 1번에 처리할 이미지의 갯수를 지정</span>\r\n    target_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 이미지의 크기를 224, 244로 조정 (resize)</span>\r\n    class_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 우리가 처리할 방법</span>\r\n    shuffle <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\ntrain_data <span class=\"token operator\">=</span> train_datagenerator<span class=\"token punctuation\">.</span>flow_from_directory<span class=\"token punctuation\">(</span>\r\n    train_dir<span class=\"token punctuation\">,</span>\r\n    batch_size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># 1번에 처리할 이미지의 갯수를 지정</span>\r\n    target_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 이미지의 크기를 224, 244로 조정 (resize)</span>\r\n    class_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 우리가 처리할 방법</span>\r\n    shuffle <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\nvalid_data <span class=\"token operator\">=</span> valid_datagenerator<span class=\"token punctuation\">.</span>flow_from_directory<span class=\"token punctuation\">(</span>\r\n    test_dir<span class=\"token punctuation\">,</span>\r\n    batch_size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># 1번에 처리할 이미지의 갯수를 지정</span>\r\n    target_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 이미지의 크기를 224, 244로 조정 (resize)</span>\r\n    class_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 우리가 처리할 방법</span>\r\n<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># Found 1500 images belonging to 2 classes.</span>\r\n<span class=\"token comment\"># Found 1500 images belonging to 2 classes.</span>\r\n<span class=\"token comment\"># Found 500 images belonging to 2 classes.</span>\r\n\r\nimages<span class=\"token punctuation\">,</span> labels <span class=\"token operator\">=</span> train_data<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\naugmented_images<span class=\"token punctuation\">,</span> augmented_labels <span class=\"token operator\">=</span> train_data_augmented<span class=\"token punctuation\">.</span><span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\nrandom_number <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32</span><span class=\"token punctuation\">)</span>\r\nplt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>images<span class=\"token punctuation\">[</span>random_number<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Original Image\"</span><span class=\"token punctuation\">)</span>\r\nplt<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\r\nplt<span class=\"token punctuation\">.</span>figure<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nplt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>augmented_images<span class=\"token punctuation\">[</span>random_number<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string\">\"Augmented Image\"</span><span class=\"token punctuation\">)</span>\r\nplt<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> 같은 이미지인데, 아래 꺼가 약간 변형된 이미지임을 알아볼 수 있다. 이 Augmented data로 학습을 해본다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">model_6 <span class=\"token operator\">=</span> Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    Conv2D<span class=\"token punctuation\">(</span>\r\n        filters <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\r\n        kernel_size <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\r\n        strides <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n        padding <span class=\"token operator\">=</span> <span class=\"token string\">\"valid\"</span><span class=\"token punctuation\">,</span>\r\n        activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">,</span>\r\n        input_shape <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span>pool_size<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"sigmoid\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\nmodel_6<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>\r\n    loss <span class=\"token operator\">=</span> <span class=\"token string\">\"binary_crossentropy\"</span><span class=\"token punctuation\">,</span>\r\n    optimizer <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>optimizers<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"accuracy\"</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\nhistory_6 <span class=\"token operator\">=</span> model_6<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>\r\n    train_data_augmented<span class=\"token punctuation\">,</span>\r\n    epochs <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\r\n    validation_data <span class=\"token operator\">=</span> valid_data\r\n<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Epoch 1/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 45s 931ms/step - loss: 0.7396 - accuracy: 0.5160 - val_loss: 0.6892 - val_accuracy: 0.5080</span>\r\n<span class=\"token comment\"># Epoch 2/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 45s 947ms/step - loss: 0.6970 - accuracy: 0.5100 - val_loss: 0.6790 - val_accuracy: 0.7040</span>\r\n<span class=\"token comment\"># Epoch 3/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 47s 994ms/step - loss: 0.6841 - accuracy: 0.6427 - val_loss: 0.6495 - val_accuracy: 0.7280</span>\r\n<span class=\"token comment\"># Epoch 4/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 51s 1s/step - loss: 0.6427 - accuracy: 0.6947 - val_loss: 1.1209 - val_accuracy: 0.5000</span>\r\n<span class=\"token comment\"># Epoch 5/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 47s 994ms/step - loss: 0.6285 - accuracy: 0.6800 - val_loss: 0.5787 - val_accuracy: 0.6940</span>\r\n\r\nplot_loss_curves<span class=\"token punctuation\">(</span>history_6<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> shuffle 안 해서 학습률 떨어진다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">train_data_augmented_shuffled <span class=\"token operator\">=</span> train_datagenerator_augmented<span class=\"token punctuation\">.</span>flow_from_directory<span class=\"token punctuation\">(</span>\r\n    train_dir<span class=\"token punctuation\">,</span>\r\n    batch_size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># 1번에 처리할 이미지의 갯수를 지정</span>\r\n    target_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 이미지의 크기를 224, 244로 조정 (resize)</span>\r\n    class_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 우리가 처리할 방법</span>\r\n    shuffle <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\ntrain_data <span class=\"token operator\">=</span> train_datagenerator<span class=\"token punctuation\">.</span>flow_from_directory<span class=\"token punctuation\">(</span>\r\n    train_dir<span class=\"token punctuation\">,</span>\r\n    batch_size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># 1번에 처리할 이미지의 갯수를 지정</span>\r\n    target_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 이미지의 크기를 224, 244로 조정 (resize)</span>\r\n    class_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 우리가 처리할 방법</span>\r\n    shuffle <span class=\"token operator\">=</span> <span class=\"token boolean\">False</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\nvalid_data <span class=\"token operator\">=</span> valid_datagenerator<span class=\"token punctuation\">.</span>flow_from_directory<span class=\"token punctuation\">(</span>\r\n    test_dir<span class=\"token punctuation\">,</span>\r\n    batch_size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># 1번에 처리할 이미지의 갯수를 지정</span>\r\n    target_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 이미지의 크기를 224, 244로 조정 (resize)</span>\r\n    class_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"binary\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 우리가 처리할 방법</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Found 1500 images belonging to 2 classes.</span>\r\n<span class=\"token comment\"># Found 1500 images belonging to 2 classes.</span>\r\n<span class=\"token comment\"># Found 500 images belonging to 2 classes.</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> 학습 데이터에 shuffle을 추가해 새 모델로 학습한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">model_7 <span class=\"token operator\">=</span> Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    Conv2D<span class=\"token punctuation\">(</span>\r\n        filters <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\r\n        kernel_size <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\r\n        strides <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n        padding <span class=\"token operator\">=</span> <span class=\"token string\">\"valid\"</span><span class=\"token punctuation\">,</span>\r\n        activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">,</span>\r\n        input_shape <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span>pool_size<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"sigmoid\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\nmodel_7<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>\r\n    loss <span class=\"token operator\">=</span> <span class=\"token string\">\"binary_crossentropy\"</span><span class=\"token punctuation\">,</span>\r\n    optimizer <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>optimizers<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"accuracy\"</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\nhistory_7 <span class=\"token operator\">=</span> model_7<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>\r\n    train_data_augmented_shuffed<span class=\"token punctuation\">,</span>\r\n    epochs <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\r\n    validation_data <span class=\"token operator\">=</span> valid_data\r\n<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Epoch 1/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 23s 476ms/step - loss: 0.6493 - accuracy: 0.6060 - val_loss: 0.6015 - val_accuracy: 0.6440</span>\r\n<span class=\"token comment\"># Epoch 2/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 23s 485ms/step - loss: 0.5872 - accuracy: 0.6773 - val_loss: 0.4488 - val_accuracy: 0.8240</span>\r\n<span class=\"token comment\"># Epoch 3/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 23s 495ms/step - loss: 0.5115 - accuracy: 0.7547 - val_loss: 0.3911 - val_accuracy: 0.8260</span>\r\n<span class=\"token comment\"># Epoch 4/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 23s 493ms/step - loss: 0.4872 - accuracy: 0.7700 - val_loss: 0.3490 - val_accuracy: 0.8520</span>\r\n<span class=\"token comment\"># Epoch 5/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 23s 491ms/step - loss: 0.4638 - accuracy: 0.7767 - val_loss: 0.3254 - val_accuracy: 0.8600</span>\r\n\r\nplot_loss_curves<span class=\"token punctuation\">(</span>history_7<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> model_6 보다는 graph가 smooth해 보인다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">model_8 <span class=\"token operator\">=</span> Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    Conv2D<span class=\"token punctuation\">(</span>\r\n        filters <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\r\n        kernel_size <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\r\n        strides <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n        padding <span class=\"token operator\">=</span> <span class=\"token string\">\"valid\"</span><span class=\"token punctuation\">,</span>\r\n        activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">,</span>\r\n        input_shape <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span>pool_size<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Dense<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"sigmoid\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\nmodel_8<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>\r\n    loss <span class=\"token operator\">=</span> <span class=\"token string\">\"binary_crossentropy\"</span><span class=\"token punctuation\">,</span>\r\n    optimizer <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>optimizers<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"accuracy\"</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\nhistory_8 <span class=\"token operator\">=</span> model_8<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>\r\n    train_data_augmented_shuffed<span class=\"token punctuation\">,</span>\r\n    epochs <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\r\n    validation_data <span class=\"token operator\">=</span> valid_data\r\n<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># Epoch 1/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 33s 696ms/step - loss: 0.6113 - accuracy: 0.6413 - val_loss: 0.6678 - val_accuracy: 0.6020</span>\r\n<span class=\"token comment\"># Epoch 2/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 36s 754ms/step - loss: 0.5754 - accuracy: 0.7127 - val_loss: 0.4827 - val_accuracy: 0.8140</span>\r\n<span class=\"token comment\"># Epoch 3/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 35s 745ms/step - loss: 0.5434 - accuracy: 0.7340 - val_loss: 0.4357 - val_accuracy: 0.8080</span>\r\n<span class=\"token comment\"># Epoch 4/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 35s 750ms/step - loss: 0.5374 - accuracy: 0.7533 - val_loss: 0.4053 - val_accuracy: 0.8440</span>\r\n<span class=\"token comment\"># Epoch 5/5</span>\r\n<span class=\"token comment\"># 47/47 [==============================] - 36s 766ms/step - loss: 0.5228 - accuracy: 0.7533 - val_loss: 0.4238 - val_accuracy: 0.8220</span>\r\n\r\nplot_loss_curves<span class=\"token punctuation\">(</span>history_8<span class=\"token punctuation\">)</span>\r\n\r\n\r\nmodel_1<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># Model: \"sequential\"</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># Layer (type)                 Output Shape              Param #   </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># conv2d (Conv2D)              (None, 222, 222, 10)      280       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># conv2d_1 (Conv2D)            (None, 220, 220, 10)      910       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># max_pooling2d (MaxPooling2D) (None, 110, 110, 10)      0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># conv2d_2 (Conv2D)            (None, 108, 108, 10)      910       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># conv2d_3 (Conv2D)            (None, 106, 106, 10)      910       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># max_pooling2d_1 (MaxPooling2 (None, 53, 53, 10)        0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># flatten (Flatten)            (None, 28090)             0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense (Dense)                (None, 1)                 28091     </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># Total params: 31,101</span>\r\n<span class=\"token comment\"># Trainable params: 31,101</span>\r\n<span class=\"token comment\"># Non-trainable params: 0</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n\r\nmodel_8<span class=\"token punctuation\">.</span>summary<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># Model: \"sequential_3\"</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># Layer (type)                 Output Shape              Param #   </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># conv2d_16 (Conv2D)           (None, 222, 222, 10)      280       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># conv2d_17 (Conv2D)           (None, 220, 220, 10)      910       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># max_pooling2d_11 (MaxPooling (None, 110, 110, 10)      0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># conv2d_18 (Conv2D)           (None, 108, 108, 10)      910       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># conv2d_19 (Conv2D)           (None, 106, 106, 10)      910       </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># max_pooling2d_12 (MaxPooling (None, 53, 53, 10)        0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># flatten_7 (Flatten)          (None, 28090)             0         </span>\r\n<span class=\"token comment\"># _________________________________________________________________</span>\r\n<span class=\"token comment\"># dense_12 (Dense)             (None, 1)                 28091     </span>\r\n<span class=\"token comment\"># =================================================================</span>\r\n<span class=\"token comment\"># Total params: 31,101</span>\r\n<span class=\"token comment\"># Trainable params: 31,101</span>\r\n<span class=\"token comment\"># Non-trainable params: 0</span>\r\n<span class=\"token comment\"># _________________________________________________________________</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>model_1과 8의 parameter 수는 31101로 동일하다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>class_name<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># ['pizza' 'steak']</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<p>=> 모델을 test file로 predict 해보자.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">\r\n! wget https<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>raw<span class=\"token punctuation\">.</span>githubusercontent<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>mrdbourke<span class=\"token operator\">/</span>tensorflow<span class=\"token operator\">-</span>deep<span class=\"token operator\">-</span>learning<span class=\"token operator\">/</span>main<span class=\"token operator\">/</span>images<span class=\"token operator\">/</span><span class=\"token number\">03</span><span class=\"token operator\">-</span>steak<span class=\"token punctuation\">.</span>jpeg\r\nsteak <span class=\"token operator\">=</span> mpimg<span class=\"token punctuation\">.</span>imread<span class=\"token punctuation\">(</span><span class=\"token string\">\"03-steak.jpeg\"</span><span class=\"token punctuation\">)</span>\r\nplt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>steak<span class=\"token punctuation\">)</span>\r\nplt<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">steak<span class=\"token punctuation\">.</span>shape\r\n<span class=\"token comment\"># (4032, 3024, 3)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">load_and_pred_image</span><span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">,</span> img_shape<span class=\"token operator\">=</span><span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    img <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>io<span class=\"token punctuation\">.</span>read_file<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span>\r\n    img <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>decode_image<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> channels <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n    img <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>image<span class=\"token punctuation\">.</span>resize<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> size <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>img_shape<span class=\"token punctuation\">,</span> img_shape<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n    img <span class=\"token operator\">=</span> img <span class=\"token operator\">/</span> <span class=\"token number\">255</span><span class=\"token punctuation\">.</span>\r\n\r\n    <span class=\"token keyword\">return</span> img\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">steak <span class=\"token operator\">=</span> load_and_pred_image<span class=\"token punctuation\">(</span><span class=\"token string\">\"03-steak.jpeg\"</span><span class=\"token punctuation\">)</span>\r\nsteak<span class=\"token punctuation\">,</span> steak<span class=\"token punctuation\">.</span>shape\r\n<span class=\"token comment\"># (&lt;tf.Tensor: shape=(224, 224, 3), dtype=float32, numpy=</span>\r\n<span class=\"token comment\">#  array([[[0.6377451 , 0.6220588 , 0.57892156],</span>\r\n<span class=\"token comment\">#          [0.6504902 , 0.63186276, 0.5897059 ],</span>\r\n<span class=\"token comment\">#          [0.63186276, 0.60833335, 0.5612745 ],</span>\r\n<span class=\"token comment\">#          ...,</span>\r\n<span class=\"token comment\">#          [0.52156866, 0.05098039, 0.09019608],</span>\r\n<span class=\"token comment\">#          [0.49509802, 0.04215686, 0.07058824],</span>\r\n<span class=\"token comment\">#          [0.52843136, 0.07745098, 0.10490196]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [[0.6617647 , 0.6460784 , 0.6107843 ],</span>\r\n<span class=\"token comment\">#          [0.6387255 , 0.6230392 , 0.57598037],</span>\r\n<span class=\"token comment\">#          [0.65588236, 0.63235295, 0.5852941 ],</span>\r\n<span class=\"token comment\">#          ...,</span>\r\n<span class=\"token comment\">#          [0.5352941 , 0.06862745, 0.09215686],</span>\r\n<span class=\"token comment\">#          [0.529902  , 0.05931373, 0.09460784],</span>\r\n<span class=\"token comment\">#          [0.5142157 , 0.05539216, 0.08676471]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [[0.6519608 , 0.6362745 , 0.5892157 ],</span>\r\n<span class=\"token comment\">#          [0.6392157 , 0.6137255 , 0.56764704],</span>\r\n<span class=\"token comment\">#          [0.65637255, 0.6269608 , 0.5828431 ],</span>\r\n<span class=\"token comment\">#          ...,</span>\r\n<span class=\"token comment\">#          [0.53137255, 0.06470589, 0.08039216],</span>\r\n<span class=\"token comment\">#          [0.527451  , 0.06862745, 0.1       ],</span>\r\n<span class=\"token comment\">#          [0.52254903, 0.05196078, 0.0872549 ]],</span>\r\n<span class=\"token comment\"># show more (open the raw output data in a text editor) ...</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#          [0.65      , 0.5686275 , 0.44019607],</span>\r\n<span class=\"token comment\">#          ...,</span>\r\n<span class=\"token comment\">#          [0.6308824 , 0.6161765 , 0.5808824 ],</span>\r\n<span class=\"token comment\">#          [0.6519608 , 0.63186276, 0.5901961 ],</span>\r\n<span class=\"token comment\">#          [0.6338235 , 0.6259804 , 0.57892156]]], dtype=float32)>,</span>\r\n<span class=\"token comment\">#  TensorShape([224, 224, 3]))</span>\r\n\r\nmodel_8<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>steak<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># ValueError: in user code:</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#     c:\\20210822\\venv_20210822\\lib\\site-packages\\keras\\engine\\training.py:1586 predict_function  *</span>\r\n<span class=\"token comment\">#         return step_function(self, iterator)</span>\r\n<span class=\"token comment\">#     c:\\20210822\\venv_20210822\\lib\\site-packages\\keras\\engine\\training.py:1576 step_function  **</span>\r\n<span class=\"token comment\">#         outputs = model.distribute_strategy.run(run_step, args=(data,))</span>\r\n<span class=\"token comment\">#     c:\\20210822\\venv_20210822\\lib\\site-packages\\tensorflow\\python\\distribute\\distribute_lib.py:1286 run</span>\r\n<span class=\"token comment\">#         return self._extended.call_for_each_replica(fn, args=args, kwargs=kwargs)</span>\r\n<span class=\"token comment\">#     c:\\20210822\\venv_20210822\\lib\\site-packages\\tensorflow\\python\\distribute\\distribute_lib.py:2849 call_for_each_replica</span>\r\n<span class=\"token comment\">#         return self._call_for_each_replica(fn, args, kwargs)</span>\r\n<span class=\"token comment\">#     c:\\20210822\\venv_20210822\\lib\\site-packages\\tensorflow\\python\\distribute\\distribute_lib.py:3632 _call_for_each_replica</span>\r\n<span class=\"token comment\">#         return fn(*args, **kwargs)</span>\r\n<span class=\"token comment\">#     c:\\20210822\\venv_20210822\\lib\\site-packages\\keras\\engine\\training.py:1569 run_step  **</span>\r\n<span class=\"token comment\">#         outputs = model.predict_step(data)</span>\r\n<span class=\"token comment\">#     c:\\20210822\\venv_20210822\\lib\\site-packages\\keras\\engine\\training.py:1537 predict_step</span>\r\n<span class=\"token comment\">#         return self(x, training=False)</span>\r\n<span class=\"token comment\">#     c:\\20210822\\venv_20210822\\lib\\site-packages\\keras\\engine\\base_layer.py:1020 __call__</span>\r\n<span class=\"token comment\">#         input_spec.assert_input_compatibility(self.input_spec, inputs, self.name)</span>\r\n<span class=\"token comment\">#     c:\\20210822\\venv_20210822\\lib\\site-packages\\keras\\engine\\input_spec.py:229 assert_input_compatibility</span>\r\n<span class=\"token comment\">#         raise ValueError('Input ' + str(input_index) + ' of layer ' +</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#     ValueError: Input 0 of layer sequential_3 is incompatible with the layer: : expected min_ndim=4, found ndim=3. Full shape received: (32, 224, 3)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> 에러가 발생한다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\">## 학습할 때 데이터의 형태 (batch_size, 224, 224, 3)</span>\r\n<span class=\"token comment\">## prediction의 경우 (224, 224, 3) -> (1, 224, 224, 3)의 형태가 되어야 한다!</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>steak<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\nsteak <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>steak<span class=\"token punctuation\">,</span> axis <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>steak<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\nsteak\r\n\r\n<span class=\"token comment\"># (224, 224, 3)</span>\r\n<span class=\"token comment\"># (1, 224, 224, 3)</span>\r\n<span class=\"token comment\"># &lt;tf.Tensor: shape=(1, 224, 224, 3), dtype=float32, numpy=</span>\r\n<span class=\"token comment\"># array([[[[0.6377451 , 0.6220588 , 0.57892156],</span>\r\n<span class=\"token comment\">#          [0.6504902 , 0.63186276, 0.5897059 ],</span>\r\n<span class=\"token comment\">#          [0.63186276, 0.60833335, 0.5612745 ],</span>\r\n<span class=\"token comment\">#          ...,</span>\r\n<span class=\"token comment\">#          [0.52156866, 0.05098039, 0.09019608],</span>\r\n<span class=\"token comment\">#          [0.49509802, 0.04215686, 0.07058824],</span>\r\n<span class=\"token comment\">#          [0.52843136, 0.07745098, 0.10490196]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [[0.6617647 , 0.6460784 , 0.6107843 ],</span>\r\n<span class=\"token comment\">#          [0.6387255 , 0.6230392 , 0.57598037],</span>\r\n<span class=\"token comment\">#          [0.65588236, 0.63235295, 0.5852941 ],</span>\r\n<span class=\"token comment\">#          ...,</span>\r\n<span class=\"token comment\">#          [0.5352941 , 0.06862745, 0.09215686],</span>\r\n<span class=\"token comment\">#          [0.529902  , 0.05931373, 0.09460784],</span>\r\n<span class=\"token comment\">#          [0.5142157 , 0.05539216, 0.08676471]],</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#         [[0.6519608 , 0.6362745 , 0.5892157 ],</span>\r\n<span class=\"token comment\">#          [0.6392157 , 0.6137255 , 0.56764704],</span>\r\n<span class=\"token comment\">#          [0.65637255, 0.6269608 , 0.5828431 ],</span>\r\n<span class=\"token comment\">#          ...,</span>\r\n<span class=\"token comment\">#          [0.53137255, 0.06470589, 0.08039216],</span>\r\n<span class=\"token comment\">#          [0.527451  , 0.06862745, 0.1       ],</span>\r\n<span class=\"token comment\">#          [0.52254903, 0.05196078, 0.0872549 ]],</span>\r\n<span class=\"token comment\"># show more (open the raw output data in a text editor) ...</span>\r\n<span class=\"token comment\">#</span>\r\n<span class=\"token comment\">#          [0.48333332, 0.40882352, 0.29117647],</span>\r\n<span class=\"token comment\">#          [0.65      , 0.5686275 , 0.44019607],</span>\r\n<span class=\"token comment\">#          ...,</span>\r\n<span class=\"token comment\">#          [0.6308824 , 0.6161765 , 0.5808824 ],</span>\r\n<span class=\"token comment\">#          [0.6519608 , 0.63186276, 0.5901961 ],</span>\r\n<span class=\"token comment\">#          [0.6338235 , 0.6259804 , 0.57892156]]]], dtype=float32)></span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">pred <span class=\"token operator\">=</span> model_8<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>steak<span class=\"token punctuation\">)</span>\r\npred\r\n<span class=\"token comment\"># array([[0.82531464]], dtype=float32)</span>\r\n\r\npred_class <span class=\"token operator\">=</span> class_name<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\npred_class\r\n<span class=\"token comment\"># 'steak'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">pred_and_plot</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">,</span> class_names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    img <span class=\"token operator\">=</span> load_and_pred_image<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span>\r\n    pred <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> axis <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n    pred_class <span class=\"token operator\">=</span> class_name<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\n\r\n    plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\r\n    plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Prediction: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>pred_class<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\n    plt<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n\r\npred_and_plot<span class=\"token punctuation\">(</span>model_8<span class=\"token punctuation\">,</span> <span class=\"token string\">\"03-steak.jpeg\"</span><span class=\"token punctuation\">,</span> class_name<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># steak로 예측</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">!wget https<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>raw<span class=\"token punctuation\">.</span>githubusercontent<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>mrdbourke<span class=\"token operator\">/</span>tensorflow<span class=\"token operator\">-</span>deep<span class=\"token operator\">-</span>learning<span class=\"token operator\">/</span>main<span class=\"token operator\">/</span>images<span class=\"token operator\">/</span><span class=\"token number\">03</span><span class=\"token operator\">-</span>pizza<span class=\"token operator\">-</span>dad<span class=\"token punctuation\">.</span>jpeg\r\npred_and_plot<span class=\"token punctuation\">(</span>model_8<span class=\"token punctuation\">,</span> <span class=\"token string\">\"03-pizza-dad.jpeg\"</span><span class=\"token punctuation\">,</span> class_name<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># pizza로 예측</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<hr>\n<h4 id=\"multi-classification-cnn\" style=\"position:relative;\">multi-classification (CNN)<a href=\"#multi-classification-cnn\" aria-label=\"multi classification cnn permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">!wget https<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>storage<span class=\"token punctuation\">.</span>googleapis<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>ztm_tf_course<span class=\"token operator\">/</span>food_vision<span class=\"token operator\">/</span>10_food_classes_all_data<span class=\"token punctuation\">.</span><span class=\"token builtin\">zip</span>\r\n\r\n<span class=\"token keyword\">import</span> zipfile\r\n\r\nzip_ref <span class=\"token operator\">=</span> zipfile<span class=\"token punctuation\">.</span>ZipFile<span class=\"token punctuation\">(</span><span class=\"token string\">\"10_food_classes_all_data.zip\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"r\"</span><span class=\"token punctuation\">)</span>\r\nzip_ref<span class=\"token punctuation\">.</span>extractall<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nzip_ref<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token keyword\">import</span> os\r\n\r\n<span class=\"token keyword\">for</span> dirpath<span class=\"token punctuation\">,</span> dirnames<span class=\"token punctuation\">,</span> filenames <span class=\"token keyword\">in</span> os<span class=\"token punctuation\">.</span>walk<span class=\"token punctuation\">(</span><span class=\"token string\">\"10_food_classes_all_data\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>dirpath<span class=\"token punctuation\">}</span></span><span class=\"token string\">에는 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>dirnames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">개의 디렉토리와 </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>filenames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">}</span></span><span class=\"token string\">개의 파일이 존재합니다.\"</span></span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data에는 2개의 디렉토리와 0개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\test에는 10개의 디렉토리와 0개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\test\\chicken_curry에는 0개의 디렉토리와 250개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\test\\chicken_wings에는 0개의 디렉토리와 250개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\test\\fried_rice에는 0개의 디렉토리와 250개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\test\\grilled_salmon에는 0개의 디렉토리와 250개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\test\\hamburger에는 0개의 디렉토리와 250개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\test\\ice_cream에는 0개의 디렉토리와 250개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\test\\pizza에는 0개의 디렉토리와 250개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\test\\ramen에는 0개의 디렉토리와 250개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\test\\steak에는 0개의 디렉토리와 250개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\test\\sushi에는 0개의 디렉토리와 250개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\train에는 10개의 디렉토리와 0개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\train\\chicken_curry에는 0개의 디렉토리와 750개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\train\\chicken_wings에는 0개의 디렉토리와 750개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\train\\fried_rice에는 0개의 디렉토리와 750개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\train\\grilled_salmon에는 0개의 디렉토리와 750개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\train\\hamburger에는 0개의 디렉토리와 750개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\train\\ice_cream에는 0개의 디렉토리와 750개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\train\\pizza에는 0개의 디렉토리와 750개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\train\\ramen에는 0개의 디렉토리와 750개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\train\\steak에는 0개의 디렉토리와 750개의 파일이 존재합니다.</span>\r\n<span class=\"token comment\"># 10_food_classes_all_data\\train\\sushi에는 0개의 디렉토리와 750개의 파일이 존재합니다.    </span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">train_dir <span class=\"token operator\">=</span> <span class=\"token string\">\"10_food_classes_all_data/train/\"</span>\r\ntest_dir <span class=\"token operator\">=</span> <span class=\"token string\">\"10_food_classes_all_data/test/\"</span>\r\n\r\n<span class=\"token keyword\">import</span> pathlib\r\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\r\ndata_dir <span class=\"token operator\">=</span> pathlib<span class=\"token punctuation\">.</span>Path<span class=\"token punctuation\">(</span>train_dir<span class=\"token punctuation\">)</span>\r\nclass_names <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>array<span class=\"token punctuation\">(</span><span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">.</span>name <span class=\"token keyword\">for</span> item <span class=\"token keyword\">in</span> data_dir<span class=\"token punctuation\">.</span>glob<span class=\"token punctuation\">(</span><span class=\"token string\">\"*\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>class_names<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>class_names<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># 'chicken_curry' 'chicken_wings' 'fried_rice' 'grilled_salmon' 'hamburger'</span>\r\n<span class=\"token comment\">#  'ice_cream' 'pizza' 'ramen' 'steak' 'sushi'] 10</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> random\r\nimg <span class=\"token operator\">=</span> view_random_image<span class=\"token punctuation\">(</span>\r\n    target_dir <span class=\"token operator\">=</span> train_dir<span class=\"token punctuation\">,</span>\r\n    target_class <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>choice<span class=\"token punctuation\">(</span>class_names<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># Image shape: (512, 512, 3)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>preprocessing<span class=\"token punctuation\">.</span>image <span class=\"token keyword\">import</span> ImageDataGenerator\r\n\r\ntrain_datagenerator <span class=\"token operator\">=</span> ImageDataGenerator<span class=\"token punctuation\">(</span>rescale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\r\ntest_datagenerator <span class=\"token operator\">=</span> ImageDataGenerator<span class=\"token punctuation\">(</span>rescale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\r\n\r\ntrain_data <span class=\"token operator\">=</span> train_datagenerator<span class=\"token punctuation\">.</span>flow_from_directory<span class=\"token punctuation\">(</span>\r\n    train_dir<span class=\"token punctuation\">,</span>\r\n    batch_size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># 1번에 처리할 이미지의 갯수를 지정</span>\r\n    target_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 이미지의 크기를 224, 244로 조정 (resize)</span>\r\n    class_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"categorical\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 우리가 처리할 방법    seed = 42</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\ntest_data <span class=\"token operator\">=</span> test_datagenerator<span class=\"token punctuation\">.</span>flow_from_directory<span class=\"token punctuation\">(</span>\r\n    test_dir<span class=\"token punctuation\">,</span>\r\n    batch_size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># 1번에 처리할 이미지의 갯수를 지정</span>\r\n    target_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 이미지의 크기를 224, 244로 조정 (resize)</span>\r\n    class_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"categorical\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 우리가 처리할 방법</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Found 7500 images belonging to 10 classes.</span>\r\n<span class=\"token comment\"># Found 2500 images belonging to 10 classes.</span>\r\n</code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> tensorflow <span class=\"token keyword\">as</span> tf\r\n<span class=\"token keyword\">from</span> tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Sequential\r\n<span class=\"token keyword\">from</span> tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers <span class=\"token keyword\">import</span> Conv2D<span class=\"token punctuation\">,</span> MaxPool2D<span class=\"token punctuation\">,</span> Flatten<span class=\"token punctuation\">,</span> Dense\r\n\r\nmodel_9 <span class=\"token operator\">=</span> Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    Conv2D<span class=\"token punctuation\">(</span>\r\n        filters <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\r\n        kernel_size <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\r\n        strides <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n        padding <span class=\"token operator\">=</span> <span class=\"token string\">\"valid\"</span><span class=\"token punctuation\">,</span>\r\n        activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">,</span>\r\n        input_shape <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span>pool_size<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Dense<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"softmax\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\nmodel_9<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>\r\n    loss <span class=\"token operator\">=</span> <span class=\"token string\">\"categorical_crossentropy\"</span><span class=\"token punctuation\">,</span>\r\n    optimizer <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>optimizers<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"accuracy\"</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\nhistory_9 <span class=\"token operator\">=</span> model_9<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>\r\n    train_data<span class=\"token punctuation\">,</span>\r\n    epochs <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\r\n    validation_data <span class=\"token operator\">=</span> test_data\r\n<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Epoch 1/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 290s 1s/step - loss: 2.1632 - accuracy: 0.2125 - val_loss: 1.9801 - val_accuracy: 0.2956</span>\r\n<span class=\"token comment\"># Epoch 2/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 336s 1s/step - loss: 1.9607 - accuracy: 0.3092 - val_loss: 1.9483 - val_accuracy: 0.3052</span>\r\n<span class=\"token comment\"># Epoch 3/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 341s 1s/step - loss: 1.7412 - accuracy: 0.4037 - val_loss: 1.9070 - val_accuracy: 0.3244</span>\r\n<span class=\"token comment\"># Epoch 4/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 345s 1s/step - loss: 1.2993 - accuracy: 0.5632 - val_loss: 2.1218 - val_accuracy: 0.3080</span>\r\n<span class=\"token comment\"># Epoch 5/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 327s 1s/step - loss: 0.7616 - accuracy: 0.7507 - val_loss: 2.7053 - val_accuracy: 0.2876</span>\r\n\r\nplot_loss_curves<span class=\"token punctuation\">(</span>history_9<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> overfitting으로 보인다.</p>\n<p>overfitting을 막으려고 하는 것을 ==>  regularization 이라고 합니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">import</span> tensorflow <span class=\"token keyword\">as</span> tf\r\n<span class=\"token keyword\">from</span> tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>models <span class=\"token keyword\">import</span> Sequential\r\n<span class=\"token keyword\">from</span> tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>layers <span class=\"token keyword\">import</span> Conv2D<span class=\"token punctuation\">,</span> MaxPool2D<span class=\"token punctuation\">,</span> Flatten<span class=\"token punctuation\">,</span> Dense\r\n\r\nmodel_10 <span class=\"token operator\">=</span> Sequential<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\r\n    Conv2D<span class=\"token punctuation\">(</span>\r\n        filters <span class=\"token operator\">=</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\r\n        kernel_size <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span>\r\n        strides <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\r\n        padding <span class=\"token operator\">=</span> <span class=\"token string\">\"valid\"</span><span class=\"token punctuation\">,</span>\r\n        activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">,</span>\r\n        input_shape <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span>pool_size<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Conv2D<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"relu\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    MaxPool2D<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Flatten<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    Dense<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> activation <span class=\"token operator\">=</span> <span class=\"token string\">\"softmax\"</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n\r\nmodel_10<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>\r\n    loss <span class=\"token operator\">=</span> <span class=\"token string\">\"categorical_crossentropy\"</span><span class=\"token punctuation\">,</span>\r\n    optimizer <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>optimizers<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"accuracy\"</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\nhistory_10 <span class=\"token operator\">=</span> model_10<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>\r\n    train_data<span class=\"token punctuation\">,</span>\r\n    epochs <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\r\n    validation_data <span class=\"token operator\">=</span> test_data\r\n<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># Epoch 1/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 138s 584ms/step - loss: 2.2089 - accuracy: 0.2120 - val_loss: 2.0156 - val_accuracy: 0.2664</span>\r\n<span class=\"token comment\"># Epoch 2/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 149s 633ms/step - loss: 1.7792 - accuracy: 0.3865 - val_loss: 1.9952 - val_accuracy: 0.2952</span>\r\n<span class=\"token comment\"># Epoch 3/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 133s 567ms/step - loss: 1.3212 - accuracy: 0.5672 - val_loss: 2.0913 - val_accuracy: 0.2920</span>\r\n<span class=\"token comment\"># Epoch 4/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 149s 634ms/step - loss: 0.8389 - accuracy: 0.7439 - val_loss: 2.4251 - val_accuracy: 0.2820</span>\r\n<span class=\"token comment\"># Epoch 5/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 141s 600ms/step - loss: 0.4359 - accuracy: 0.8827 - val_loss: 3.0127 - val_accuracy: 0.2612</span>\r\n\r\nplot_loss_curves<span class=\"token punctuation\">(</span>history_10<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">train_datagenerator_augmented <span class=\"token operator\">=</span> ImageDataGenerator<span class=\"token punctuation\">(</span>\r\n    rescale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">,</span>\r\n    rotation_range <span class=\"token operator\">=</span> <span class=\"token number\">20</span><span class=\"token punctuation\">,</span>\r\n    shear_range <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\r\n    zoom_range <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\r\n    width_shift_range <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\r\n    height_shift_range <span class=\"token operator\">=</span> <span class=\"token number\">0.2</span><span class=\"token punctuation\">,</span>\r\n    horizontal_flip <span class=\"token operator\">=</span> <span class=\"token boolean\">True</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\ntrain_data_augmented <span class=\"token operator\">=</span> train_datagenerator_augmented<span class=\"token punctuation\">.</span>flow_from_directory<span class=\"token punctuation\">(</span>\r\n    train_dir<span class=\"token punctuation\">,</span>\r\n    batch_size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>   <span class=\"token comment\"># 1번에 처리할 이미지의 갯수를 지정</span>\r\n    target_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 이미지의 크기를 224, 244로 조정 (resize)</span>\r\n    class_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"categorical\"</span><span class=\"token punctuation\">,</span> <span class=\"token comment\"># 우리가 처리할 방법</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Found 7500 images belonging to 10 classes.</span>\r\n\r\nmodel_11 <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>models<span class=\"token punctuation\">.</span>clone_model<span class=\"token punctuation\">(</span>model_10<span class=\"token punctuation\">)</span>\r\n\r\nmodel_11<span class=\"token punctuation\">.</span><span class=\"token builtin\">compile</span><span class=\"token punctuation\">(</span>\r\n    loss <span class=\"token operator\">=</span> <span class=\"token string\">\"categorical_crossentropy\"</span><span class=\"token punctuation\">,</span>\r\n    optimizer <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>optimizers<span class=\"token punctuation\">.</span>Adam<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    metrics <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"accuracy\"</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\nhistory_11 <span class=\"token operator\">=</span> model_11<span class=\"token punctuation\">.</span>fit<span class=\"token punctuation\">(</span>\r\n    train_data_augmented<span class=\"token punctuation\">,</span>\r\n    epochs <span class=\"token operator\">=</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\r\n    validation_data <span class=\"token operator\">=</span> test_data\r\n<span class=\"token punctuation\">)</span>\r\n\r\n<span class=\"token comment\"># Epoch 1/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 322s 1s/step - loss: 2.2189 - accuracy: 0.2039 - val_loss: 2.0249 - val_accuracy: 0.2740</span>\r\n<span class=\"token comment\"># Epoch 2/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 323s 1s/step - loss: 2.0510 - accuracy: 0.2707 - val_loss: 1.9377 - val_accuracy: 0.3184</span>\r\n<span class=\"token comment\"># Epoch 3/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 345s 1s/step - loss: 2.0235 - accuracy: 0.2903 - val_loss: 1.8703 - val_accuracy: 0.3364</span>\r\n<span class=\"token comment\"># Epoch 4/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 347s 1s/step - loss: 1.9982 - accuracy: 0.2991 - val_loss: 1.8494 - val_accuracy: 0.3676</span>\r\n<span class=\"token comment\"># Epoch 5/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 366s 2s/step - loss: 1.9751 - accuracy: 0.3169 - val_loss: 1.8192 - val_accuracy: 0.3508</span>\r\n\r\nplot_loss_curves<span class=\"token punctuation\">(</span>history_11<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<p>=> epochs가 부족해서 학습이 덜 된 것으로 보인다.</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">class_names\r\n\r\n<span class=\"token comment\"># array(['002_pytorch.ipynb', 'chicken_curry', 'chicken_wings',</span>\r\n<span class=\"token comment\">#        'fried_rice', 'grilled_salmon', 'hamburger', 'ice_cream', 'pizza',</span>\r\n<span class=\"token comment\">#        'ramen', 'steak', 'sushi'], dtype='&lt;U17')</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">pred_and_plot<span class=\"token punctuation\">(</span>\r\nmodel <span class=\"token operator\">=</span> model_11<span class=\"token punctuation\">,</span>\r\nfilename <span class=\"token operator\">=</span> <span class=\"token string\">\"03-steak.jpeg\"</span><span class=\"token punctuation\">,</span>\r\nclass_names <span class=\"token operator\">=</span> class_names\r\n<span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">img <span class=\"token operator\">=</span> load_and_pred_image<span class=\"token punctuation\">(</span><span class=\"token string\">\"03-steak.jpeg\"</span><span class=\"token punctuation\">)</span>\r\npred <span class=\"token operator\">=</span> model_11<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\npred\r\n<span class=\"token comment\"># array([[0.03453452, 0.03666642, 0.09922207, 0.25764412, 0.05572828,</span>\r\n<span class=\"token comment\">#         0.1552842 , 0.02415404, 0.10833126, 0.14857659, 0.07985856]],</span>\r\n<span class=\"token comment\">#       dtype=float32)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">pred_class <span class=\"token operator\">=</span> class_names<span class=\"token punctuation\">[</span>pred<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\npred_class <span class=\"token comment\"># 'fried_rice'</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\r\nplt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span>pred_class<span class=\"token punctuation\">)</span>\r\nplt<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">def</span> <span class=\"token function\">pred_and_plot_multi</span><span class=\"token punctuation\">(</span>model<span class=\"token punctuation\">,</span> filename<span class=\"token punctuation\">,</span> classnames<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>\r\n  img <span class=\"token operator\">=</span> load_and_pred_image<span class=\"token punctuation\">(</span>filename<span class=\"token punctuation\">)</span>\r\n  pred <span class=\"token operator\">=</span> model<span class=\"token punctuation\">.</span>predict<span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span>expand_dims<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">,</span> axis<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span>\r\n    pred_class <span class=\"token operator\">=</span> class_names<span class=\"token punctuation\">[</span>pred<span class=\"token punctuation\">.</span>argmax<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\n  <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span>\r\n    pred_class <span class=\"token operator\">=</span> class_names<span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>tf<span class=\"token punctuation\">.</span><span class=\"token builtin\">round</span><span class=\"token punctuation\">(</span>pred<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\r\n\r\n  plt<span class=\"token punctuation\">.</span>imshow<span class=\"token punctuation\">(</span>img<span class=\"token punctuation\">)</span>\r\n  plt<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"Prediction: </span><span class=\"token interpolation\"><span class=\"token punctuation\">{</span>pred_class<span class=\"token punctuation\">}</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span>\r\n  plt<span class=\"token punctuation\">.</span>axis<span class=\"token punctuation\">(</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">pred_and_plot_multi<span class=\"token punctuation\">(</span>model_11<span class=\"token punctuation\">,</span> <span class=\"token string\">\"03-steak.jpeg\"</span><span class=\"token punctuation\">,</span> class_names<span class=\"token punctuation\">)</span>\r\n\r\nmodel_11<span class=\"token punctuation\">.</span>save<span class=\"token punctuation\">(</span><span class=\"token string\">\"saved_trained_model_model11\"</span><span class=\"token punctuation\">)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span></span></pre></div>\n<ul>\n<li>03_CNN2.ipynb</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token keyword\">from</span> tensorflow<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>preprocessing<span class=\"token punctuation\">.</span>image <span class=\"token keyword\">import</span> ImageDataGenerator\r\n\r\ntest_dir <span class=\"token operator\">=</span> <span class=\"token string\">\"10_food_classes_all_data/test/\"</span>\r\n\r\ntest_datagenerator <span class=\"token operator\">=</span> ImageDataGenerator<span class=\"token punctuation\">(</span>rescale <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span><span class=\"token number\">255</span><span class=\"token punctuation\">)</span>\r\n\r\ntest_data <span class=\"token operator\">=</span> test_datagenerator<span class=\"token punctuation\">.</span>flow_from_directory<span class=\"token punctuation\">(</span>\r\n    test_dir<span class=\"token punctuation\">,</span>\r\n    batch_size <span class=\"token operator\">=</span> <span class=\"token number\">32</span><span class=\"token punctuation\">,</span>\r\n    target_size <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">224</span><span class=\"token punctuation\">,</span> <span class=\"token number\">224</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\r\n    class_mode <span class=\"token operator\">=</span> <span class=\"token string\">\"categorical\"</span>\r\n<span class=\"token punctuation\">)</span>\r\n\r\nload_model_11 <span class=\"token operator\">=</span> tf<span class=\"token punctuation\">.</span>keras<span class=\"token punctuation\">.</span>models<span class=\"token punctuation\">.</span>load_model<span class=\"token punctuation\">(</span><span class=\"token string\">\"saved_trained_model_model11\"</span><span class=\"token punctuation\">)</span>\r\nload_model_11<span class=\"token punctuation\">.</span>evaluate<span class=\"token punctuation\">(</span>test_data<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># 79/79 [==============================] - 19s 229ms/step - loss: 1.8192 - accuracy: 0.3508</span>\r\n<span class=\"token comment\"># [1.819219946861267, 0.3508000075817108]</span>\r\n\r\n\r\n<span class=\"token comment\">## model11</span>\r\n<span class=\"token comment\"># Epoch 5/5</span>\r\n<span class=\"token comment\"># 235/235 [==============================] - 366s 2s/step - loss: 1.9751 - accuracy: 0.3169 - val_loss: 1.8192 - val_accuracy: 0.3508</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<hr>\n<h4 id=\"pytorch-이어서\" style=\"position:relative;\">pytorch (이어서)<a href=\"#pytorch-%EC%9D%B4%EC%96%B4%EC%84%9C\" aria-label=\"pytorch 이어서 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ul>\n<li>002_pytorch.ipynb</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\"><span class=\"token comment\">## 002_pytorch.ipynb</span>\r\n<span class=\"token keyword\">import</span> torch\r\n<span class=\"token keyword\">import</span> numpy <span class=\"token keyword\">as</span> np\r\nnumpy_data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>numpy_data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> numpy_data\r\n<span class=\"token comment\"># (numpy.ndarray,</span>\r\n<span class=\"token comment\">#  array([[0.03579957, 0.99645713, 0.68238137],</span>\r\n<span class=\"token comment\">#         [0.18713323, 0.27620823, 0.71559158]]))</span>\r\ntorch_numpy <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>from_numpy<span class=\"token punctuation\">(</span>numpy_data<span class=\"token punctuation\">)</span>\r\ntorch_numpy\r\n<span class=\"token comment\"># tensor([[0.0358, 0.9965, 0.6824],</span>\r\n<span class=\"token comment\">#         [0.1871, 0.2762, 0.7156]], dtype=torch.float64)</span>\r\ntensor_numpy_direct <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span>numpy_data<span class=\"token punctuation\">)</span>\r\ntensor_numpy_direct\r\n<span class=\"token comment\"># tensor([[0.0358, 0.9965, 0.6824],</span>\r\n<span class=\"token comment\">#         [0.1871, 0.2762, 0.7156]], dtype=torch.float64)</span>\r\n\r\ntensor_numpy_direct<span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>tensor_numpy_direct<span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># (array([[0.03579957, 0.99645713, 0.68238137],</span>\r\n <span class=\"token comment\">#        [0.18713323, 0.27620823, 0.71559158]]),</span>\r\n <span class=\"token comment\"># numpy.ndarray)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">numpy_data <span class=\"token operator\">=</span> np<span class=\"token punctuation\">.</span>random<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span>\r\nnumpy_data\r\n<span class=\"token comment\"># array([[0.60448534, 0.20705905, 0.24916817],</span>\r\n<span class=\"token comment\">#        [0.33687396, 0.80828289, 0.84353776]])</span>\r\n\r\nmy_tensor2 <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>tensor<span class=\"token punctuation\">(</span>numpy_data<span class=\"token punctuation\">)</span>\r\nmy_tensor2\r\n<span class=\"token comment\"># tensor([[0.6045, 0.2071, 0.2492],</span>\r\n<span class=\"token comment\">#         [0.3369, 0.8083, 0.8435]], dtype=torch.float64)</span>\r\nmy_tensor3 <span class=\"token operator\">=</span> torch_numpy\r\nmy_tensor3\r\n<span class=\"token comment\"># tensor([[0.0358, 0.9965, 0.6824],</span>\r\n<span class=\"token comment\">#         [0.1871, 0.2762, 0.7156]], dtype=torch.float64)</span>\r\ntorch<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>my_tensor2<span class=\"token punctuation\">,</span> my_tensor3<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dim <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># tensor([[0.6045, 0.2071, 0.2492, 0.0358, 0.9965, 0.6824],</span>\r\n<span class=\"token comment\">#         [0.3369, 0.8083, 0.8435, 0.1871, 0.2762, 0.7156]], dtype=torch.float64)</span>\r\ntorch<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>my_tensor2<span class=\"token punctuation\">,</span> my_tensor3<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># tensor([[0.6045, 0.2071, 0.2492],</span>\r\n<span class=\"token comment\">#         [0.3369, 0.8083, 0.8435],</span>\r\n<span class=\"token comment\">#         [0.0358, 0.9965, 0.6824],</span>\r\n<span class=\"token comment\">#         [0.1871, 0.2762, 0.7156]], dtype=torch.float64)</span>\r\ntorch<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>my_tensor3<span class=\"token punctuation\">,</span> my_tensor2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> dim <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># tensor([[0.0358, 0.9965, 0.6824, 0.6045, 0.2071, 0.2492],</span>\r\n<span class=\"token comment\">#         [0.1871, 0.2762, 0.7156, 0.3369, 0.8083, 0.8435]], dtype=torch.float64)</span>\r\ntorch<span class=\"token punctuation\">.</span>cat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>my_tensor3<span class=\"token punctuation\">,</span> my_tensor2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># tensor([[0.0358, 0.9965, 0.6824],</span>\r\n<span class=\"token comment\">#         [0.1871, 0.2762, 0.7156],</span>\r\n<span class=\"token comment\">#         [0.6045, 0.2071, 0.2492],</span>\r\n<span class=\"token comment\">#         [0.3369, 0.8083, 0.8435]], dtype=torch.float64)</span>\r\nmy_tensor2<span class=\"token punctuation\">,</span> my_tensor2<span class=\"token punctuation\">.</span>clip<span class=\"token punctuation\">(</span><span class=\"token number\">0.3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0.8</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># (tensor([[0.6045, 0.2071, 0.2492],</span>\r\n<span class=\"token comment\">#          [0.3369, 0.8083, 0.8435]], dtype=torch.float64),</span>\r\n<span class=\"token comment\">#  tensor([[0.6045, 0.3000, 0.3000],</span>\r\n<span class=\"token comment\">#          [0.3369, 0.8000, 0.8000]], dtype=torch.float64))</span>\r\nmy_tensor2<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">(</span>my_tensor3<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># tensor([[0.0216, 0.2063, 0.1700],</span>\r\n<span class=\"token comment\">#         [0.0630, 0.2233, 0.6036]], dtype=torch.float64)</span>\r\nmy_tensor2 <span class=\"token operator\">*</span> my_tensor3\r\n<span class=\"token comment\"># tensor([[0.0216, 0.2063, 0.1700],</span>\r\n<span class=\"token comment\">#         [0.0630, 0.2233, 0.6036]], dtype=torch.float64)</span>\r\nmy_tensor2<span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>my_tensor3<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># tensor([[0.3980, 0.3486],</span>\r\n<span class=\"token comment\">#         [1.3931, 0.8899]], dtype=torch.float64)</span>\r\n<span class=\"token punctuation\">(</span>my_tensor2<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>matmul<span class=\"token punctuation\">(</span>my_tensor3<span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># tensor([[0.0847, 0.6954, 0.6536],</span>\r\n<span class=\"token comment\">#         [0.1587, 0.4296, 0.7197],</span>\r\n<span class=\"token comment\">#         [0.1668, 0.4813, 0.7737]], dtype=torch.float64)</span>\r\nmy_tensor2 @ my_tensor3<span class=\"token punctuation\">.</span>T\r\n<span class=\"token comment\"># tensor([[0.3980, 0.3486],</span>\r\n<span class=\"token comment\">#         [1.3931, 0.8899]], dtype=torch.float64)</span>\r\nmy_tensor2<span class=\"token punctuation\">.</span>T @ my_tensor3\r\n<span class=\"token comment\"># tensor([[0.0847, 0.6954, 0.6536],</span>\r\n<span class=\"token comment\">#         [0.1587, 0.4296, 0.7197],</span>\r\n<span class=\"token comment\">#         [0.1668, 0.4813, 0.7737]], dtype=torch.float64)</span>\r\nmy_tensor2_sum <span class=\"token operator\">=</span> my_tensor2<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nmy_tensor2<span class=\"token punctuation\">,</span> my_tensor2_sum\r\n<span class=\"token comment\"># (tensor([[0.6045, 0.2071, 0.2492],</span>\r\n<span class=\"token comment\">#          [0.3369, 0.8083, 0.8435]], dtype=torch.float64),</span>\r\n<span class=\"token comment\">#  tensor(3.0494, dtype=torch.float64))</span>\r\nmy_tensor2_sum<span class=\"token punctuation\">.</span>numpy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\narray<span class=\"token punctuation\">(</span><span class=\"token number\">3.04940718</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># array(3.04940718)</span>\r\nmy_tensor2_sum<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>my_tensor2_sum<span class=\"token punctuation\">.</span>item<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># (3.0494071761345016, float)</span>\r\nmy_tensor2<span class=\"token punctuation\">,</span> my_tensor2<span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> my_tensor2<span class=\"token punctuation\">.</span>T\r\n<span class=\"token comment\"># (tensor([[0.6045, 0.2071, 0.2492],</span>\r\n<span class=\"token comment\">#          [0.3369, 0.8083, 0.8435]], dtype=torch.float64),</span>\r\n<span class=\"token comment\">#  tensor([[0.6045, 0.2071],</span>\r\n<span class=\"token comment\">#          [0.2492, 0.3369],</span>\r\n<span class=\"token comment\">#          [0.8083, 0.8435]], dtype=torch.float64),</span>\r\n<span class=\"token comment\">#  tensor([[0.6045, 0.3369],</span>\r\n<span class=\"token comment\">#          [0.2071, 0.8083],</span>\r\n<span class=\"token comment\">#          [0.2492, 0.8435]], dtype=torch.float64))</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre style=\"counter-reset: linenumber NaN\" class=\"language-python line-numbers\"><code class=\"language-python\">matrix_A <span class=\"token operator\">=</span> torch<span class=\"token punctuation\">.</span>arange<span class=\"token punctuation\">(</span><span class=\"token number\">20</span><span class=\"token punctuation\">,</span> dtype<span class=\"token operator\">=</span>torch<span class=\"token punctuation\">.</span>float32<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>reshape<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span>\r\nmatrix_A\r\n<span class=\"token comment\"># tensor([[ 0.,  1.,  2.,  3.],</span>\r\n<span class=\"token comment\">#         [ 4.,  5.,  6.,  7.],</span>\r\n<span class=\"token comment\">#         [ 8.,  9., 10., 11.],</span>\r\n<span class=\"token comment\">#         [12., 13., 14., 15.],</span>\r\n<span class=\"token comment\">#         [16., 17., 18., 19.]])</span>\r\nmatrix_B <span class=\"token operator\">=</span> matrix_A<span class=\"token punctuation\">.</span>clone<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\nmatrix_B\r\n<span class=\"token comment\"># tensor([[ 0.,  1.,  2.,  3.],</span>\r\n<span class=\"token comment\">#         [ 4.,  5.,  6.,  7.],</span>\r\n<span class=\"token comment\">#         [ 8.,  9., 10., 11.],</span>\r\n<span class=\"token comment\">#         [12., 13., 14., 15.],</span>\r\n<span class=\"token comment\">#         [16., 17., 18., 19.]])</span>\r\nmatrix_A <span class=\"token operator\">+</span> matrix_B\r\n<span class=\"token comment\"># tensor([[ 0.,  2.,  4.,  6.],</span>\r\n<span class=\"token comment\">#         [ 8., 10., 12., 14.],</span>\r\n<span class=\"token comment\">#         [16., 18., 20., 22.],</span>\r\n<span class=\"token comment\">#         [24., 26., 28., 30.],</span>\r\n<span class=\"token comment\">#         [32., 34., 36., 38.]])</span>\r\n\r\nmatrix_A\r\n<span class=\"token comment\"># tensor([[ 0.,  1.,  2.,  3.],</span>\r\n<span class=\"token comment\">#         [ 4.,  5.,  6.,  7.],</span>\r\n<span class=\"token comment\">#         [ 8.,  9., 10., 11.],</span>\r\n<span class=\"token comment\">#         [12., 13., 14., 15.],</span>\r\n<span class=\"token comment\">#         [16., 17., 18., 19.]])</span>\r\nmatrix_A<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># tensor(9.5000)</span>\r\nmatrix_A<span class=\"token punctuation\">.</span>mean<span class=\"token punctuation\">(</span>dim<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># tensor([ 8.,  9., 10., 11.])</span>\r\n\r\nmatrix_A<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> matrix_A<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token comment\"># tensor([ 8.,  9., 10., 11.])</span>\r\nmatrix_A<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># tensor(190.)</span>\r\nmatrix_A<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># matrix_A.sum(axis = 0)</span>\r\nmatrix_A<span class=\"token punctuation\">.</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>axis <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token comment\"># tensor([ 6., 22., 38., 54., 70.])</span>\r\n\r\nmatrix_A<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">,</span> matrix_A<span class=\"token punctuation\">.</span>shape<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\r\n<span class=\"token comment\"># (torch.Size([5, 4]), 5)</span></code><span aria-hidden=\"true\" class=\"line-numbers-rows\" style=\"white-space: normal; width: auto; left: 0;\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></pre></div>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#12%EC%9D%BC%EC%B0%A8\">12일차</a></p>\n</li>\n<li>\n<p><a href=\"#cnn\">CNN</a></p>\n<ul>\n<li><a href=\"#data-augmentation\">data Augmentation</a></li>\n<li><a href=\"#multi-classification-cnn\">multi-classification (CNN)</a></li>\n<li><a href=\"#pytorch-%EC%9D%B4%EC%96%B4%EC%84%9C\">pytorch (이어서)</a></li>\n</ul>\n</li>\n</ul>","frontmatter":{"title":"AI 이노베이션 스퀘어 3기 언어반 12일차 후기"}}},"pageContext":{"slug":"/ai-이노베이션-스퀘어-언어-12일차/"}},"staticQueryHashes":["3159585216"]}