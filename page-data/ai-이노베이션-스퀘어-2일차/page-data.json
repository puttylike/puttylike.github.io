{"componentChunkName":"component---src-templates-blog-post-js","path":"/ai-이노베이션-스퀘어-2일차/","result":{"data":{"markdownRemark":{"html":"<h3>2일차</h3>\n<p>금일 오전에는 어제 오후에 수강생 각자가 문제를 풀어 봤던 예제들에 관해 해설을 듣는 시간이 있었다.\n오후에는 파이썬 반복문 위주로 배웠고, 문제 풀이 시간을 가졌다.</p>\n<p>이후, 지금까지 배웠던 내용에 대한 점검 겸 (왠지 어느 정도는 이번 주에 배웠어야 할 것 같지만) 앞으로 배울 내용에 관한 점검 차원에서 사전 점검 시간을 가졌다. lambda가 기억이 전혀 안 난다......... 객관식인데도, 손코딩은 역시 헷갈린다. 역시 공부 열심히 해야겠다.\n<br/><br/></p>\n<h4>메모</h4>\n<ul>\n<li>스탠포드에서 만든 deepchem - 분자구조 유전공학 생명공학 데이터 구하기</li>\n<li>주가 - 데이터가 너무 커서 LSTM을 쓰기도 한다.</li>\n</ul>\n<hr>\n<h3>1. 문제 풀이 시간에 배운 점</h3>\n<p>(1) \"  ' \" 도 쓸 수 있고, '  \\n' ' 도 쓸 수 있고.<br/>-> \\n을 써야 '를 특수문자로 인식한다고 한다.</p>\n<p>(2) print(\"   \") 안에서 \\n이나 \\t 이 먹힌다.<br/>implemented by C가 여기서 또.</p>\n<p>(3) str_A = \"     2\"<br/>-> 이 문자 안에 있는 애들은 모두 str이다. '2'도.</p>\n<p>(4) <u><code>int</code> object is not callable.</u><br/>파이썬은 인터프리터 언어다.<br/><br/>누가 봐도 아는 함수 len에 어떤 숫자 값을 넣으면, 함수가 아닌 숫자로 인식돼 이후 이 len을 함수로 사용하려고 하면 발생하는 에러였다.<br/>kernel restart를 하면 해결이 된다지만, 애초에 변수명을 len을 쓰지 말고 len_A 같은 거로 써야 맞다.실무에서 이런 실수가 많다니 새삼 놀랍다. 함수명을 아무렇지도 않게 변수명으로 쓰려고 한다니... ㅎㅎ<br/><br/>나는 배치 위주로 개발하다 보니까 화면 수정할 일이 많이 없다. 뭔가 신규 용어를 등록할 일이 생기더라도, DA#에서 한글 단어를 알아서 잘 변환해 줘서 내겐 고민할 거리도 아니었다.<br/>-> 변수 notation 규칙을 생각해 봐야겠다.</p>\n<p>(5) .split의 return은 리스트다</p>\n<p>(6) [:] slicing의 리턴도 리스트다</p>\n<p>(7) str = \"              .WX.Y\".split(\".\")<br/>-> 이 변수는 리스트다<br/>str[-2]는 <b>'WX'</b>이다. WX 아니고.</p>\n<p>(8) files = 'tmp/cat.9.jpg:python.1.py:temp/hello.6316.txt:test.6331.docx'<br/>-> 파일명 다 불러와서 전처리하는게 편하긴 하나 보다.</p>\n<p>(9) 데이터 전처리 전 look through 해보자.</p>\n<hr>\n<h3>2. 반복문과 조건문 - if / for / while</h3>\n<p>(1) if</p>\n<ol>\n<li>{ }가 없는 게 정말 신기했다.<br/>다만 이게 없으니까 스페이스 n번이나 tab... 하나만 계속 써야 한다.</li>\n<li>if for while def... -> 예약어는 : 로 끝난다. list comprehension 제외.</li>\n<li>if in list, dic...  -> in 다음에는 연속된 데이터가 나온다.</li>\n</ol>\n<p>(2) for</p>\n<ol>\n<li>for - range(n) -> 0부터 마지막 전까지(n-1까지) n개 나온다</li>\n<li>cf. print(data, \" \", end='') # 1줄로 나오게</li>\n</ol>\n<p>(3) enumerate (for 관련) -> range보다 enumerate를 쓸 수 있게 해야지</p>\n<ol>\n<li>index와 value가 동시에 넘어 온다.</li>\n<li>for 뒤에 index ,data 따로 받는 경우가 일반적이다</li>\n<li>enumerate,50 -> 이렇게 50 넣어서 인덱스 값 바꾸는 건 쓰지 말자</li>\n</ol>\n<p>(3) list comprehension  : [ for ] 리스트 안에 for</p>\n<ol>\n<li>ml 에 자주 쓰이는 기법</li>\n<li>리스트의 [...] 괄호 안에 for 루프를 사용하여 반복적으로 표현식 expression을 실행해서 리스트 요소들을 정의하는 방법</li>\n<li><u>list 안에서 for, if에 : 쓰지 않는다.</u></li>\n</ol>\n<p>(4) zip(...) 함수 : 동일한 길이의 리스트를 같은 인덱스 끼리 잘라서 리스트로 반환해주는 역할을 한다.</p>\n<ol>\n<li>list (zip(a,b)) -> zip만 하면 안 된다</li>\n<li>통으로 개-고양이 읽어서 코드로 분리할 때 유용하다. zip</li>\n</ol>\n<hr>\n<h3>3. 문제 풀이 시간에 배운 점 [09.20 기준 수정을 더 해보자 ㅠ]</h3>\n<p>(5) CNN에 쓰인다. feature filter할 때</p>\n<p>(7) - slicing : slicing의 리턴 값은 리스트다...!!\nprint([10,20,30][1:-1]) # [20]\nprint([10,20,30][1]) # 20</p>\n<p>[[x[0:1],x[-2] for x in test<em>data]<br>\n[[x[0:1],x[-2:-1]] for x in test</em>data]</p>\n<p>(10) C언어는 정규표현식으로 parsing 해야 하지만, 파이썬은 그냥 in으로 끝 ㅎ\nall<em>files = glob.glob('test</em>dir3/*')\ndog<em>list = [ file</em>name for file<em>name in all</em>files if 'dog' in file<em>name ] # dog 드가는 파일명\ndog</em>list</p>\n<p>(12) 강화학습-알파고에 쓸 수 있는 기본 코드.\n3x3 바둑판 ->> (가로위치,세로위치,돌종류)\n[   [0,0,0] , [1,0,0],   [2,0,0]<br>\n....</p>\n<p>(13) cnn 아키텍처 구성방법</p>\n<blockquote>\n<blockquote>\n<p>tensorflow 2.x 강의 03 keras 유튜브 시청 추천</p>\n</blockquote>\n</blockquote>\n<p>layer<em>names = [ 'input', 'conv1', 'pooling1', 'conv2', 'flatten' ]\nparameter</em>nums = [ 0, 64, 64, 128, 512 ]</p>\n<p>for index, (layer<em>name, parameter</em>num) in enumerate(zip(layer<em>names, parameter</em>nums)):\nprint(index+1, layer<em>name, parameter</em>num)</p>\n<hr>\n<h3>함수</h3>\n<p>C / java 와 달리 return 값 여러 개 가능.\ncf. 포인터 리턴은 금물 ㅠ 구조체 return ! 배열은 형태가 같아야만 쓸 수 있으니까 ;;</p>","frontmatter":{"title":"AI 이노베이션 스퀘어 12기 기본반 2일차 후기"}}},"pageContext":{"slug":"/ai-이노베이션-스퀘어-2일차/"}},"staticQueryHashes":["3159585216"]}