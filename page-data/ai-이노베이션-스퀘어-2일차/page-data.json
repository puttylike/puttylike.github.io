{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/ai-이노베이션-스퀘어-2일차/",
    "result": {"data":{"markdownRemark":{"html":"<h3 id=\"2일차\" style=\"position:relative;\">2일차<a href=\"#2%EC%9D%BC%EC%B0%A8\" aria-label=\"2일차 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>금일 오전에는 어제 오후에 수강생 각자가 문제를 풀어 봤던 예제들에 관해 해설을 듣는 시간이 있었다.\r\n오후에는 파이썬 반복문 위주로 배웠고, 문제 풀이 시간을 가졌다.</p>\n<p>이후, 지금까지 배웠던 내용에 대한 점검 겸 (왠지 어느 정도는 이번 주에 배웠어야 할 것 같지만) 앞으로 배울 내용에 관한 점검 차원에서 사전 점검 시간을 가졌다. lambda가 기억이 전혀 안 난다......... 객관식인데도, 손코딩은 역시 헷갈린다. 역시 공부 열심히 해야겠다.\r\n<br/><br/></p>\n<h4 id=\"메모\" style=\"position:relative;\">메모<a href=\"#%EB%A9%94%EB%AA%A8\" aria-label=\"메모 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h4>\n<ul>\n<li>스탠포드에서 만든 deepchem - 분자구조 유전공학 생명공학 데이터 구하기</li>\n<li>주가 - 데이터가 너무 커서 LSTM을 쓰기도 한다.</li>\n</ul>\n<hr>\n<h3 id=\"1-문제-풀이-시간에-배운-점\" style=\"position:relative;\">1. 문제 풀이 시간에 배운 점<a href=\"#1-%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4-%EC%8B%9C%EA%B0%84%EC%97%90-%EB%B0%B0%EC%9A%B4-%EC%A0%90\" aria-label=\"1 문제 풀이 시간에 배운 점 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>(1) \"  ' \" 도 쓸 수 있고, '  ' ' 도 쓸 수 있고.<br/>-> \\을 써야 '를 특수문자로 인식한다고 한다.</p>\n<p>(2) print(\"   \") 안에서 \\n이나 \\t 이 먹힌다.<br/>implemented by C가 여기서 또.</p>\n<p>(3) str_A = \"     2\"<br/>-> 이 문자 안에 있는 애들은 모두 str이다. '2'도.</p>\n<p>(4) <u><code class=\"language-text\">int</code> object is not callable.</u><br/>파이썬은 인터프리터 언어다.<br/><br/>누가 봐도 아는 함수 len에 어떤 숫자 값을 넣으면, 함수가 아닌 숫자로 인식돼 이후 이 len을 함수로 사용하려고 하면 발생하는 에러였다.<br/>kernel restart를 하면 해결이 된다지만, 애초에 변수명을 len을 쓰지 말고 len_A 같은 거로 써야 맞다.실무에서 이런 실수가 많다니 새삼 놀랍다. 함수명을 아무렇지도 않게 변수명으로 쓰려고 한다니... ㅎㅎ<br/><br/>나는 배치 위주로 개발하다 보니까 화면 수정할 일이 많이 없다. 뭔가 신규 용어를 등록할 일이 생기더라도, DA#에서 한글 단어를 알아서 잘 변환해 줘서 내겐 고민할 거리도 아니었다.<br/>-> 변수 notation 규칙을 생각해 봐야겠다.</p>\n<p>(5) .split의 return은 리스트다</p>\n<p>(6) [:] slicing의 리턴도 리스트다</p>\n<p>(7) str = \"              .WX.Y\".split(\".\")<br/>-> 이 변수는 리스트다<br/>str[-2]는 <b>'WX'</b>이다. WX 아니고.</p>\n<p>(8) files = 'tmp/cat.9.jpg:python.1.py:temp/hello.6316.txt:test.6331.docx'<br/>-> 파일명 다 불러와서 전처리하는게 편하긴 하나 보다.</p>\n<p>(9) 데이터 전처리 전 look through 해보자.</p>\n<hr>\n<h3 id=\"2-반복문과-조건문---if--for--while\" style=\"position:relative;\">2. 반복문과 조건문 - if / for / while<a href=\"#2-%EB%B0%98%EB%B3%B5%EB%AC%B8%EA%B3%BC-%EC%A1%B0%EA%B1%B4%EB%AC%B8---if--for--while\" aria-label=\"2 반복문과 조건문   if  for  while permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>(1) if</p>\n<ol>\n<li>{ }가 없는 게 정말 신기했다.<br/>다만 이게 없으니까 스페이스 n번이나 tab... 하나만 계속 써야 한다.</li>\n<li>if for while def... -> 예약어는 : 로 끝난다. list comprehension 제외.</li>\n<li>if in list, dic...  -> in 다음에는 연속된 데이터가 나온다.</li>\n</ol>\n<p>(2) for</p>\n<ol>\n<li>for - range(n) -> 0부터 마지막 전까지(n-1까지) n개 나온다</li>\n<li>cf. print(data, \" \", end='') # 1줄로 나오게</li>\n</ol>\n<p>(3) enumerate (for 관련) -> range보다 enumerate를 쓸 수 있게 해야지</p>\n<ol>\n<li>index와 value가 동시에 넘어 온다.</li>\n<li>for 뒤에 index ,data 따로 받는 경우가 일반적이다</li>\n<li>enumerate,50 -> 이렇게 50 넣어서 인덱스 값 바꾸는 건 쓰지 말자</li>\n</ol>\n<p>(3) list comprehension  : [ for ] 리스트 안에 for</p>\n<ol>\n<li>ml 에 자주 쓰이는 기법</li>\n<li>리스트의 [...] 괄호 안에 for 루프를 사용하여 반복적으로 표현식 expression을 실행해서 리스트 요소들을 정의하는 방법</li>\n<li><u>list 안에서 for, if에 : 쓰지 않는다.</u></li>\n</ol>\n<p>(4) zip(...) 함수 : 동일한 길이의 리스트를 같은 인덱스 끼리 잘라서 리스트로 반환해주는 역할을 한다.</p>\n<ol>\n<li>list (zip(a,b)) -> zip만 하면 안 된다</li>\n<li>통으로 개-고양이 읽어서 코드로 분리할 때 유용하다. zip</li>\n</ol>\n<hr>\n<h3 id=\"3-문제-풀이-시간에-배운-점\" style=\"position:relative;\">3. 문제 풀이 시간에 배운 점<a href=\"#3-%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4-%EC%8B%9C%EA%B0%84%EC%97%90-%EB%B0%B0%EC%9A%B4-%EC%A0%90\" aria-label=\"3 문제 풀이 시간에 배운 점 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>[09.20 기준 수정을 더 해보자 ㅠ]</p>\n<p>(5) CNN에 쓰인다. feature filter할 때</p>\n<p>(7) - slicing : slicing의 리턴 값은 리스트다...!!\r\nprint([10,20,30][1:-1]) # [20]\r\nprint([10,20,30][1]) # 20</p>\n<p>[[x[0:1],x[-2] for x in test_data]<br>\n[[x[0:1],x[-2:-1]] for x in test_data]</p>\n<p>(10) C언어는 정규표현식으로 parsing 해야 하지만, 파이썬은 그냥 in으로 끝 ㅎ\r\nall_files = glob.glob('test_dir3/*')\r\ndog_list = [ file_name for file_name in all_files if 'dog' in file_name ] # dog 드가는 파일명\r\ndog_list</p>\n<p>(12) 강화학습-알파고에 쓸 수 있는 기본 코드.\r\n3x3 바둑판 ->> (가로위치,세로위치,돌종류)\r\n[   [0,0,0] , [1,0,0],   [2,0,0]<br>\n....</p>\n<p>(13) cnn 아키텍처 구성방법</p>\n<blockquote>\n<blockquote>\n<p>tensorflow 2.x 강의 03 keras 유튜브 시청 추천</p>\n</blockquote>\n</blockquote>\n<p>layer_names = [ 'input', 'conv1', 'pooling1', 'conv2', 'flatten' ]\r\nparameter_nums = [ 0, 64, 64, 128, 512 ]</p>\n<p>for index, (layer_name, parameter_num) in enumerate(zip(layer_names, parameter_nums)):\r\nprint(index+1, layer_name, parameter_num)</p>\n<hr>\n<h3 id=\"-다음시간-부터-배울-함수\" style=\"position:relative;\">* 다음시간 부터 배울, 함수<a href=\"#-%EB%8B%A4%EC%9D%8C%EC%8B%9C%EA%B0%84-%EB%B6%80%ED%84%B0-%EB%B0%B0%EC%9A%B8-%ED%95%A8%EC%88%98\" aria-label=\" 다음시간 부터 배울 함수 permalink\" class=\"custom-class after\"><svg aria-hidden=\"true\" height=\"20\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"20\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a></h3>\n<p>C / java 와 달리 return 값 여러 개 가능.\r\ncf. 포인터 리턴은 금물 ㅠ 구조체 return ! 배열은 형태가 같아야만 쓸 수 있으니까 ;;</p>","tableOfContents":"<ul>\n<li>\n<p><a href=\"#2%EC%9D%BC%EC%B0%A8\">2일차</a></p>\n<ul>\n<li><a href=\"#%EB%A9%94%EB%AA%A8\">메모</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"#1-%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4-%EC%8B%9C%EA%B0%84%EC%97%90-%EB%B0%B0%EC%9A%B4-%EC%A0%90\">1. 문제 풀이 시간에 배운 점</a></p>\n</li>\n<li>\n<p><a href=\"#2-%EB%B0%98%EB%B3%B5%EB%AC%B8%EA%B3%BC-%EC%A1%B0%EA%B1%B4%EB%AC%B8---if--for--while\">2. 반복문과 조건문 - if / for / while</a></p>\n</li>\n<li>\n<p><a href=\"#3-%EB%AC%B8%EC%A0%9C-%ED%92%80%EC%9D%B4-%EC%8B%9C%EA%B0%84%EC%97%90-%EB%B0%B0%EC%9A%B4-%EC%A0%90\">3. 문제 풀이 시간에 배운 점</a></p>\n</li>\n<li>\n<p><a href=\"#-%EB%8B%A4%EC%9D%8C%EC%8B%9C%EA%B0%84-%EB%B6%80%ED%84%B0-%EB%B0%B0%EC%9A%B8-%ED%95%A8%EC%88%98\">* 다음시간 부터 배울, 함수</a></p>\n</li>\n</ul>","frontmatter":{"title":"AI 이노베이션 스퀘어 12기 기본반 2일차 후기"}}},"pageContext":{"slug":"/ai-이노베이션-스퀘어-2일차/"}},
    "staticQueryHashes": ["3159585216"]}